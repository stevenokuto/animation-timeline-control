{"version":3,"file":"animation-timeline.js","mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;UCVA;UACA;;;;;WCDA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;ACNA;AAMO,IAAMA,qBAAb;AAAA;AAAA;;AAAA,4CAC2C,EAD3C;AAAA;;AAAA;AAAA;AAAA,WAGE;AACA,gBAAGC,KAAH,EAAkBC,QAAlB,EAAuD;AACrD,UAAI,CAACA,QAAL,EAAe;AACb;AACD;;AAED,WAAKC,cAAL,CAAoBC,IAApB,CAAyB;AACvBH,QAAAA,KAAK,EAAEA,KADgB;AAEvBC,QAAAA,QAAQ,EAAEA;AAFa,OAAzB;AAID;AACD;AACF;AACA;;AAhBA;AAAA;AAAA,WAiBE,aAAID,KAAJ,EAAmBC,QAAnB,EAAwD;AACtD,WAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBE,MAApB,CAA2B,UAACC,KAAD,EAAW;AAC1D,eAAOA,KAAK,IAAIA,KAAK,CAACJ,QAAN,IAAkBA,QAA3B,IAAuCI,KAAK,CAACL,KAAN,IAAeA,KAA7D;AACD,OAFqB,CAAtB;AAGD;AAED;AACF;AACA;;AAzBA;AAAA;AAAA,WA0BE,kBAAe;AACb,WAAKE,cAAL,CAAoBI,MAApB,GAA6B,CAA7B;AACD,KA5BH,CA8BE;AACA;;AA/BF;AAAA;AAAA,WAgCE,cAAKN,KAAL,EAAoBO,IAApB,EAAqC;AACnC,WAAKL,cAAL,CAAoBM,OAApB,CAA4B,UAACH,KAAD,EAAW;AACrC,YAAIA,KAAK,IAAIA,KAAK,CAACL,KAAN,IAAeA,KAAxB,IAAiCK,KAAK,CAACJ,QAA3C,EAAqD;AACnDI,UAAAA,KAAK,CAACJ,QAAN,CAAeM,IAAf;AACD;AACF,OAJD;AAKD;AAtCH;;AAAA;AAAA;;ACNO,IAAKE,qBAAZ;;WAAYA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;GAAAA,0BAAAA;;;;;;;;ACAZ;AAKA;AAEO,IAAMC,kBAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACE,8BACEC,aADF,EAEEC,QAFF,EAGEC,OAHF,EAIEC,YAJF,EAKEC,YALF,EAOK;AAAA,UADHC,YACG,uEADY,KACZ;AACH;AACA,UAAIC,MAAyB,GAAG,IAAhC;;AACA,UAAIN,aAAJ,EAAmB;AACjB,YAAMO,KAAU,GAAGP,aAAnB;;AACA,YAAIO,KAAK,CAACJ,YAAD,CAAL,KAAwBK,SAA5B,EAAuC;AACrC,cAAMC,KAAK,GAAGF,KAAK,CAACJ,YAAD,CAAnB;;AACA,cAAI,CAACE,YAAL,EAAmB;AACjB,mBAAOI,KAAP;AACD;;AACDH,UAAAA,MAAM,GAAGA,MAAM,IAAI,EAAnB;AACAA,UAAAA,MAAM,CAACd,IAAP,CAAYiB,KAAZ;AACD;AACF;;AAED,UAAIR,QAAQ,IAAIA,QAAQ,CAACS,cAAzB,EAAyC;AACvC,YAAMH,MAAU,GAAGN,QAAQ,CAACS,cAA5B;;AACA,YAAIH,MAAK,CAACJ,YAAD,CAAL,KAAwBK,SAA5B,EAAuC;AACrC,cAAMC,MAAK,GAAGF,MAAK,CAACJ,YAAD,CAAnB;;AACA,cAAI,CAACE,YAAL,EAAmB;AACjB,mBAAOI,MAAP;AACD;;AACDH,UAAAA,MAAM,GAAGA,MAAM,IAAI,EAAnB;AACAA,UAAAA,MAAM,CAACd,IAAP,CAAYiB,MAAZ;AACD;AACF;;AACD,UAAME,cAAc,GAAGT,OAAO,GAAGA,OAAO,CAACU,SAAX,GAAuB,IAArD;;AACA,UAAID,cAAc,IAAIA,cAAc,CAACD,cAArC,EAAqD;AACnD,YAAMH,OAAU,GAAGI,cAAc,CAACD,cAAlC;;AACA,YAAIH,OAAK,CAACJ,YAAD,CAAL,KAAwBK,SAA5B,EAAuC;AACrC,cAAMC,OAAK,GAAGF,OAAK,CAACJ,YAAD,CAAnB;;AACA,cAAI,CAACE,YAAL,EAAmB;AACjB,mBAAOI,OAAP;AACD;;AACDH,UAAAA,MAAM,GAAGA,MAAM,IAAI,EAAnB;AACAA,UAAAA,MAAM,CAACd,IAAP,CAAYiB,OAAZ;AACD;AACF;;AAED,aAAOJ,YAAY,IAAIC,MAAhB,IAA0BA,MAAM,CAACX,MAAP,GAAgB,CAA1C,GAA8CW,MAAM,CAACA,MAAM,CAACX,MAAP,GAAgB,CAAjB,CAApD,GAA0ES,YAAjF;AACD;AAED;AACF;AACA;;AA5DA;AAAA;AAAA,WA6DE,qBAAsBH,QAAtB,EAAkDC,OAAlD,EAAmFC,YAAnF,EAAyGC,YAAzG,EAAgK;AAAA,UAArCC,YAAqC,uEAAtB,KAAsB;AAC9J;AACA,UAAIC,MAAkB,GAAG,IAAzB;;AACA,UAAIL,QAAJ,EAAc;AACZ,YAAMM,KAAU,GAAGN,QAAnB;;AACA,YAAIM,KAAK,CAACJ,YAAD,CAAL,KAAwBK,SAA5B,EAAuC;AACrC,cAAMK,OAAO,GAAGN,KAAK,CAACJ,YAAD,CAArB;;AACA,cAAI,CAACE,YAAL,EAAmB;AACjB,mBAAOQ,OAAP;AACD;;AACDP,UAAAA,MAAM,GAAGA,MAAM,IAAI,EAAnB;AACAA,UAAAA,MAAM,CAACd,IAAP,CAAYqB,OAAZ;AACD;AACF;;AACD,UAAMF,cAAc,GAAGT,OAAO,GAAGA,OAAO,CAACU,SAAX,GAAuB,IAArD;;AACA,UAAID,cAAJ,EAAoB;AAClB,YAAMJ,OAAU,GAAGI,cAAnB;;AACA,YAAIJ,OAAK,CAACJ,YAAD,CAAL,KAAwBK,SAA5B,EAAuC;AACrC,cAAMK,QAAO,GAAGN,OAAK,CAACJ,YAAD,CAArB;;AACA,cAAI,CAACE,YAAL,EAAmB;AACjB,mBAAOQ,QAAP;AACD;;AAEDP,UAAAA,MAAM,GAAGA,MAAM,IAAI,EAAnB;AACAA,UAAAA,MAAM,CAACd,IAAP,CAAYqB,QAAZ;AACD;AACF;;AAED,aAAOR,YAAY,IAAIC,MAAhB,IAA0BA,MAAM,CAACX,MAAP,GAAgB,CAA1C,GAA8CW,MAAM,CAACA,MAAM,CAACX,MAAP,GAAgB,CAAjB,CAApD,GAA0ES,YAAjF;AACD;AA1FH;AAAA;AAAA,WA4FE,uBAAqBU,QAArB,EAA6Db,QAA7D,EAAgGC,OAAhG,EAAwJ;AACtJ,UAAMa,KAAK,GAAGhB,kBAAkB,CAACiB,gBAAnB,CAA2DF,QAA3D,EAAqEb,QAArE,EAA+EC,OAA/E,EAAwF,OAAxF,EAAiGJ,2BAAjG,CAAd;AACA,aAAOiB,KAAP;AACD;AA/FH;AAAA;AAAA,WAgGE,2BAAyBD,QAAzB,EAAiEb,QAAjE,EAAoGC,OAApG,EAA6I;AAC3I,UAAMgB,KAAK,GAAGnB,kBAAkB,CAACiB,gBAAnB,CAA4CF,QAA5C,EAAsDb,QAAtD,EAAgEC,OAAhE,EAAyE,WAAzE,EAAsF,YAAtF,CAAd;AACA,aAAOgB,KAAP;AACD;AAnGH;AAAA;AAAA,WAoGE,mCAAiCJ,QAAjC,EAAyEb,QAAzE,EAA4GC,OAA5G,EAAqJ;AACnJ,UAAMgB,KAAK,GAAGnB,kBAAkB,CAACiB,gBAAnB,CAA4CF,QAA5C,EAAsDb,QAAtD,EAAgEC,OAAhE,EAAyE,mBAAzE,EAA8F,KAA9F,CAAd;AACA,aAAOgB,KAAP;AACD;AAvGH;AAAA;AAAA,WAyGE,iCAA+BJ,QAA/B,EAAuEb,QAAvE,EAA0GC,OAA1G,EAAmJ;AACjJ,aAAOH,kBAAkB,CAACiB,gBAAnB,CAA4CF,QAA5C,EAAsDb,QAAtD,EAAgEC,OAAhE,EAAyE,iBAAzE,EAA4F,GAA5F,EAAiG,KAAjG,CAAP;AACD;AA3GH;AAAA;AAAA,WA6GE,6BAA2BY,QAA3B,EAAmEb,QAAnE,EAAsGC,OAAtG,EAA+I;AAC7I,aAAOH,kBAAkB,CAACiB,gBAAnB,CAA4CF,QAA5C,EAAsDb,QAAtD,EAAgEC,OAAhE,EAAyE,aAAzE,EAAwF,OAAxF,EAAiG,KAAjG,CAAP;AACD;AA/GH;AAAA;AAAA,WAgHE,qCAAmCY,QAAnC,EAA2Eb,QAA3E,EAA8GC,OAA9G,EAAuJ;AACrJ,aAAOH,kBAAkB,CAACiB,gBAAnB,CAA4CF,QAA5C,EAAsDb,QAAtD,EAAgEC,OAAhE,EAAyE,qBAAzE,EAAgG,OAAhG,EAAyG,KAAzG,CAAP;AACD;AACD;AACF;AACA;;AArHA;AAAA;AAAA,WAsHE,sBAAoBD,QAApB,EAAgDC,OAAhD,EAAkF;AAChF,aAAOH,kBAAkB,CAACoB,WAAnB,CAAuClB,QAAvC,EAAiDC,OAAjD,EAA0D,QAA1D,EAAoE,EAApE,CAAP;AACD;AAxHH;AAAA;AAAA,WAyHE,wBAAsBD,QAAtB,EAAkDC,OAAlD,EAA6F;AAC3F,aAAOH,kBAAkB,CAACoB,WAAnB,CAAgDlB,QAAhD,EAA0DC,OAA1D,EAAmE,aAAnE,EAAkF,MAAlF,CAAP;AACD;AA3HH;AAAA;AAAA,WA4HE,wBAAsBD,QAAtB,EAAkDC,OAAlD,EAA2F;AACzF,aAAOH,kBAAkB,CAACoB,WAAnB,CAAuClB,QAAvC,EAAiDC,OAAjD,EAA0D,gBAA1D,CAAP;AACD;AA9HH;AAAA;AAAA,WA+HE,4BAA0BD,QAA1B,EAAsDC,OAAtD,EAAwF;AACtF,aAAOH,kBAAkB,CAACoB,WAAnB,CAAuClB,QAAvC,EAAiDC,OAAjD,EAA0D,cAA1D,EAA0E,CAA1E,CAAP;AACD;AAjIH;AAAA;AAAA,WAkIE,yBAAuBD,QAAvB,EAAmDC,OAAnD,EAAqF;AACnF,aAAOH,kBAAkB,CAACoB,WAAnB,CAAuClB,QAAvC,EAAiDC,OAAjD,EAA0D,WAA1D,EAAuE,SAAvE,CAAP;AACD;AApIH;AAAA;AAAA,WAqIE,sBAAoBA,OAApB,EAA6D;AAC3D,aAAOA,OAAO,GAAGA,OAAO,CAACkB,YAAX,GAA0B,MAAC,IAAI,EAA7C;AACD;AAvIH;AAAA;AAAA,WAwIE,2BAAyBN,QAAzB,EAAiEb,QAAjE,EAAoGC,OAApG,EAAmK;AAAA,UAA9BE,YAA8B,uEAAf,IAAe;AACjK,aAAOL,kBAAkB,CAACiB,gBAAnB,CAA6CF,QAA7C,EAAuDb,QAAvD,EAAiEC,OAAjE,EAA0E,WAA1E,EAAuFE,YAAvF,EAAqG,KAArG,CAAP;AACD;AA1IH;AAAA;AAAA,WA4IE,wBAAsBH,QAAtB,EAAkDC,OAAlD,EAA0G;AAAA,UAA9BE,YAA8B,uEAAf,IAAe;AACxG,aAAOL,kBAAkB,CAACoB,WAAnB,CAAwClB,QAAxC,EAAkDC,OAAlD,EAA2D,gBAA3D,EAA6EE,YAA7E,EAA2F,KAA3F,CAAP;AACD;AA9IH;;AAAA;AAAA;;;;;;;;ACLA,IAAMiB,YAAY,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,EAAV,CAArB;AACO,IAAMC,aAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,WACE,kBAAgBC,GAAhB,EAA+CC,EAA/C,EAA2DC,EAA3D,EAAuEC,EAAvE,EAAmFC,EAAnF,EAAqG;AACnGJ,MAAAA,GAAG,CAACK,MAAJ,CAAWJ,EAAX,EAAeC,EAAf;AACAF,MAAAA,GAAG,CAACM,MAAJ,CAAWH,EAAX,EAAeC,EAAf;AACD;AACD;AACF;AACA;;AAPA;AAAA;AAAA,WAQE,kBAAgBG,GAAhB,EAAuC;AACrC,UAAI,OAAOA,GAAP,KAAe,QAAf,IAA2B,CAACC,KAAK,CAACD,GAAD,CAAjC,IAA0CE,MAAM,CAACC,QAAP,CAAgBH,GAAhB,CAA9C,EAAoE;AAClE,eAAO,IAAP;AACD;;AAED,aAAO,KAAP;AACD;AAdH;AAAA;AAAA,WAeE,uBAAwBI,KAAxB,EAAyCC,OAAzC,EAA+D;AAC7D,UAAMC,KAAa,GAAGF,KAAK,CAACG,OAAN,CAAcF,OAAd,CAAtB;;AACA,UAAIC,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,eAAOF,KAAK,CAACI,MAAN,CAAaF,KAAb,EAAoB,CAApB,CAAP;AACD;;AACD,aAAOF,KAAP;AACD;AAED;AACF;AACA;;AAzBA;AAAA;AAAA,WA0BE,mBAAiBK,CAAjB,EAA4BC,CAA5B,EAAuCC,SAAvC,EAAoE;AAClE,UAAI,CAACA,SAAL,EAAgB;AACd,eAAO,KAAP;AACD;;AAED,UAAIA,SAAS,CAACF,CAAV,IAAeA,CAAf,IAAoBE,SAAS,CAACF,CAAV,GAAcE,SAAS,CAACC,KAAxB,IAAiCH,CAArD,IAA0DE,SAAS,CAACD,CAAV,IAAeA,CAAzE,IAA8EC,SAAS,CAACD,CAAV,GAAcC,SAAS,CAACE,MAAxB,IAAkCH,CAApH,EAAuH;AACrH,eAAO,IAAP;AACD;;AAED,aAAO,KAAP;AACD;AACD;AACF;AACA;;AAvCA;AAAA;AAAA,WAwCE,sBAAoBI,YAApB,EAAqE;AAAA,UAA3BC,aAA2B,uEAAX,CAAW;;AACnE,UAAID,YAAY,IAAI,CAAhB,IAAqBb,KAAK,CAACa,YAAD,CAA1B,IAA4C,CAACZ,MAAM,CAACC,QAAP,CAAgBW,YAAhB,CAAjD,EAAgF;AAC9E,eAAOA,YAAP;AACD;;AACD,UAAIE,IAAI,GAAGF,YAAX;AACA,UAAIG,YAAY,GAAG,IAAnB;AACA,UAAMC,GAAG,GAAG1B,aAAa,CAAC2B,cAAd,CAA6BL,YAA7B,CAAZ;;AACA,WAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG7B,YAAY,CAAC1B,MAAjC,EAAyCuD,CAAC,EAA1C,EAA8C;AAC5C,YAAMC,WAAW,GAAG9B,YAAY,CAAC6B,CAAD,CAAhC;AACA,YAAME,cAAc,GAAGD,WAAW,GAAGE,IAAI,CAACL,GAAL,CAAS,EAAT,EAAaA,GAAb,CAArC;;AACA,YAAIH,aAAa,IAAIA,aAAa,GAAGO,cAAhB,IAAkC,CAAvD,EAA0D;AACxD;AACD;;AACD,YAAME,QAAQ,GAAGhC,aAAa,CAACiC,WAAd,CAA0BX,YAA1B,EAAwCQ,cAAxC,CAAjB;;AAEA,YAAIE,QAAQ,IAAI,CAAZ,IAAkBA,QAAQ,IAAI,GAAZ,IAAmBN,GAAG,GAAG,CAA/C,EAAmD;AACjDD,UAAAA,YAAY,GAAGO,QAAf;AACAR,UAAAA,IAAI,GAAGM,cAAP;AACA;AACD,SAJD,MAIO,IAAI,CAACL,YAAD,IAAiBA,YAAY,GAAGO,QAApC,EAA8C;AACnDP,UAAAA,YAAY,GAAGO,QAAf;AACAR,UAAAA,IAAI,GAAGM,cAAP;AACD;AACF;;AAED,aAAON,IAAP;AACD;AACD;AACF;AACA;;AArEA;AAAA;AAAA,WAsEE,sBAAoBrC,KAApB,EAA2G;AAAA,UAAxE+C,GAAwE,uEAA9C,IAA8C;AAAA,UAAxCC,GAAwC,uEAAd,IAAc;;AACzG,UAAInC,aAAa,CAACoC,QAAd,CAAuBjD,KAAvB,CAAJ,EAAmC;AACjC,YAAIa,aAAa,CAACoC,QAAd,CAAuBF,GAAvB,CAAJ,EAAiC;AAC/B/C,UAAAA,KAAK,GAAG4C,IAAI,CAACI,GAAL,CAAShD,KAAT,EAAgB+C,GAAhB,CAAR;AACD;;AACD,YAAIlC,aAAa,CAACoC,QAAd,CAAuBD,GAAvB,CAAJ,EAAiC;AAC/BhD,UAAAA,KAAK,GAAG4C,IAAI,CAACG,GAAL,CAAS/C,KAAT,EAAgBgD,GAAhB,CAAR;AACD;AACF;;AAED,aAAOhD,KAAP;AACD;AAjFH;AAAA;AAAA,WAkFE,mBAAiBkD,EAAjB,EAAqCC,IAArC,EAA2F;AAAA,UAAhCC,MAAgC,uEAAvB,KAAuB;;AACzF,UAAI,CAACD,IAAD,IAAS,CAACD,EAAd,EAAkB;AAChB,eAAOA,EAAP;AACD;;AACD,UAAMG,OAAO,GAAGT,IAAI,CAACG,GAAL,CAASI,IAAI,CAACG,MAAL,GAAcH,IAAI,CAACG,MAAL,EAAd,GAA8BH,IAAI,CAACJ,GAA5C,EAAiDI,IAAI,CAACJ,GAAtD,CAAhB;AACA,UAAMQ,KAAK,GAAGX,IAAI,CAACG,GAAL,CAASG,EAAE,CAACI,MAAH,GAAYJ,EAAE,CAACI,MAAH,EAAZ,GAA0BJ,EAAE,CAACH,GAAtC,EAA2CG,EAAE,CAACH,GAA9C,CAAd;AACA,UAAMS,eAAe,GAAG3C,aAAa,CAACoC,QAAd,CAAuBI,OAAvB,CAAxB;AACA,UAAMI,aAAa,GAAG5C,aAAa,CAACoC,QAAd,CAAuBM,KAAvB,CAAtB,CAPyF,CAQzF;;AACA,UAAIC,eAAe,IAAIC,aAAvB,EAAsC;AACpCP,QAAAA,EAAE,CAACH,GAAH,GAASK,MAAM,GAAGR,IAAI,CAACG,GAAL,CAASM,OAAT,EAAkBE,KAAlB,CAAH,GAA8BX,IAAI,CAACI,GAAL,CAASK,OAAT,EAAkBE,KAAlB,CAA7C;AACD,OAFD,MAEO,IAAIC,eAAJ,EAAqB;AAC1BN,QAAAA,EAAE,CAACH,GAAH,GAASM,OAAT;AACD;;AAED,UAAMK,OAAO,GAAGd,IAAI,CAACG,GAAL,CAASI,IAAI,CAACQ,MAAL,GAAcR,IAAI,CAACQ,MAAL,EAAd,GAA8BR,IAAI,CAACH,GAA5C,EAAiDG,IAAI,CAACH,GAAtD,CAAhB;AACA,UAAMY,KAAK,GAAGhB,IAAI,CAACG,GAAL,CAASG,EAAE,CAACS,MAAH,GAAYT,EAAE,CAACS,MAAH,EAAZ,GAA0BT,EAAE,CAACF,GAAtC,EAA2CE,EAAE,CAACF,GAA9C,CAAd;AACA,UAAMa,eAAe,GAAGhD,aAAa,CAACoC,QAAd,CAAuBS,OAAvB,CAAxB;AACA,UAAMI,aAAa,GAAGjD,aAAa,CAACoC,QAAd,CAAuBW,KAAvB,CAAtB;;AACA,UAAIC,eAAe,IAAIC,aAAvB,EAAsC;AACpCZ,QAAAA,EAAE,CAACF,GAAH,GAASI,MAAM,GAAGR,IAAI,CAACI,GAAL,CAASU,OAAT,EAAkBE,KAAlB,CAAH,GAA8BhB,IAAI,CAACG,GAAL,CAASW,OAAT,EAAkBE,KAAlB,CAA7C;AACD,OAFD,MAEO,IAAIC,eAAJ,EAAqB;AAC1BX,QAAAA,EAAE,CAACF,GAAH,GAASU,OAAT;AACD;;AAED,aAAOR,EAAP;AACD;AA5GH;AAAA;AAAA,WA6GE,uBAAqBa,IAArB,EAAoCC,KAApC,EAA6D;AAC3D,UAAI,CAACD,IAAD,IAAS,CAACC,KAAd,EAAqB;AACnBC,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA,eAAO,KAAP;AACD,OAJ0D,CAM3D;;;AACA,UAAIH,IAAI,CAACjC,CAAL,GAASkC,KAAK,CAAClC,CAAN,GAAUkC,KAAK,CAAC/B,KAAzB,IAAkC+B,KAAK,CAAClC,CAAN,GAAUiC,IAAI,CAACjC,CAAL,GAASiC,IAAI,CAAC9B,KAA9D,EAAqE;AACnE,eAAO,IAAP;AACD,OAT0D,CAW3D;;;AACA,UAAI8B,IAAI,CAAChC,CAAL,GAASiC,KAAK,CAACjC,CAAN,GAAUiC,KAAK,CAAC9B,MAAzB,IAAmC8B,KAAK,CAACjC,CAAN,GAAUgC,IAAI,CAAChC,CAAL,GAASgC,IAAI,CAAC7B,MAA/D,EAAuE;AACrE,eAAO,IAAP;AACD;;AACD,aAAO,KAAP;AACD;AA7HH;AAAA;AAAA,WA+HE,qBAAmBnB,EAAnB,EAA+BC,EAA/B,EAA2CC,EAA3C,EAAwDC,EAAxD,EAA6E;AAC3E,UAAID,EAAE,IAAIlB,SAAN,IAAmBmB,EAAE,IAAInB,SAA7B,EAAwC;AACtC,eAAO6C,IAAI,CAACuB,IAAL,CAAUvB,IAAI,CAACL,GAAL,CAASxB,EAAE,GAAGE,EAAd,EAAkB,CAAlB,IAAuB2B,IAAI,CAACL,GAAL,CAASvB,EAAE,GAAGE,EAAd,EAAkB,CAAlB,CAAjC,CAAP;AACD,OAFD,MAEO;AACL,eAAO0B,IAAI,CAACwB,GAAL,CAASrD,EAAE,GAAGC,EAAd,CAAP;AACD;AACF;AArIH;AAAA;AAAA,WAsIE,cAAYqD,CAAZ,EAA+B;AAC7B,aAAOA,CAAC,IAAI,CAAL,GAAS,CAAT,GAAa,CAAC,CAArB;AACD;AAxIH;AAAA;AAAA,WA0IE,iCAAqC;AACnC,UAAI,CAACC,MAAL,EAAa;AACX;AACD;;AACD,UAAIA,MAAM,CAACC,YAAX,EAAyB;AACvBD,QAAAA,MAAM,CAACC,YAAP,GAAsBC,eAAtB;AACD,OAFD,MAEO;AACL;AACA,YAAMC,GAAQ,GAAGH,MAAM,CAACI,QAAxB;;AACA,YAAID,GAAG,CAACE,SAAR,EAAmB;AACjBF,UAAAA,GAAG,CAACE,SAAJ,CAAcC,KAAd;AACD;AACF;AACF;AAvJH;AAAA;AAAA,WAwJE,wBAAsBC,OAAtB,EAA+C;AAC7C,UAAI,CAACA,OAAD,IAAYA,OAAO,KAAK,CAAxB,IAA6B,CAACrD,QAAQ,CAACqD,OAAD,CAA1C,EAAqD;AACnD,eAAO,CAAP;AACD,OAH4C,CAI7C;;;AACA,UAAIA,OAAO,IAAI,EAAX,IAAiBA,OAAO,GAAG,GAA/B,EAAoC;AAClC,eAAO,CAAP;AACD,OAFD,MAEO,IAAIA,OAAO,IAAI,GAAX,IAAkBA,OAAO,GAAG,IAAhC,EAAsC;AAC3C,eAAO,CAAP;AACD,OAFM,MAEA,IAAIA,OAAO,IAAI,IAAX,IAAmBA,OAAO,GAAG,KAAjC,EAAwC;AAC7C,eAAO,CAAP;AACD;;AAEDA,MAAAA,OAAO,GAAGjC,IAAI,CAACwB,GAAL,CAASS,OAAT,CAAV;AACA,UAAIC,QAAQ,GAAG,CAAf;AACA,UAAMC,CAAC,GAAG,KAAKC,IAAL,CAAUH,OAAV,CAAV;;AACA,UAAIA,OAAO,GAAG,CAAd,EAAiB;AACf,eAAOA,OAAO,IAAI,CAAlB,EAAqB;AACnBA,UAAAA,OAAO,GAAGjC,IAAI,CAACqC,KAAL,CAAWJ,OAAO,GAAG,IAArB,CAAV;AACAC,UAAAA,QAAQ;AACT;;AAED,eAAOC,CAAC,GAAGD,QAAJ,GAAe,CAAtB;AACD,OAPD,MAOO,IAAID,OAAO,GAAG,GAAd,EAAmB;AACxB;AACA,YAAMK,UAAU,GAAGtC,IAAI,CAACqC,KAAL,CAAWrC,IAAI,CAACsB,GAAL,CAASW,OAAT,IAAoBjC,IAAI,CAACsB,GAAL,CAAS,EAAT,CAApB,GAAmC,CAA9C,IAAmD,CAAtE;AACA,eAAOgB,UAAP;AACD,OAJM,MAIA;AACL,eAAO,CAAP;AACD;AACF;AAtLH;;AAAA;AAAA;;;;;;;;;;ACHO,IAAMC,iBAAb;AAAA;AAAA;;AAAA,yDACuB,KADvB;AAAA;;AAAA;AAAA;AAAA;AAEE;AACF;AACA;AACE,8BAAuB;AACrB,WAAKC,UAAL,GAAkB,IAAlB;AACD;AAPH;AAAA;AAAA,WASE,uBAAuB;AACrB,aAAO,KAAKA,UAAZ;AACD;AAXH;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AAIO,IAAMC,4BAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA,EAAkDF,iBAAlD;;ACJO,IAAKG,mBAAZ;;WAAYA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;GAAAA,wBAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACAZ;AACA;AAEO,IAAMC,wBAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,0GAIQ,CAJR;;AAAA,8GAQY,CARZ;;AAAA,6GASgCD,wBAThC;;AAAA;AAAA;;AAAA;AAAA,EAA8CH,iBAA9C;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AAEO,IAAMM,qBAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,yGACsC,EADtC;;AAAA,wGAEqC,EAFrC;;AAAA;AAAA;;AAAA;AAAA,EAA2CN,iBAA3C;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AAGO,IAAMO,kBAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA,EAAwCP,iBAAxC;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AAGO,IAAMQ,iBAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA,EAAuCR,iBAAvC;;ACJO,IAAKS,uBAAZ;;WAAYA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;GAAAA,4BAAAA;;ACAL,IAAKC,mBAAZ;;WAAYA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;GAAAA,wBAAAA;;ACAL,IAAKC,kBAAZ;;WAAYA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;GAAAA,uBAAAA;;ACAL,IAAKC,gBAAZ;;WAAYA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;GAAAA,qBAAAA;;ACAZ;AACA;AACA;AACO,IAAKC,qBAAZ;;WAAYA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;GAAAA,0BAAAA;;ACHL,IAAKC,cAAZ;;WAAYA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;GAAAA,mBAAAA;;ACCZ;AAGA;AAIO,IAAMC,oBAAoB,GAAG;AAClCjE,EAAAA,KAAK,EAAE,CAD2B;AAElCkE,EAAAA,SAAS,EAAE,EAFuB;AAGlCC,EAAAA,QAAQ,EAAE,CAHwB;AAIlCC,EAAAA,SAAS,EAAE,EAJuB;;AAKlC;AACF;AACA;AACEC,EAAAA,OAAO,EAAEP,qBARyB;AASlCS,EAAAA,WAAW,EAAE,YATqB;AAUlCC,EAAAA,SAAS,EAAE;AAVuB,CAA7B;AAaA,IAAMC,4BAA4B,GAAG;AAC1C;AACF;AACA;AACED,EAAAA,SAAS,EAAE,YAJ+B;AAK1CnG,EAAAA,KAAK,EAAEjB,2BALmC;;AAM1C;AACF;AACA;AACEsH,EAAAA,iBAAiB,EAAE,KATuB;AAU1CH,EAAAA,WAAW,EAAE,OAV6B;AAW1CI,EAAAA,mBAAmB,EAAE,OAXqB;AAY1CC,EAAAA,eAAe,EAAE,GAZyB;AAa1CC,EAAAA,SAAS,EAAE;AAb+B,CAArC;AAgBA,IAAMC,uBAAuB,GAAG;AACrC;AACF;AACA;AACE7E,EAAAA,MAAM,EAAE,EAJ6B;AAKrC8E,EAAAA,YAAY,EAAE,CALuB;AAMrCP,EAAAA,SAAS,EAAE,SAN0B;;AAOrC;AACF;AACA;AACEQ,EAAAA,cAAc,EAAE,SAVqB;AAWrCC,EAAAA,WAAW,EAAE,MAXwB;AAYrCjH,EAAAA,cAAc,EAAEyG;AAZqB,CAAhC;AAeA,IAAMS,sBAAsB,GAAG;AACpC;AACF;AACA;AACEC,EAAAA,sBAAsB,EAAE,KAJY;;AAMpC;AACF;AACA;AACEC,EAAAA,WAAW,EAAE,IATuB;AAWpCC,EAAAA,aAAa,EAAEpB,oBAXqB;;AAYpC;AACF;AACA;AACEqB,EAAAA,MAAM,EAAE,GAf4B;;AAgBpC;AACF;AACA;AACEC,EAAAA,OAAO,EAAE,IAnB2B;AAoBpCC,EAAAA,WAAW,EAAE,EApBuB;;AAqBpC;AACF;AACA;AACEC,EAAAA,QAAQ,EAAE,GAxB0B;;AAyBpC;AACF;AACA;AACEC,EAAAA,UAAU,EAAE,EA5BwB;AA6BpCC,EAAAA,eAAe,EAAE,SA7BmB;AA8BpCnB,EAAAA,SAAS,EAAE,SA9ByB;AAgCpCoB,EAAAA,WAAW,EAAE,SAhCuB;;AAiCpC;AACF;AACA;AACEC,EAAAA,SAAS,EAAE,SApCyB;;AAqCpC;AACF;AACA;AACEC,EAAAA,cAAc,EAAE,OAxCoB;;AA0CpC;AACF;AACA;AACA;AACE5H,EAAAA,SAAS,EAAE4G,uBA9CyB;;AA+CpC;AACF;AACA;AACEpG,EAAAA,YAAY,EAAE,EAlDsB;AAmDpCqH,EAAAA,IAAI,EAAE,iBAnD8B;;AAoDpC;AACF;AACA;AACEC,EAAAA,IAAI,EAAE,CAvD8B;;AAwDpC;AACF;AACA;AACEC,EAAAA,SAAS,EAAE,GA3DyB;;AA4DpC;AACF;AACA;AACEC,EAAAA,OAAO,EAAE,GA/D2B;;AAgEpC;AACF;AACA;AACEC,EAAAA,OAAO,EAAE,CAnE2B;;AAoEpC;AACF;AACA;AACEC,EAAAA,mBAAmB,EAAE,KAvEe;;AAwEpC;AACF;AACA;AACEC,EAAAA,oBAAoB,EAAE,kBA3Ec;;AA4EpC;AACF;AACA;AACEC,EAAAA,eAAe,EAAE,IA/EmB;;AAgFpC;AACF;AACA;AACEC,EAAAA,kBAAkB,EAAE,IAnFgB;AAoFpCzF,EAAAA,GAAG,EAAE,CApF+B;AAqFpCC,EAAAA,GAAG,EAAEzB,MAAM,CAACkH;AArFwB,CAA/B;AAwFA,IAAMC,qBAAqC,GAAG;AACnD;AACF;AACA;AACEC,EAAAA,YAAY,EAAE,EAJqC;;AAKnD;AACF;AACA;AACEC,EAAAA,iBAAiB,EAAE,IARgC;;AASnD;AACF;AACA;AACEC,EAAAA,gBAAgB,EAAE,GAZiC;;AAanD;AACF;AACA;AACEC,EAAAA,oBAAoB,EAAE,GAhB6B;;AAiBnD;AACF;AACA;AACEC,EAAAA,uBAAuB,EAAE,GApB0B;;AAqBnD;AACF;AACA;AACEC,EAAAA,sBAAsB,EAAE,EAxB2B;;AAyBnD;AACF;AACA;AACEC,EAAAA,cAAc,EAAE;AA5BmC,CAA9C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5IP;AACA;AAKA;AAOA;AACA;AAgBA;AACA;AACA;AACA;AAEA;CAGA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;CAEA;;AACA;AAEO,IAAMC,QAAb;AAAA;;AAAA;;AACE;AACF;AACA;;AAEE;AACF;AACA;;AAEE;AACF;AACA;;AAEE;AACF;AACA;;AAEE;AACF;AACA;;AAEE;AACF;AACA;;AAEE;AACF;AACA;;AAEE;AACF;AACA;;AAeE;AACF;AACA;;AAYE;AACF;AACA;AACA;AACA;AACE,sBAAwF;AAAA;;AAAA,QAA5EzJ,OAA4E,uEAA1C,IAA0C;AAAA,QAApC0J,KAAoC,uEAAN,IAAM;;AAAA;;AACtF,8BADsF,CAEtF;;AAFsF,iFA7DvD,IA6DuD;;AAAA,8EAzDpD,IAyDoD;;AAAA,uFArDjD,IAqDiD;;AAAA,qFAjDnD,IAiDmD;;AAAA,2EA7ChD,IA6CgD;;AAAA,+EAzCrD,IAyCqD;;AAAA,gFArClD,IAqCkD;;AAAA,sFAjCrD;AAAErH,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE;AAAX,KAiCqD;;AAAA,kFAhChD,IAgCgD;;AAAA,qFA9BvD,IA8BuD;;AAAA,4FA7BhE,KA6BgE;;AAAA,4EA5BlD,IA4BkD;;AAAA,2FA3BjE,KA2BiE;;AAAA,+FA1B7D,KA0B6D;;AAAA,oFAxBvE,CAwBuE;;AAAA,qFAvBvE,CAuBuE;;AAAA,sFAtBrD,IAsBqD;;AAAA,8EArB9D2G,qBAqB8D;;AAAA,oFApBxE,KAoBwE;;AAAA,8FAhB9C,IAgB8C;;AAAA,2EAfjF,CAeiF;;AAAA,kFAd1E,CAc0E;;AAAA,mFAbzE,CAayE;;AAAA,mFAZzD,IAYyD;;AAAA,6FAX/D,CAW+D;;AAAA,oFAVxE,KAUwE;;AAAA,uFATrE9C,iCASqE;;AAAA,oFARxC,IAQwC;;AAAA,6EAPzD,IAOyD;;AAAA,mFA4IzE,UAAC3G,KAAD,EAAgC;AAC7C,UAAI,MAAKoK,gBAAL,KAA0BzD,4BAA9B,EAA4D;AAC1D,cAAK2D,cAAL,CAAoBtK,KAApB;AACD;AACF,KAhJuF;;AAAA,qFAiJvE,UAACA,KAAD,EAAgC;AAC/C,UAAI,MAAKoK,gBAAL,KAA0BzD,4BAA9B,EAA4D;AAC1D,cAAK2D,cAAL,CAAoBtK,KAApB;AACD;AACF,KArJuF;;AAAA,uFA+JrE,YAAY;AAC7B,YAAKuK,iBAAL;AACD,KAjKuF;;AAAA,+FAkK7D,YAAY;AACrC;AACA,YAAKC,OAAL;;AACA,YAAKC,MAAL;AACD,KAtKuF;;AAAA,yFA+KnE,UAACvK,IAAD,EAA4B;AAC/C,YAAKwK,yBAAL,GAD+C,CAE/C;;;AACA,YAAKC,uBAAL,GAA+BtF,MAAM,CAACuF,UAAP,CAAkB,YAAM;AACrD,YAAI,CAAC,MAAKC,aAAV,EAAyB;AACvB,cAAI,MAAKF,uBAAT,EAAkC;AAChCG,YAAAA,YAAY,CAAC,MAAKH,uBAAN,CAAZ;AACA,kBAAKA,uBAAL,GAA+B,IAA/B;AACD;;AAED,gBAAKH,OAAL;;AACA,gBAAKC,MAAL;AACD;AACF,OAV8B,EAU5B,MAAKM,OAAL,CAAajB,uBAVe,CAA/B;;AAYA,YAAKW,MAAL;;AACA,YAAKO,gBAAL,CAAsB9K,IAAtB;AACD,KAhMuF;;AAAA,wFAyMpE,UAACF,KAAD,EAA6B;AAC/C,UAAI,MAAKiL,kBAAL,CAAwBjL,KAAxB,CAAJ,EAAoC;AAClCA,QAAAA,KAAK,CAACkL,cAAN;AACA,YAAMC,QAAQ,GAAGxH,IAAI,CAACI,GAAL,CAAS,CAAT,EAAY,MAAKqH,YAAL,CAAkB,MAAKC,OAAvB,EAAgCrL,KAAhC,EAAuC6C,CAAvC,IAA4C,CAAxD,CAAjB;;AACA,cAAKyI,KAAL,CAAW1J,kBAAA,CAAmB5B,KAAK,CAACuL,MAAzB,CAAX,EAA6C,MAAKC,QAAL,CAAcvC,SAA3D,EAAsEkC,QAAtE;AACD,OAJD,MAIO;AACL,cAAKM,gBAAL,CAAsBC,SAAtB,IAAmC1L,KAAK,CAACuL,MAAzC;AACAvL,QAAAA,KAAK,CAACkL,cAAN;AACD;AACF,KAlNuF;;AAAA,4FAkThE,UAAChL,IAAD,EAA4B;AAClD,UAAIyL,aAAa,GAAGC,IAAI,CAACC,GAAL,KAAa,MAAKC,cAAlB,GAAmC,MAAKf,OAAL,CAAalB,oBAApE,CADkD,CAElD;;;AACAjI,MAAAA,mCAAA;AAEA,YAAKoK,SAAL,GAAiB,MAAKC,cAAL,CAAoB,MAAKZ,OAAzB,EAAkCnL,IAAlC,CAAjB;;AAEA,UAAI,CAAC,MAAK8L,SAAV,EAAqB;AACnB;AACD,OATiD,CAWlD;;;AACA,UAAI,MAAKE,eAAL,IAAwB,MAAKF,SAA7B,IAA0CpK,yBAAA,CAA0B,MAAKsK,eAAL,CAAqBrJ,CAA/C,EAAkD,MAAKqJ,eAAL,CAAqBpJ,CAAvE,EAA0E,MAAKkJ,SAAL,CAAenJ,CAAzF,EAA4F,MAAKmJ,SAAL,CAAelJ,CAA3G,IAAgH,MAAKiI,OAAL,CAAaf,cAA3K,EAA2L;AACzL2B,QAAAA,aAAa,GAAG,KAAhB;AACD;;AAED,YAAKO,eAAL,GAAuB,MAAKF,SAA5B;AACA,YAAKG,eAAL,GAAuB;AACrBtJ,QAAAA,CAAC,EAAE,MAAK4I,gBAAL,CAAsBW,UADJ;AAErBtJ,QAAAA,CAAC,EAAE,MAAK2I,gBAAL,CAAsBC;AAFJ,OAAvB;AAIA,YAAKW,aAAL,GAAqB,IAArB;;AACA,UAAMC,QAAQ,GAAG,MAAKC,gBAAL,CAAsB,MAAKP,SAA3B,EAAsCrI,IAAI,CAACI,GAAL,CAAS,CAAT,EAAY,MAAKiI,SAAL,CAAeQ,MAA3B,CAAtC,CAAjB;;AACA,UAAMC,MAAM,GAAG,MAAKC,cAAL,CAAoBJ,QAApB,EAA8B,MAAKN,SAAL,CAAe5J,GAA7C,CAAf;;AACA,UAAMpC,KAAK,GAAG,IAAIyG,kBAAJ,EAAd;AACAzG,MAAAA,KAAK,CAAC2M,GAAN,GAAY,MAAKX,SAAjB;AACAhM,MAAAA,KAAK,CAACoC,GAAN,GAAY,MAAK4J,SAAL,CAAe5J,GAA3B;AACApC,MAAAA,KAAK,CAAC4M,WAAN,GAAoB,MAAKZ,SAAL,CAAeY,WAAnC;AACA5M,MAAAA,KAAK,CAAC6M,OAAN,GAAgB,MAAKb,SAAL,CAAea,OAA/B;AACA7M,MAAAA,KAAK,CAACE,IAAN,GAAaA,IAAb,CA7BkD,CA8BlD;;AACAF,MAAAA,KAAK,CAACsM,QAAN,GAAiBA,QAAjB,CA/BkD,CAgClD;;AACAtM,MAAAA,KAAK,CAACyM,MAAN,GAAeA,MAAf;;AAEA,UAAId,aAAJ,EAAmB;AACjB,qJAAW3E,0BAAX,EAAuChH,KAAvC;;AACA;AACD;;AAED,sJAAWgH,wBAAX,EAAqChH,KAArC;;AAEA,YAAKgN,aAAL,GAAqBpB,IAAI,CAACC,GAAL,EAArB;AACA,YAAKC,cAAL,GAAsBF,IAAI,CAACC,GAAL,EAAtB;;AACA,UAAI7L,KAAK,CAACiN,WAAN,EAAJ,EAAyB;AACvB;AACA,cAAK1C,iBAAL;;AACA;AACD;;AAED,YAAK2C,WAAL,GAAmB,MAAKlB,SAAxB,CAlDkD,CAoDlD;;AACA,UAAIS,MAAM,IAAI,MAAKrC,gBAAL,KAA0BzD,4BAAxC,EAAsE;AACpE,cAAKwG,KAAL,GAAa;AACXC,UAAAA,OAAO,EAAE,KADE;AAEXX,UAAAA,MAAM,EAAE,MAAKY,oBAAL,CAA0BZ,MAA1B,EAAkCA,MAAM,CAACrK,GAAzC,CAFG;AAGXA,UAAAA,GAAG,EAAEqK,MAAM,CAACrK,GAHD;AAIXkL,UAAAA,IAAI,EAAEb,MAAM,CAACa,IAJF;AAKXhB,UAAAA,QAAQ,EAAE;AALC,SAAb;;AAQA,YAAIG,MAAM,CAACa,IAAP,KAAgB1G,4BAApB,EAAkD;AAChD,gBAAK4G,oBAAL,GAA4B,MAAKvC,kBAAL,CAAwB/K,IAAxB,CAA5B;AACA,gBAAKuN,wBAAL,GAAgCvN,IAAI,CAACwN,QAArC,CAFgD,CAGhD;;AACA,cAAI,CAACjB,MAAM,CAACrL,QAAP,CAAgBuM,QAAjB,IAA6B,CAAC,MAAK1C,kBAAL,CAAwB/K,IAAxB,CAAlC,EAAiE;AAC/D,kBAAK0N,eAAL,CAAqBnB,MAAM,CAACrL,QAA5B;AACD,WAN+C,CAOhD;;;AACA,gBAAK+L,KAAL,CAAWb,QAAX,GAAsB,MAAKuB,mBAAL,GAA2BC,GAA3B,CAA+B,UAACrL,OAAD,EAAa;AAChE,mBAAO,MAAK4K,oBAAL,CAA0B5K,OAA1B,EAAmCA,OAAO,CAACL,GAA3C,CAAP;AACD,WAFqB,CAAtB;AAGD,SAXD,MAWO,IAAIqK,MAAM,CAACa,IAAP,KAAgB1G,yBAApB,EAA+C;AACpD,cAAMoH,SAAS,GAAG,MAAKb,KAAL,CAAWV,MAAX,CAAkBuB,SAApC;;AAEA,cAAIA,SAAS,IAAIC,KAAK,CAACC,OAAN,CAAcF,SAAd,CAAjB,EAA2C;AACzC,kBAAKb,KAAL,CAAWb,QAAX,GAAsB0B,SAAS,CAACF,GAAV,CAAc,UAAC1M,QAAD,EAAc;AAChD,qBAAO,MAAKiM,oBAAL,CAA0B,MAAKc,iBAAL,CAAuB,MAAKhB,KAAL,CAAWV,MAAX,CAAkB2B,GAAzC,EAA8ChN,QAA9C,CAA1B,EAAmFA,QAAQ,CAACgB,GAA5F,CAAP;AACD,aAFqB,CAAtB;AAGD;AACF,SARM,MAQA;AACL,gBAAK+K,KAAL,CAAWb,QAAX,GAAsB,CAAC,MAAKa,KAAL,CAAWV,MAAZ,CAAtB;AACD;AACF;;AAED,YAAKhC,MAAL;AACD,KAzYuF;;AAAA,4FA6ZhE,UAACvK,IAAD,EAA+C;AACrE,UAAI,CAACA,IAAL,EAAW;AACTA,QAAAA,IAAI,GAAG,MAAKmO,aAAZ;AACD,OAFD,MAEO;AACL,cAAKA,aAAL,GAAqBnO,IAArB;AACD;;AACD,UAAI,CAACA,IAAL,EAAW;AACT;AACD;;AACD,UAAMoO,OAAO,GAAGpO,IAAI,CAACqO,cAAL,IAAuBrO,IAAI,CAACqO,cAAL,CAAoBtO,MAApB,GAA6B,CAApE;AACA,YAAKiN,WAAL,GAAmB,MAAKjB,cAAL,CAAoB,MAAKZ,OAAzB,EAAkCnL,IAAlC,CAAnB;;AACA,UAAI,CAAC,MAAK2K,aAAN,IAAuB,MAAK2D,cAA5B,IAA8C,MAAKC,mBAAL,EAAlD,EAA8E;AAC5E;AACA,cAAKC,qBAAL,GAA6B,MAAKtE,gBAAL,KAA0BzD,4BAAvD;AACD,OAHD,MAGO;AACL,cAAK+H,qBAAL,GAA6B,KAA7B;AACD;;AAEDxO,MAAAA,IAAI,GAAGA,IAAP;;AACA,UAAMyO,aAAa,GAAG,MAAKC,mBAAL,CAAyB1O,IAAzB,CAAtB;;AACA,UAAI,MAAK8L,SAAT,EAAoB;AAClB,YAAI2C,aAAa,IAAIL,OAArB,EAA8B;AAC5B,cAAI,MAAKnB,KAAL,IAAc,CAAC,MAAKK,oBAAxB,EAA8C;AAC5C,gBAAMqB,YAAY,GAAG,MAAK3B,WAAL,CAAiB9K,GAAtC;;AACA,gBAAI,MAAK+K,KAAL,CAAWG,IAAX,KAAoB1G,4BAAxB,EAAsD;AACpD,oBAAKkI,gBAAL,CAAsBD,YAAtB,EAAoCxI,wBAApC;AACD,aAFD,MAEO,IAAI,CAAC,MAAK8G,KAAL,CAAWG,IAAX,IAAmB1G,4BAAnB,IAAmD,MAAKuG,KAAL,CAAWG,IAAX,IAAmB1G,yBAAvE,KAAqG,MAAKuG,KAAL,CAAWb,QAApH,EAA8H;AACnI,kBAAMyC,MAAM,GAAGpL,IAAI,CAACqC,KAAL,CAAW6I,YAAY,GAAG,MAAK1B,KAAL,CAAW/K,GAArC,CAAf;;AACA,kBAAM4M,WAAW,GAAG,MAAKC,aAAL,CAAmBF,MAAnB,EAA2B,MAAK5B,KAAL,CAAWb,QAAtC,EAAgDjG,wBAAhD,CAApB;;AACA,kBAAI2I,WAAW,KAAK,CAApB,EAAuB;AACrB,oBAAI,CAAC,MAAK7B,KAAL,CAAWC,OAAhB,EAAyB;AACvB,wBAAKD,KAAL,CAAW+B,OAAX,GAAqB,MAAK/B,KAAL,CAAW/K,GAAhC;;AACA,sBAAM+M,UAAS,GAAG,MAAKC,qBAAL,EAAlB;;AACA,sBAAID,UAAS,CAAClC,WAAV,EAAJ,EAA6B;AAC3B;AACA,0BAAKE,KAAL,GAAa,IAAb;;AACA,0BAAK5C,iBAAL;;AACA;AACD;AACF;;AAED,sBAAK4C,KAAL,CAAWC,OAAX,GAAqB,IAArB;AACA,sBAAKD,KAAL,CAAW/K,GAAX,IAAkB2M,MAAlB;;AACA,sBAAKM,cAAL;AACD;AACF;AACF;;AAED,cAAI,MAAKjF,gBAAL,KAA0BzD,2BAA1B,IAAyD,CAAC,MAAKwG,KAAnE,EAA0E;AACxE,kBAAKtC,aAAL,GAAqB,IAArB;;AACA,kBAAK0E,UAAL,CAAgB1I,2BAAhB,EAFwE,CAGxE;;;AACA,kBAAK4I,YAAL,CAAkB,MAAKzD,SAAvB,EAAkC,MAAKkB,WAAvC,EAAoD,MAAKf,eAAzD;AACD,WALD,MAKO;AACL;AACA,kBAAKuD,6BAAL,CAAmC,MAAKxC,WAAxC;AACD;;AAED,gBAAKzC,MAAL;AACD,SAtCD,MAsCO;AACL;AACA,gBAAKF,iBAAL;;AACA,gBAAKE,MAAL;AACD;AACF,OA5CD,MA4CO,IAAI,CAAC6D,OAAL,EAAc;AACnB,YAAMhC,QAAQ,GAAG,MAAKC,gBAAL,CAAsB,MAAKW,WAA3B,EAAwCvJ,IAAI,CAACI,GAAL,CAAS,CAAT,EAAY,MAAKmJ,WAAL,CAAiBV,MAA7B,CAAxC,CAAjB;;AACA,YAAMC,MAAM,GAAG,MAAKC,cAAL,CAAoBJ,QAApB,EAA8B,MAAKY,WAAL,CAAiB9K,GAA/C,CAAf;;AACA,YAAI,MAAKyI,aAAL,IAAsB,MAAKT,gBAAL,KAA0BzD,2BAApD,EAAiF;AAC/E,cAAIgI,aAAJ,EAAmB;AACjB,kBAAKY,UAAL,CAAgB1I,2BAAhB;AACD,WAFD,MAEO;AACL,kBAAK0I,UAAL,CAAgB1I,uBAAhB;AACD;AACF,SAND,MAMO;AACL,cAAI,MAAKuD,gBAAL,KAA0BzD,4BAA9B,EAA4D;AAC1D,kBAAK2D,cAAL,CAAoBpK,IAApB;;AACA;AACD,WAHD,MAGO;AACL,kBAAKqP,UAAL,CAAgB1I,0BAAhB;AACD;AACF;;AAED,YAAI4F,MAAJ,EAAY;AACV,cAAIoD,MAAiC,GAAG,IAAxC;;AACA,cAAIpD,MAAM,CAACa,IAAP,KAAgB1G,yBAApB,EAA+C;AAC7CiJ,YAAAA,MAAM,GAAGA,MAAM,IAAIhJ,2BAAnB;AACD,WAFD,MAEO,IAAI4F,MAAM,CAACa,IAAP,IAAe1G,4BAAnB,EAAiD;AACtDiJ,YAAAA,MAAM,GAAGA,MAAM,IAAIhJ,0BAAnB;AACD,WAFM,MAEA,IAAI4F,MAAM,CAACa,IAAP,IAAe1G,4BAAnB,EAAiD;AACtDiJ,YAAAA,MAAM,GAAGA,MAAM,IAAIhJ,2BAAnB;AACD;;AAED,cAAIgJ,MAAJ,EAAY;AACV,kBAAKN,UAAL,CAAgBM,MAAhB;AACD;AACF;AACF;;AAED,UAAIvB,OAAJ,EAAa;AACXpO,QAAAA,IAAI,CAACgL,cAAL;AACD;AACF,KAlgBuF;;AAAA,0FA8jBlE,UAAChL,IAAD,EAA4B;AAChD,UAAI,MAAK8L,SAAT,EAAoB;AAClB;AACA,YAAMW,GAAG,GAAG,MAAKV,cAAL,CAAoB,MAAKZ,OAAzB,EAAkCnL,IAAlC,CAAZ,CAFkB,CAIlB;;;AACA,YAAI,MAAKmM,aAAL,IAAsB,CAAC,MAAKoC,mBAAL,EAAvB,IAAsD,MAAKtB,KAAL,KAAe,MAAKK,oBAAL,IAA6B,MAAKC,wBAAjD,CAA1D,EAAuI;AACrI,cAAI,MAAKjC,QAAL,IAAiB,MAAKpB,gBAAL,KAA0BzD,4BAA/C,EAA6E;AAC3E,gBAAMqJ,SAAS,GAAG,MAAK/E,kBAAL,CAAwB/K,IAAxB,IAAgC,CAAhC,GAAoC,CAAC,CAAvD;AACA,gBAAMiL,QAAQ,GAAGxH,IAAI,CAACI,GAAL,CAAS,CAAT,EAAY,MAAKqH,YAAL,CAAkB,MAAKC,OAAvB,EAAgCnL,IAAhC,EAAsC2C,CAAtC,IAA2C,CAAvD,CAAjB;;AACA,kBAAKyI,KAAL,CAAW0E,SAAX,EAAsB,MAAKxE,QAAL,CAAcvC,SAApC,EAA+CkC,QAA/C;AACD,WAJD,MAIO;AACL,kBAAK8E,aAAL,CAAmBtD,GAAnB,EAAwB,MAAKQ,KAA7B;AACD;AACF,SARD,MAQO,IAAI,CAAC,MAAKA,KAAN,IAAe,MAAKqB,cAApB,IAAsC,MAAKE,qBAA/C,EAAsE;AAC3E,cAAI,MAAKtE,gBAAL,KAA0BzD,4BAA9B,EAA4D;AAC1D,gBAAI,MAAK6H,cAAL,CAAoBxL,KAApB,GAA4B,EAAhC,EAAoC,CAClC;AACD;AACF,WAJD,MAIO;AACL,gBAAMgL,SAAS,GAAG,MAAKkC,wBAAL,CAA8B,MAAK1B,cAAnC,CAAlB;;AACA,gBAAM2B,aAAa,GAAGjQ,IAAI,CAACwN,QAAL,GAAgB3G,4BAAhB,GAA+CA,4BAArE;;AACA,kBAAKuJ,MAAL,CAAYtC,SAAZ,EAAuBmC,aAAvB;AACD;AACF;;AAED,cAAK5F,iBAAL;;AACA,cAAKE,MAAL;AACD;AACF,KA3lBuF;;AAAA,sFA+uDtE,YAAY;AAC5B,UAAI,CAAC,MAAK8F,IAAV,EAAgB;AACd;AACD,OAH2B,CAI5B;;;AACA,UAAI,MAAKC,OAAL,CAAa,MAAKC,IAAlB,IAA0B,MAAKhF,gBAAL,CAAsBiF,WAApD,EAAiE;AAC/D,cAAKlG,OAAL;;AACA,YAAI,CAAC,MAAKK,aAAN,IAAuB,MAAKsC,KAA5B,IAAqC,MAAKA,KAAL,CAAWG,IAAX,KAAoB1G,4BAA7D,EAA2F;AACzF,gBAAKwF,UAAL;AACD;AACF;;AAED,YAAKuE,iBAAL;;AACA,YAAKC,WAAL,GAb4B,CAc5B;;;AACA,YAAKC,uBAAL;;AACA,YAAKC,YAAL;;AACA,YAAKC,gBAAL;;AACA,YAAKC,oBAAL;;AACA,YAAKC,eAAL;AACD,KAnwDuF;;AAGtF,QAAIzQ,OAAO,IAAI0J,KAAf,EAAsB;AACpB,YAAKgH,UAAL,CAAgB1Q,OAAhB,EAAyB0J,KAAzB;AACD;;AALqF;AAMvF;AAED;AACF;AACA;AACA;AACA;;;AA7EA;AAAA;AAAA,WA8EE,oBAAkB1J,OAAlB,EAAmD0J,KAAnD,EAAsF;AACpF,WAAKiH,MAAL,GAAcjH,KAAd;;AACA,UAAI,CAAC1J,OAAD,IAAY,CAACA,OAAO,CAAC4Q,EAAzB,EAA6B;AAC3B,cAAM,IAAIC,KAAJ,6DAAN;AACD;;AAED,WAAKC,mBAAL,CAAyB9Q,OAAO,CAAC4Q,EAAjC;;AACA,WAAK5F,QAAL,GAAgB,KAAK+F,WAAL,CAAiB/Q,OAAjB,CAAhB;;AACA,WAAKgR,kBAAL;;AACA,WAAKhH,OAAL;AACA,WAAKC,MAAL;AACD;AAED;AACF;AACA;AACA;;AA9FA;AAAA;AAAA,WA+FE,6BAAoB2G,EAApB,EAAoD;AAClD,UAAIA,EAAE,YAAYK,WAAlB,EAA+B;AAC7B,aAAKC,UAAL,GAAkBN,EAAlB;AACD,OAFD,MAEO;AACL,aAAKM,UAAL,GAAkBjM,QAAQ,CAACkM,cAAT,CAAwBP,EAAxB,CAAlB;AACD;;AAED,UAAI,CAAC,KAAKM,UAAV,EAAsB;AACpB,cAAM,IAAIL,KAAJ,6DAAN;AACD;;AAED,WAAK5F,gBAAL,GAAwBhG,QAAQ,CAACmM,aAAT,CAAuB,KAAvB,CAAxB;AACA,WAAKC,cAAL,GAAsBpM,QAAQ,CAACmM,aAAT,CAAuB,KAAvB,CAAtB;AACA,WAAKvG,OAAL,GAAe5F,QAAQ,CAACmM,aAAT,CAAuB,QAAvB,CAAf;;AAEA,UAAI,CAAC,KAAKvG,OAAN,IAAiB,CAAC,KAAKA,OAAL,CAAayG,UAAnC,EAA+C;AAC7C9M,QAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACA,eAAO,IAAP;AACD;;AAED,WAAKyM,UAAL,CAAgB7Q,KAAhB,CAAsBkR,QAAtB,GAAiC,UAAjC,CApBkD,CAqBlD;;AACA,WAAK1G,OAAL,CAAaxK,KAAb,CAAmBmR,OAAnB,GACE,uCACA,uCADA,GAEA,6BAFA,GAGA,+BAHA,GAIA,oBAJA,GAKA,4BALA,GAMA,2BANA,GAOA,yBAPA,GAQA,uBARA,GASA,oBATA,GAUA,qBAVA,GAWA,qBAXA,GAYA,0BAZA,GAaA,yBAbA,GAcA,uBAdA,GAeA,qBAfA,GAgBA,kBAhBA,GAiBA,kBAlBF;AAoBA,WAAKvG,gBAAL,CAAsB5K,KAAtB,CAA4BmR,OAA5B,GAAsC,sBAAsB,qBAAtB,GAA8C,eAA9C,GAAgE,gBAAtG;AAEA,WAAKH,cAAL,CAAoBhR,KAApB,CAA0BmC,KAA1B,GAAkC,KAAK6O,cAAL,CAAoBhR,KAApB,CAA0BoC,MAA1B,GAAmC,MAArE,CA5CkD,CA8ClD;;AACA,WAAKwI,gBAAL,CAAsBwG,WAAtB,CAAkC,KAAKJ,cAAvC;;AACA,WAAKH,UAAL,CAAgBO,WAAhB,CAA4B,KAAKxG,gBAAjC;;AACA,UAAMyG,cAAc,GAAG,KAAKzG,gBAAL,CAAsB0G,WAAtB,GAAoC,KAAKN,cAAL,CAAoBO,WAA/E,CAjDkD,CAkDlD;;AACA,WAAK/G,OAAL,CAAaxK,KAAb,CAAmBmC,KAAnB,GAA2B,KAAKqI,OAAL,CAAaxK,KAAb,CAAmBoC,MAAnB,GAA4B,iBAAiBiP,cAAc,IAAI,EAAnC,IAAyC,KAAhG;;AAEA,WAAKR,UAAL,CAAgBO,WAAhB,CAA4B,KAAK5G,OAAjC;;AACA,WAAKkF,IAAL,GAAY,KAAKlF,OAAL,CAAayG,UAAb,CAAwB,IAAxB,CAAZ;AACD;AAED;AACF;AACA;;AA1JA;AAAA;AAAA,WA2JE,8BAA2B;AACzB,WAAKJ,UAAL,CAAgBW,gBAAhB,CAAiC,OAAjC,EAA0C,KAAKC,iBAA/C;;AAEA,UAAI,KAAK7G,gBAAT,EAA2B;AACzB,aAAKA,gBAAL,CAAsB4G,gBAAtB,CAAuC,QAAvC,EAAiD,KAAKE,kBAAtD;AACD;;AACD9M,MAAAA,QAAQ,CAAC4M,gBAAT,CAA0B,OAA1B,EAAmC,KAAKG,YAAxC,EAAsD,KAAtD;AACA/M,MAAAA,QAAQ,CAAC4M,gBAAT,CAA0B,SAA1B,EAAqC,KAAKI,cAA1C,EAA0D,KAA1D;AACApN,MAAAA,MAAM,CAACgN,gBAAP,CAAwB,MAAxB,EAAgC,KAAKK,gBAArC,EAAuD,KAAvD;AACArN,MAAAA,MAAM,CAACgN,gBAAP,CAAwB,QAAxB,EAAkC,KAAKM,wBAAvC,EAAiE,KAAjE;;AAEA,WAAKtH,OAAL,CAAagH,gBAAb,CAA8B,YAA9B,EAA4C,KAAKO,qBAAjD,EAAwE,KAAxE;;AACA,WAAKvH,OAAL,CAAagH,gBAAb,CAA8B,WAA9B,EAA2C,KAAKO,qBAAhD,EAAuE,KAAvE;;AACAvN,MAAAA,MAAM,CAACgN,gBAAP,CAAwB,WAAxB,EAAqC,KAAKQ,qBAA1C,EAAiE,KAAjE;AACAxN,MAAAA,MAAM,CAACgN,gBAAP,CAAwB,WAAxB,EAAqC,KAAKQ,qBAA1C,EAAiE,KAAjE;AACAxN,MAAAA,MAAM,CAACgN,gBAAP,CAAwB,SAAxB,EAAmC,KAAKS,mBAAxC,EAA6D,KAA7D;AACAzN,MAAAA,MAAM,CAACgN,gBAAP,CAAwB,UAAxB,EAAoC,KAAKS,mBAAzC,EAA8D,KAA9D;AACD;AA5KH;AAAA;AAAA,WA8KE,mBAAuB;AACrB;AACA,WAAKC,MAAL;AACA,WAAKrB,UAAL,GAAkB,IAAlB;AACA,WAAKrG,OAAL,GAAe,IAAf;AACA,WAAKI,gBAAL,GAAwB,IAAxB;AACA,WAAKoG,cAAL,GAAsB,IAAtB;AACA,WAAKtB,IAAL,GAAY,IAAZ;;AACA,WAAKhG,iBAAL;;AAEA,WAAKmH,UAAL,CAAgBsB,mBAAhB,CAAoC,OAApC,EAA6C,KAAKV,iBAAlD;;AAEA,UAAI,KAAK7G,gBAAT,EAA2B;AACzB,aAAKA,gBAAL,CAAsBuH,mBAAtB,CAA0C,QAA1C,EAAoD,KAAKT,kBAAzD;AACD;;AAEDlN,MAAAA,MAAM,CAAC2N,mBAAP,CAA2B,MAA3B,EAAmC,KAAKN,gBAAxC;AACArN,MAAAA,MAAM,CAAC2N,mBAAP,CAA2B,QAA3B,EAAqC,KAAKL,wBAA1C;AACAlN,MAAAA,QAAQ,CAACuN,mBAAT,CAA6B,SAA7B,EAAwC,KAAKP,cAA7C;AACAhN,MAAAA,QAAQ,CAACuN,mBAAT,CAA6B,OAA7B,EAAsC,KAAKR,YAA3C;;AACA,WAAKnH,OAAL,CAAa2H,mBAAb,CAAiC,YAAjC,EAA+C,KAAKJ,qBAApD;;AACA,WAAKvH,OAAL,CAAa2H,mBAAb,CAAiC,WAAjC,EAA8C,KAAKJ,qBAAnD;;AACAvN,MAAAA,MAAM,CAAC2N,mBAAP,CAA2B,WAA3B,EAAwC,KAAKH,qBAA7C;AACAxN,MAAAA,MAAM,CAAC2N,mBAAP,CAA2B,WAA3B,EAAwC,KAAKH,qBAA7C;AACAxN,MAAAA,MAAM,CAAC2N,mBAAP,CAA2B,SAA3B,EAAsC,KAAKF,mBAA3C;AACAzN,MAAAA,MAAM,CAAC2N,mBAAP,CAA2B,UAA3B,EAAuC,KAAKF,mBAA5C,EAzBqB,CA0BrB;;AACA,WAAKG,YAAL;;AACA,WAAKvI,yBAAL;AACD;AA3MH;AAAA;AAAA,WAwNE,wBAAewI,CAAf,EAAoD;AAClD,UAAI,KAAKjI,kBAAL,CAAwBiI,CAAxB,CAAJ,EAAgC;AAC9B,aAAK3D,UAAL,CAAgB1I,0BAAhB;AACD,OAFD,MAEO;AACL,aAAK0I,UAAL,CAAgB1I,yBAAhB;AACD;AACF;AA9NH;AAAA;AAAA,WAyOE,qCAAkC;AAChC,UAAI,KAAK8D,uBAAT,EAAkC;AAChCG,QAAAA,YAAY,CAAC,KAAKH,uBAAN,CAAZ;AACA,aAAKA,uBAAL,GAA+B,IAA/B;AACD;AACF;AA9OH;AAAA;AAAA,WAmQE,4BAAmBuI,CAAnB,EAAwE;AACtE,UAAI,CAAC,KAAK1H,QAAN,IAAkB,KAAKA,QAAL,CAAcpC,mBAAd,KAAsCtI,SAA5D,EAAuE;AACrE,eAAOoS,CAAC,CAACG,OAAF,IAAaH,CAAC,CAACI,OAAtB;AACD;;AACD,aAAO,KAAK9H,QAAL,CAAcpC,mBAAd,IAAqC,KAAKoC,QAAL,CAAcpC,mBAAnD,GAAyE8J,CAAC,CAACG,OAA3E,GAAqFH,CAAC,CAACI,OAA9F;AACD;AAxQH;AAAA;AAAA,WAqRE,eAAMtD,SAAN,EAAyBuD,KAAzB,EAAwC1Q,CAAxC,EAAyD;AACvD,UAAI0Q,KAAK,GAAG,CAAR,IAAaA,KAAK,IAAI,CAA1B,EAA6B;AAC3B,YAAMC,UAAU,GAAG5R,yBAAA,CAA0B,KAAK6R,MAAL,KAAgB,CAA1C,EAA6C5Q,CAA7C,IAAkD,GAArE;AACAA,QAAAA,CAAC,GAAGA,CAAC,GAAG2Q,UAAR;AACA,YAAME,IAAI,GAAG,KAAKD,MAAL,KAAgB5Q,CAA7B;;AACA,YAAMT,GAAG,GAAG,KAAKuR,WAAL,CAAiB9Q,CAAjB,CAAZ;;AACA,YAAMmG,IAAI,GAAGgH,SAAS,GAAG,KAAK4D,YAAjB,GAAgCL,KAA7C,CAL2B,CAM3B;;AACA,aAAKK,YAAL,GAAoB,KAAKC,QAAL,CAAc,KAAKD,YAAL,GAAoB5K,IAAlC,CAApB,CAP2B,CAQ3B;;AACA,YAAM8K,UAAU,GAAG,KAAKtD,OAAL,CAAapO,GAAb,CAAnB;AACA,YAAI2R,aAAa,GAAGpQ,IAAI,CAACqQ,KAAL,CAAWF,UAAU,GAAG,KAAKL,MAAL,KAAgBC,IAAxC,CAApB;;AACA,YAAIK,aAAa,IAAI,CAArB,EAAwB;AACtBA,UAAAA,aAAa,GAAG,CAAhB;AACD;;AAED,aAAKE,gBAAL,CAAsBF,aAAa,GAAG,KAAKN,MAAL,EAAtC,EAAqD,IAArD,EAA2D,MAA3D;;AACA,YAAI,KAAKhI,gBAAL,CAAsBW,UAAtB,IAAoC2H,aAAxC,EAAuD;AACrD;AACA,eAAKtI,gBAAL,CAAsBW,UAAtB,GAAmC2H,aAAnC;AACD;;AAED,aAAKtJ,MAAL;AACD;AACF;AAED;AACF;AACA;AACA;;AAlTA;AAAA;AAAA,WAmTE,kBAAqD;AAAA,UAAvC8I,KAAuC,uEAA/B,KAAK/H,QAAL,CAAcvC,SAAiB;;AACnD,WAAKqC,KAAL,CAAW,CAAX,EAAciI,KAAd,EAAqB,KAAK9H,gBAAL,CAAsB2G,WAAtB,GAAoC,CAAzD;AACD;AAED;AACF;AACA;AACA;;AA1TA;AAAA;AAAA,WA2TE,mBAAsD;AAAA,UAAvCmB,KAAuC,uEAA/B,KAAK/H,QAAL,CAAcvC,SAAiB;;AACpD,WAAKqC,KAAL,CAAW,CAAC,CAAZ,EAAeiI,KAAf,EAAsB,KAAK9H,gBAAL,CAAsB2G,WAAtB,GAAoC,CAA1D;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;AArUA;AAAA;AAAA,WAsUE,kBAASpJ,IAAT,EAA+F;AAAA,UAAxElF,GAAwE,uEAA9C,IAA8C;AAAA,UAAxCC,GAAwC,uEAAd,IAAc;AAC7FD,MAAAA,GAAG,GAAGlC,sBAAA,CAAuBkC,GAAvB,IAA8BA,GAA9B,GAAoC,KAAK0H,QAAL,GAAgB,KAAKA,QAAL,CAActC,OAA9B,GAAwC,IAAlF;AACAnF,MAAAA,GAAG,GAAGnC,sBAAA,CAAuBmC,GAAvB,IAA8BA,GAA9B,GAAoC,KAAKyH,QAAL,GAAgB,KAAKA,QAAL,CAAcrC,OAA9B,GAAwC,IAAlF;;AACA,UAAIvH,sBAAA,CAAuBoH,IAAvB,CAAJ,EAAkC;AAChCA,QAAAA,IAAI,GAAGpH,0BAAA,CAA2BoH,IAA3B,EAAiClF,GAAjC,EAAsCC,GAAtC,CAAP;AACAiF,QAAAA,IAAI,GAAGA,IAAI,IAAI,CAAf;AACA,aAAK4K,YAAL,GAAoB5K,IAApB;AACA,eAAOA,IAAP;AACD;;AAED,aAAOA,IAAP;AACD;AAED;AACF;AACA;AACA;AACA;AACA;;AAxVA;AAAA;AAAA,WAyVE,iBAAQA,IAAR,EAA8B;AAC5B,UAAMmL,QAAQ,GAAG,KAAKC,OAAL,EAAjB;;AACA,UAAID,QAAQ,KAAKnL,IAAjB,EAAuB;AACrB,YAAMqL,OAAO,GAAG,KAAKR,QAAL,CAAc7K,IAAd,CAAhB;;AACA,YAAImL,QAAQ,IAAIE,OAAhB,EAAyB;AACvB,eAAK7J,OAAL;AACA,eAAKC,MAAL;AACA,iBAAO4J,OAAP;AACD;AACF;;AACD,aAAOF,QAAP;AACD;AAED;AACF;AACA;;AAxWA;AAAA;AAAA,WAyWE,mBAAkB;AAChB,UAAIvS,sBAAA,CAAuB,KAAKgS,YAA5B,CAAJ,EAA+C;AAC7C,eAAO,KAAKA,YAAL,IAAqB,CAA5B;AACD;;AACD,aAAO,CAAP;AACD;AAED;AACF;AACA;;AAlXA;AAAA;AAAA,WA4cE,8BAAqBnR,OAArB,EAA0EL,GAA1E,EAAiH;AAC/G,UAAMkS,KAAK,GAAG7R,OAAd;AACA6R,MAAAA,KAAK,CAACpF,OAAN,GAAgBoF,KAAK,CAAClS,GAAtB;;AACA,UAAIkS,KAAK,CAACC,UAAN,KAAqBzT,SAArB,IAAkCwT,KAAK,CAACC,UAAN,KAAqB,IAA3D,EAAiE;AAC/DD,QAAAA,KAAK,CAACC,UAAN,GAAmBnS,GAAnB;AACD;;AACD,UAAIkS,KAAK,CAACpF,OAAN,KAAkBpO,SAAlB,IAA+BwT,KAAK,CAACpF,OAAN,KAAkB,IAArD,EAA2D;AACzDoF,QAAAA,KAAK,CAACpF,OAAN,GAAgB9M,GAAhB;AACD;;AACDkS,MAAAA,KAAK,CAAClS,GAAN,GAAYA,GAAZ;AACA,aAAOkS,KAAP;AACD;AAvdH;AAAA;AAAA,WAydE,6BAAoBpU,IAApB,EAAkE;AAChE,aAAO,CAAC,CAACA,IAAF,IAAUA,IAAI,CAACsU,OAAL,IAAgB,CAAjC;AACD,KA3dH,CA6dE;;AA7dF;AAAA;AAAA;AAqkBE;AACF;AACA;AACA;AACA;AACA;AACE,2BAAczF,MAAd,EAA8BzC,QAA9B,EAAqJ;AAAA;;AAAA,UAA5EmI,MAA4E,uEAA9CpO,oCAA8C;;AACnJ,UAAI,CAACiG,QAAL,EAAe;AACb;AACD;;AACD,UAAIqI,SAAS,GAAG,KAAhB;;AACA,UAAIhR,IAAI,CAACwB,GAAL,CAAS4J,MAAT,IAAmB,CAAvB,EAA0B;AACxB;AACA,YAAI6F,MAAM,GAAG;AAAE9Q,UAAAA,GAAG,EAAExB,MAAM,CAACuS,gBAAd;AAAgC9Q,UAAAA,GAAG,EAAEzB,MAAM,CAACwS;AAA5C,SAAb;AACAF,QAAAA,MAAM,GAAGhT,uBAAA,CAAwBgT,MAAxB,EAAgC,KAAKpJ,QAArC,CAAT;AACAc,QAAAA,QAAQ,CAACnM,OAAT,CAAiB,UAACiF,CAAD,EAAO;AACtB;AACA;AACA,cAAM4P,aAAa,GAAGpT,uBAAA,CACpBA,uBAAA,CACE;AACEkC,YAAAA,GAAG,EAAE8Q,MAAM,CAAC9Q,GADd;AAEEC,YAAAA,GAAG,EAAE6Q,MAAM,CAAC7Q;AAFd,WADF,EAKEqB,CAAC,CAAChE,QALJ,CADoB,EAQpBgE,CAAC,CAACgJ,GARkB,CAAtB;AAUA,cAAM6G,qBAAqB,GAAG,MAAI,CAACzJ,QAAL,IAAiB,MAAI,CAACA,QAAL,CAAcrD,sBAA/B,GAAwD,MAAI,CAAC0E,OAAL,CAAazH,CAAC,CAAChE,QAAF,CAAWgB,GAAxB,CAAxD,GAAuFgD,CAAC,CAAChE,QAAF,CAAWgB,GAAhI;AACA,cAAM8S,WAAW,GAAGD,qBAAqB,GAAGlG,MAA5C;;AACA,cAAInN,sBAAA,CAAuBoT,aAAa,CAAClR,GAArC,KAA6CoR,WAAW,GAAGF,aAAa,CAAClR,GAA7E,EAAkF;AAChF;AACAiL,YAAAA,MAAM,GAAGA,MAAM,GAAGnN,yBAAA,CAA0BoT,aAAa,CAAClR,GAAxC,EAA6CoR,WAA7C,CAAlB;AACD;;AACD,cAAItT,sBAAA,CAAuBoT,aAAa,CAACjR,GAArC,KAA6CmR,WAAW,GAAGF,aAAa,CAACjR,GAA7E,EAAkF;AAChF;AACAgL,YAAAA,MAAM,GAAGA,MAAM,GAAGnN,yBAAA,CAA0BoT,aAAa,CAACjR,GAAxC,EAA6CmR,WAA7C,CAAlB;AACD;AACF,SAvBD;;AAyBA,YAAIvR,IAAI,CAACwB,GAAL,CAAS4J,MAAT,IAAmB,CAAvB,EAA0B;AACxB;AACAzC,UAAAA,QAAQ,CAACnM,OAAT,CAAiB,UAACsC,OAAD,EAAa;AAC5B,gBAAMyM,OAAO,GAAGzM,OAAO,CAACrB,QAAR,CAAiBgB,GAAjC;AACA,gBAAM+S,KAAK,GAAGjG,OAAO,GAAGH,MAAxB;;AACA,gBAAMqG,QAAQ,GAAG,MAAI,CAACC,eAAL,CAAqB5S,OAArB,EAA8B0S,KAA9B,EAAqCV,MAArC,CAAjB;;AACAE,YAAAA,SAAS,GAAGS,QAAQ,KAAKlG,OAAzB;AACD,WALD;AAMD;;AAED,YAAIyF,SAAJ,EAAe;AACb,iBAAO5F,MAAP;AACD;AACF;;AAED,aAAO,CAAP;AACD;AA7nBH;AAAA;AAAA;AA8pBE;AACF;AACA;AACE,uBAAkB;AAChB,UAAI,KAAK1D,OAAT,EAAkB;AAChB,eAAO,KAAKA,OAAL,CAAaiK,YAApB;AACD;;AACD,aAAO,CAAP;AACD;AAED;AACF;AACA;;AA1qBA;AAAA;AAAA,WA2qBE,kBAAiB;AACf,UAAI,KAAKjK,OAAT,EAAkB;AAChB,eAAO,KAAKA,OAAL,CAAa+G,WAApB;AACD;;AACD,aAAO,CAAP;AACD;AAED;AACF;AACA;;AAprBA;AAAA;AAAA,WAqrBE,uBAAc5P,KAAd,EAAmG;AACjG,UAAMrB,OAAgC,GAAG,EAAzC;;AACA,UAAI,CAACqB,KAAL,EAAY;AACV,eAAOrB,OAAP;AACD;;AAED,WAAK,IAAIqC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhB,KAAK,CAACvC,MAA1B,EAAkCuD,CAAC,EAAnC,EAAuC;AACrCrC,QAAAA,OAAO,CAACrB,IAAR,CAAc0C,KAAK,CAACgB,CAAD,CAAN,CAAyC0G,KAAzC,IAAmD1H,KAAK,CAACgB,CAAD,CAAN,CAA8BpC,QAA7F;AACD;;AACD,aAAOD,OAAP;AACD;AAED;AACF;AACA;AACA;;AApsBA;AAAA;AAAA,WAqsBE,kCAAyBoU,UAAzB,EAAkE;AAChE,UAAMC,eAAwC,GAAG,EAAjD;;AACA,WAAKC,gBAAL,CAAsB,UAACC,YAAD,EAAkB;AACtC,YAAI9T,uBAAA,CAAwB8T,YAAY,CAACE,IAAb,CAAkB/S,CAA1C,EAA6C6S,YAAY,CAACE,IAAb,CAAkB9S,CAA/D,EAAkEyS,UAAlE,CAAJ,EAAmF;AACjFC,UAAAA,eAAe,CAAC1V,IAAhB,CAAqB4V,YAAY,CAACxL,KAAlC;AACD;AACF,OAJD;;AAKA,aAAOsL,eAAP;AACD;AA7sBH;AAAA;AAAA,WA+sBE,uBAAc7I,GAAd,EAAsCkJ,IAAtC,EAA4E;AAC1E,UAAIlB,SAAS,GAAG,KAAhB;;AACA,UAAIkB,IAAI,IAAIA,IAAI,CAACvI,IAAL,KAAc1G,4BAA1B,EAAwD;AACtD,YAAIkP,IAAI,GAAG/O,4BAAX;;AACA,YAAK,KAAKyG,oBAAL,IAA6B,KAAKvC,kBAAL,CAAwB0B,GAAG,CAACzM,IAA5B,CAA9B,IAAqE,KAAKuN,wBAAL,IAAiCd,GAAG,CAACzM,IAAJ,CAASwN,QAAnH,EAA8H;AAC5H,cAAI,KAAKzC,kBAAL,CAAwB0B,GAAG,CAACzM,IAA5B,CAAJ,EAAuC;AACrC4V,YAAAA,IAAI,GAAG/O,4BAAP;AACD;AACF,SANqD,CAOtD;;;AACA4N,QAAAA,SAAS,GAAG,KAAK/G,eAAL,CAAqB,KAAKT,KAAL,CAAWV,MAAX,CAAkBrL,QAAvC,EAAiD0U,IAAjD,EAAuDE,gBAAvD,IAA2ErB,SAAvF;;AAEA,YAAIhI,GAAG,CAACzM,IAAJ,CAASwN,QAAb,EAAuB;AACrB;AACAiH,UAAAA,SAAS,GAAG,KAAK7F,gBAAL,CAAsBnC,GAAG,CAACvK,GAA1B,EAA+BiE,wBAA/B,KAA4DsO,SAAxE;AACD;AACF,OAdD,MAcO;AACL;AACAA,QAAAA,SAAS,GAAG,KAAK/G,eAAL,CAAqB,IAArB,EAA2BoI,gBAA3B,IAA+CrB,SAA3D,CAFK,CAIL;AACA;;AACAA,QAAAA,SAAS,GAAG,KAAK7F,gBAAL,CAAsBnC,GAAG,CAACvK,GAA1B,EAA+BiE,wBAA/B,KAA4DsO,SAAxE;AACD;;AAED,aAAOA,SAAP;AACD;AAED;AACF;AACA;AACA;AACA;AACA;;AAhvBA;AAAA;AAAA,WAivBE,yBAAgBlS,OAAhB,EAAmD1B,KAAnD,EAA8I;AAAA,UAA5E0T,MAA4E,uEAA9CpO,oCAA8C;;AAC5I,UAAI,CAAC5D,OAAD,IAAY,CAACA,OAAO,CAACrB,QAAzB,EAAmC;AACjC,eAAOL,KAAP;AACD;;AACDA,MAAAA,KAAK,GAAG4C,IAAI,CAACqC,KAAL,CAAWjF,KAAX,CAAR;;AACA,UAAI0B,OAAO,CAACrB,QAAR,IAAoBqB,OAAO,CAACrB,QAAR,CAAiBgB,GAAjB,IAAwBrB,KAAhD,EAAuD;AACrD0B,QAAAA,OAAO,CAACyM,OAAR,GAAkBzM,OAAO,CAACL,GAA1B;AACAK,QAAAA,OAAO,CAACL,GAAR,GAAcrB,KAAd;AACA0B,QAAAA,OAAO,CAACrB,QAAR,CAAiBgB,GAAjB,GAAuBrB,KAAvB;;AACA,YAAMf,KAAK,GAAG,KAAKiW,oBAAL,CAA0BxT,OAA1B,EAAmCgS,MAAnC,CAAd;;AACA,YAAIzU,KAAK,CAACiN,WAAN,EAAJ,EAAyB;AACvBxK,UAAAA,OAAO,CAACL,GAAR,GAAcpC,KAAK,CAACkP,OAApB;AACAzM,UAAAA,OAAO,CAACrB,QAAR,CAAiBgB,GAAjB,GAAuBpC,KAAK,CAACkP,OAA7B;AACD;;AAED,eAAOnO,KAAP;AACD;;AAED,aAAOA,KAAP;AACD;AAED;AACF;AACA;;AAxwBA;AAAA;AAAA,WAywBE,oBAAW8O,MAAX,EAAiC;AAC/B,UAAI,KAAKxE,OAAL,CAAaxK,KAAb,CAAmBgP,MAAnB,IAA6BA,MAAjC,EAAyC;AACvC,aAAKxE,OAAL,CAAaxK,KAAb,CAAmBgP,MAAnB,GAA4BA,MAA5B;AACD;AACF;AAED;AACF;AACA;AACA;;AAlxBA;AAAA;AAAA,WAmxBE,4BAA0BiG,IAA1B,EAA+D;AAC7D,UAAI,KAAK1L,gBAAL,IAAyB0L,IAA7B,EAAmC;AACjC,aAAK1L,gBAAL,GAAwB0L,IAAxB,CADiC,CAEjC;;AACA,aAAKvL,iBAAL;AACD;AACF;AAED;AACF;AACA;;AA7xBA;AAAA;AAAA,WA8xBE,8BAAqD;AACnD,aAAO,KAAKH,gBAAZ;AACD;AAhyBH;AAAA;AAAA,WAkyBE,2BAAkBgE,GAAlB,EAAoChN,QAApC,EAAiF;AAC/E,UAAM8U,IAAI,GAAG;AACX5I,QAAAA,IAAI,EAAE1G,4BADK;AAEXxE,QAAAA,GAAG,EAAEhB,QAAQ,CAACgB,GAFH;AAGXhB,QAAAA,QAAQ,EAAEA,QAHC;AAIXgN,QAAAA,GAAG,EAAEA;AAJM,OAAb;AAMA,aAAO8H,IAAP;AACD;AA1yBH;AAAA;AAAA,WA4yBE,gCAAuD;AACrD,aAAO,KAAKC,aAAL,CAAmB,KAAKtI,mBAAL,EAAnB,CAAP;AACD;AA9yBH;AAAA;AAAA,WAgzBE,+BAAqD;AAAA;;AACnD,UAAMF,QAAgC,GAAG,EAAzC;;AACA,WAAK8H,gBAAL,CAAsB,UAACrU,QAAD,EAAoB;AACxC,YAAIA,QAAQ,IAAIA,QAAQ,CAAC8I,KAAT,CAAeyD,QAA/B,EAAyC;AACvCA,UAAAA,QAAQ,CAAC7N,IAAT,CAAc,MAAI,CAACqO,iBAAL,CAAuB/M,QAAQ,CAACgV,SAAT,CAAmBlM,KAA1C,EAAiD9I,QAAQ,CAAC8I,KAA1D,CAAd;AACD;;AACD;AACD,OALD;;AAOA,aAAOyD,QAAP;AACD;AA1zBH;AAAA;AAAA,WA4zBE,2BAAkD;AAChD,UAAMA,QAAiC,GAAG,EAA1C;;AACA,WAAK8H,gBAAL,CAAsB,UAACrU,QAAD,EAAoB;AACxCuM,QAAAA,QAAQ,CAAC7N,IAAT,CAAcsB,QAAQ,CAAC8I,KAAvB;AACD,OAFD;;AAIA,aAAOyD,QAAP;AACD;AAn0BH;AAAA;AAAA,WAq0BE,8BAAsD;AACpD,aAAO,KAAK2C,MAAL,CAAY,KAAK+F,eAAL,EAAZ,EAAoCtP,4BAApC,CAAP;AACD;AAv0BH;AAAA;AAAA,WAy0BE,uBAA+C;AAC7C,aAAO,KAAKuJ,MAAL,CAAY,IAAZ,CAAP;AACD;AA30BH;AAAA;AAAA,WA60BE,0BAAyBgE,KAAzB,EAA0DgC,IAA1D,EAAkFvV,KAAlF,EAA2G;AACzG,UAAIuV,IAAI,CAAC3I,QAAL,KAAkB5M,KAAtB,EAA6B;AAC3B,YAAMwV,UAAU,GAAG,OAAOD,IAAI,CAACC,UAAZ,KAA2B,SAA3B,GAAuCD,IAAI,CAACC,UAA5C,GAAyD,IAA5E;;AACA,YAAI,CAACxV,KAAD,IAAWA,KAAK,IAAIwV,UAAxB,EAAqC;AACnCD,UAAAA,IAAI,CAAC3I,QAAL,GAAgB5M,KAAhB;AACAuT,UAAAA,KAAK,CAAClH,OAAN,CAActN,IAAd,CAAmBwW,IAAnB;AACA,iBAAO,IAAP;AACD;AACF;;AAED,aAAO,KAAP;AACD;AAx1BH;AAAA;AAAA,WA01BE,gBAAcE,KAAd,EAAkI;AAAA,UAA/DV,IAA+D,uEAAxD/O,4BAAwD;;AAChI,UAAM5F,OAAO,GAAG,KAAKyM,eAAL,CAAqB4I,KAArB,EAA4BV,IAA5B,CAAhB;;AACA,UAAI3U,OAAO,CAAC6U,gBAAZ,EAA8B;AAC5B,aAAKvL,MAAL;AACD;;AACD,aAAOtJ,OAAP;AACD;AAED;AACF;AACA;AACA;AACA;;AAt2BA;AAAA;AAAA,WAu2BE,yBAAuBqV,KAAvB,EAA2I;AAAA;;AAAA,UAA/DV,IAA+D,uEAAxD/O,4BAAwD;;AACzI,UAAI,CAACyP,KAAL,EAAY;AACVA,QAAAA,KAAK,GAAG,EAAR;AACD;;AACD,UAAI,CAACvI,KAAK,CAACC,OAAN,CAAcsI,KAAd,CAAL,EAA2B;AACzBA,QAAAA,KAAK,GAAG,CAACA,KAAD,CAAR;AACD;;AAED,UAAMlC,KAAK,GAAG;AACZ0B,QAAAA,gBAAgB,EAAE,KADN;AAEZrI,QAAAA,QAAQ,EAAE,KAAK8I,oBAAL,EAFE;AAGZrJ,QAAAA,OAAO,EAAE;AAHG,OAAd;AAKA,UAAMsJ,UAAU,GAAGF,KAAnB,CAbyI,CAczI;;AACA,WAAK3I,mBAAL;;AACA,UAAI6I,UAAU,IAAIZ,IAAI,KAAK/O,4BAA3B,EAAyD;AACvDyP,QAAAA,KAAK,CAACrW,OAAN,CAAc,UAACmW,IAAD,EAAU;AACtB,cAAMlJ,OAAO,GAAG,MAAI,CAACuJ,gBAAL,CAAsBrC,KAAtB,EAA6BgC,IAA7B,EAAmC,IAAnC,CAAhB;;AACA,cAAIlJ,OAAO,IAAIkJ,IAAI,CAAC3I,QAApB,EAA8B;AAC5B2G,YAAAA,KAAK,CAAC3G,QAAN,CAAe7N,IAAf,CAAoBwW,IAApB;AACD;AACF,SALD;AAMD,OAPD,MAOO,IAAII,UAAU,IAAIZ,IAAI,KAAK/O,4BAA3B,EAAyD;AAC9DyP,QAAAA,KAAK,CAACrW,OAAN,CAAc,UAACmW,IAAD,EAAU;AACtB,cAAIhC,KAAK,CAAC3G,QAAN,CAAehL,OAAf,CAAuB2T,IAAvB,KAAgC,CAApC,EAAuC;AACrC,kBAAI,CAACK,gBAAL,CAAsBrC,KAAtB,EAA6BgC,IAA7B,EAAmC,KAAnC;;AACA1U,YAAAA,2BAAA,CAA8C0S,KAAK,CAAC3G,QAApD,EAA8D2I,IAA9D;AACD,WAHD,MAGO;AACL,kBAAI,CAACK,gBAAL,CAAsBrC,KAAtB,EAA6BgC,IAA7B,EAAmC,IAAnC;;AACA,gBAAIA,IAAI,CAAC3I,QAAT,EAAmB;AACjB2G,cAAAA,KAAK,CAAC3G,QAAN,CAAe7N,IAAf,CAAoBwW,IAApB;AACD;AACF;AACF,SAVD;AAWD,OAZM,MAYA,IAAIR,IAAI,KAAK/O,4BAAb,EAA2C;AAChD,YAAM8P,aAAsC,GAAG,EAA/C;;AACA,YAAIL,KAAJ,EAAW;AACTA,UAAAA,KAAK,CAACrW,OAAN,CAAc,UAACmW,IAAD,EAAU;AACtB,kBAAI,CAACK,gBAAL,CAAsBrC,KAAtB,EAA6BgC,IAA7B,EAAmC,IAAnC;;AACA,gBAAIA,IAAI,CAAC3I,QAAT,EAAmB;AACjBkJ,cAAAA,aAAa,CAAC/W,IAAd,CAAmBwW,IAAnB;AACD;AACF,WALD;AAMD;;AAEDhC,QAAAA,KAAK,CAAC3G,QAAN,CAAexN,OAAf,CAAuB,UAACmW,IAAD,EAAU;AAC/B,cAAMQ,MAAM,GAAGJ,UAAU,CAAC/T,OAAX,CAAmB2T,IAAnB,KAA4B,CAA3C,CAD+B,CAE/B;;AACA,cAAI,CAACQ,MAAL,EAAa;AACX,kBAAI,CAACH,gBAAL,CAAsBrC,KAAtB,EAA6BgC,IAA7B,EAAmC,KAAnC;AACD;AACF,SAND;;AAQA,YAAIhC,KAAK,CAAClH,OAAN,CAAcnN,MAAd,GAAuB,CAA3B,EAA8B;AAC5B,cAAI4W,aAAJ,EAAmB;AACjBvC,YAAAA,KAAK,CAAC3G,QAAN,GAAiBkJ,aAAjB;AACD,WAFD,MAEO;AACLvC,YAAAA,KAAK,CAAC3G,QAAN,CAAe1N,MAAf,GAAwB,CAAxB;AACD;AACF;AACF;;AAED,UAAIqU,KAAK,CAAClH,OAAN,CAAcnN,MAAd,GAAuB,CAA3B,EAA8B;AAC5BqU,QAAAA,KAAK,CAAC0B,gBAAN,GAAyB,IAAzB;;AACA,aAAKe,sBAAL,CAA4BzC,KAA5B;AACD;;AAED,aAAOA,KAAP;AACD;AAED;AACF;AACA;;AAh7BA;AAAA;AAAA,WAi7BE,0BAAiB1U,QAAjB,EAAmH;AACjH,UAAI,CAACA,QAAL,EAAe;AACb;AACD;;AACD,UAAI,CAAC,KAAKuR,MAAV,EAAkB;AAChB;AACD;;AAED,UAAM6F,eAAe,GAAG,KAAKC,eAAL,EAAxB;;AACA,UAAI,CAACD,eAAL,EAAsB;AACpB;AACD;;AAEDA,MAAAA,eAAe,CAACE,IAAhB,CAAqB/W,OAArB,CAA6B,UAACgX,OAAD,EAAa;AACxC,YAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AAED,YAAIC,OAAO,GAAG,IAAd;AACAD,QAAAA,OAAO,CAACnJ,SAAR,CAAkB7N,OAAlB,CAA0B,UAACiB,QAAD,EAAWiW,aAAX,EAA6B;AACrD,cAAIjW,QAAJ,EAAc;AACZxB,YAAAA,QAAQ,CAACwB,QAAD,EAAWiW,aAAX,EAA0BD,OAA1B,CAAR;AACD;;AAEDA,UAAAA,OAAO,GAAG,KAAV;AACD,SAND;AAOD,OAbD;AAcD;AA58BH;AAAA;AAAA,WA88BE,wBAAeE,MAAf,EAA0CC,SAA1C,EAAiG;AAC/F,UAAM5K,GAAG,GAAG,KAAKvB,YAAL,CAAkBkM,MAAlB,EAA0BC,SAA1B,CAAZ;;AACA5K,MAAAA,GAAG,CAACC,WAAJ,GAAkB,KAAK4K,cAAL,CAAoB7K,GAAG,CAAC9J,CAAxB,EAA2B,KAA3B,CAAlB;AACA8J,MAAAA,GAAG,CAACE,OAAJ,GAAc,KAAK2K,cAAL,CAAoB7K,GAAG,CAAC9J,CAAxB,EAA2B,IAA3B,CAAd;AACA8J,MAAAA,GAAG,CAACvK,GAAJ,GAAUuK,GAAG,CAACC,WAAd;;AACA,UAAI,KAAKpB,QAAL,IAAiB,KAAKA,QAAL,CAAcpD,WAAnC,EAAgD;AAC9CuE,QAAAA,GAAG,CAACvK,GAAJ,GAAUuK,GAAG,CAACE,OAAd;AACD;;AAED,UAAI,KAAKb,SAAT,EAAoB;AAClB,YAAI,CAAC,KAAKwC,cAAV,EAA0B;AACxB,eAAKA,cAAL,GAAsB,EAAtB;AACD,SAHiB,CAKlB;;;AACA,YAAM3L,CAAC,GAAGc,IAAI,CAACqC,KAAL,CAAW,KAAKgG,SAAL,CAAenJ,CAAf,IAAoB,KAAKsJ,eAAL,CAAqBtJ,CAArB,GAAyB,KAAK4U,aAAL,EAA7C,CAAX,CAAV;AACA,YAAM3U,CAAC,GAAGa,IAAI,CAACqC,KAAL,CAAW,KAAKgG,SAAL,CAAelJ,CAAf,IAAoB,KAAKqJ,eAAL,CAAqBrJ,CAArB,GAAyB,KAAK4U,YAAL,EAA7C,CAAX,CAAV;AACA,aAAKlJ,cAAL,CAAoB3L,CAApB,GAAwBc,IAAI,CAACG,GAAL,CAASjB,CAAT,EAAY8J,GAAG,CAAC9J,CAAhB,CAAxB;AACA,aAAK2L,cAAL,CAAoB1L,CAApB,GAAwBa,IAAI,CAACG,GAAL,CAAShB,CAAT,EAAY6J,GAAG,CAAC7J,CAAhB,CAAxB;AACA,aAAK0L,cAAL,CAAoBxL,KAApB,GAA4BW,IAAI,CAACI,GAAL,CAASlB,CAAT,EAAY8J,GAAG,CAAC9J,CAAhB,IAAqB,KAAK2L,cAAL,CAAoB3L,CAArE;AACA,aAAK2L,cAAL,CAAoBvL,MAApB,GAA6BU,IAAI,CAACI,GAAL,CAASjB,CAAT,EAAY6J,GAAG,CAAC7J,CAAhB,IAAqB,KAAK0L,cAAL,CAAoB1L,CAAtE,CAXkB,CAYlB;;AACA,YAAI,KAAKuJ,aAAT,EAAwB;AACtB,eAAKA,aAAL,GAAqB,KAAKmC,cAAL,CAAoBvL,MAApB,IAA8B,KAAK8H,OAAL,CAAaf,cAA3C,IAA6D,KAAKwE,cAAL,CAAoBxL,KAApB,IAA6B,KAAK+H,OAAL,CAAaf,cAA5H;AACD;AACF;;AAED,aAAO2C,GAAP;AACD;AA1+BH;AAAA;AAAA,WA4+BE,6BAA0B;AACxB,WAAKgL,sBAAL;;AACA,WAAK3L,SAAL,GAAiB,IAAjB;AACA,WAAKmB,KAAL,GAAa,IAAb;AACA,WAAKK,oBAAL,GAA4B,KAA5B;AACA,WAAKC,wBAAL,GAAgC,KAAhC;AACA,WAAKe,cAAL,GAAsB,IAAtB;AACA,WAAKxB,aAAL,GAAqB,IAArB;AACA,WAAKb,eAAL,GAAuB,IAAvB;AACA,WAAKtB,aAAL,GAAqB,KAArB;AACA,WAAKwB,aAAL,GAAqB,KAArB;;AACA,WAAK4G,YAAL;AACD;AAED;AACF;AACA;;AA5/BA;AAAA;AAAA,WA6/BE,+BAA+B;AAC7B;AACA,UAAI,KAAKjG,aAAL,IAAsBpB,IAAI,CAACC,GAAL,KAAa,KAAKmB,aAAlB,GAAkC,KAAKjC,OAAL,CAAanB,gBAAzE,EAA2F;AACzF,eAAO,IAAP;AACD;;AAED,aAAO,KAAP;AACD;AAED;AACF;AACA;;AAxgCA;AAAA;AAAA,WAygCE,yBAAsB;AAAA;;AACpB,UAAI,KAAKmB,OAAL,CAAarB,YAAjB,EAA+B;AAC7B,YAAI,CAAC,KAAKkO,YAAV,EAAwB;AACtB;AACA,eAAKA,YAAL,GAAoBvS,MAAM,CAACwS,WAAP,CAAmB,YAAM;AAC3C,kBAAI,CAAChF,qBAAL,CAA2B,IAA3B;AACD,WAFmB,EAEjB,KAAK9H,OAAL,CAAarB,YAFI,CAApB;AAGD;AACF;AACF;AAED;AACF;AACA;;AAthCA;AAAA;AAAA,WAuhCE,wBAAqB;AACnB,UAAI,KAAKkO,YAAT,EAAuB;AACrBE,QAAAA,aAAa,CAAC,KAAKF,YAAN,CAAb;AACA,aAAKA,YAAL,GAAoB,IAApB;AACD;;AAED,WAAKG,sBAAL,GAA8B,IAA9B;AACD;AAED;AACF;AACA;;AAliCA;AAAA;AAAA,WAmiCE,oCAAoC;AAClC;AACA,UAAI,KAAKA,sBAAL,IAA+BnM,IAAI,CAACC,GAAL,KAAa,KAAKkM,sBAAlB,IAA4C,EAA/E,EAAmF;AACjF,eAAO,IAAP;AACD;;AAED,WAAKA,sBAAL,GAA8BnM,IAAI,CAACC,GAAL,EAA9B;AACA,aAAO,KAAP;AACD;AA3iCH;AAAA;AAAA,WA6iCE,sBAAamM,KAAb,EAAuCrL,GAAvC,EAA+DsL,cAA/D,EAA+F;AAC7F,UAAI,CAACD,KAAD,IAAU,CAACrL,GAAf,EAAoB;AAClB;AACD;;AAED,UAAMuL,OAAO,GAAGvU,IAAI,CAACqQ,KAAL,CAAWgE,KAAK,CAACnV,CAAN,GAAU8J,GAAG,CAAC9J,CAAzB,CAAhB;AACA,UAAMsV,OAAO,GAAGF,cAAc,CAACpV,CAAf,GAAmBqV,OAAnC;;AAEA,UAAIA,OAAO,GAAG,CAAd,EAAiB;AACf,aAAKjE,gBAAL,CAAsBkE,OAAO,GAAG,KAAK1E,MAAL,EAAhC;AACD;;AAED,UAAIyE,OAAO,GAAG,CAAV,IAAeC,OAAO,GAAG,KAAK1E,MAAL,EAAV,IAA2B,KAAKhI,gBAAL,CAAsBiF,WAAtB,GAAoC,CAAlF,EAAqF;AACnF,aAAKjF,gBAAL,CAAsBW,UAAtB,GAAmC,KAAKX,gBAAL,CAAsBiF,WAAzD;AACD,OAFD,MAEO;AACL,aAAKjF,gBAAL,CAAsBW,UAAtB,GAAmC+L,OAAnC;AACD;;AACD,WAAK1M,gBAAL,CAAsBC,SAAtB,GAAkC/H,IAAI,CAACqQ,KAAL,CAAWiE,cAAc,CAACnV,CAAf,GAAmBkV,KAAK,CAAClV,CAAzB,GAA6B6J,GAAG,CAAC7J,CAA5C,CAAlC;AACD;AA/jCH;AAAA;AAAA,WAikCE,uCAA8B6J,GAA9B,EAAsD;AACpD,UAAM9J,CAAC,GAAG8J,GAAG,CAAC9J,CAAd;AACA,UAAMC,CAAC,GAAG6J,GAAG,CAAC7J,CAAd;AACA,UAAI6R,SAAS,GAAG,KAAhB;AACA,UAAIyD,MAAM,GAAG,CAAb;AACA,UAAIC,MAAM,GAAG,CAAb,CALoD,CAMpD;;AACA,UAAMzD,MAAM,GAAG,KAAK7J,OAAL,CAAahB,sBAA5B;AACA,UAAMuO,MAAM,GAAGzV,CAAC,IAAI+R,MAApB;AACA,UAAM2D,OAAO,GAAG1V,CAAC,IAAI,KAAK4Q,MAAL,KAAgBmB,MAArC;AACA,UAAM4D,KAAK,GAAG1V,CAAC,IAAI8R,MAAnB;AACA,UAAM6D,QAAQ,GAAG3V,CAAC,IAAI,KAAK4V,OAAL,KAAiB9D,MAAvC;AACA,UAAI+D,QAAQ,GAAG,IAAf;AACA,UAAIC,SAAS,GAAG,IAAhB;;AACA,UAAIN,MAAM,IAAIC,OAAV,IAAqBC,KAArB,IAA8BC,QAAlC,EAA4C;AAC1C;AACA,aAAKI,aAAL;;AAEA,YAAI,KAAKC,wBAAL,EAAJ,EAAqC;AACnC,iBAAO,KAAP;AACD;;AAED,YAAMC,qBAAqB,GAAG1W,KAAK,CAAC,KAAK0I,OAAL,CAAapB,iBAAd,CAAL,GAAwC,CAAxC,GAA4C,KAAKoB,OAAL,CAAapB,iBAAvF;;AACA,YAAI2O,MAAJ,EAAY;AACV;AACAF,UAAAA,MAAM,GAAG,CAACxW,yBAAA,CAA0BiB,CAA1B,EAA6B+R,MAA7B,CAAD,GAAwCmE,qBAAjD;AACD,SAHD,MAGO,IAAIR,OAAJ,EAAa;AAClB;AACAH,UAAAA,MAAM,GAAGxW,yBAAA,CAA0BiB,CAA1B,EAA6B,KAAK4Q,MAAL,KAAgBmB,MAA7C,IAAuDmE,qBAAhE;AACAJ,UAAAA,QAAQ,GAAG,KAAKlB,aAAL,KAAuB,KAAKhE,MAAL,EAAvB,GAAuC2E,MAAlD;AACD;;AAED,YAAII,KAAJ,EAAW;AACT;AACAH,UAAAA,MAAM,GAAI,CAACzW,yBAAA,CAA0BiB,CAA1B,EAA6B+R,MAA7B,CAAD,GAAwCmE,qBAAzC,GAAkE,CAA3E;AACD,SAHD,MAGO,IAAIN,QAAJ,EAAc;AACnB;AACAJ,UAAAA,MAAM,GAAIzW,yBAAA,CAA0BiB,CAA1B,EAA6B,KAAK6V,OAAL,KAAiB9D,MAA9C,IAAwDmE,qBAAzD,GAAkF,CAA3F;AACAH,UAAAA,SAAS,GAAG,KAAKnN,gBAAL,CAAsBC,SAAtB,GAAkC,KAAKgN,OAAL,EAA9C;AACD;AACF,OA1BD,MA0BO;AACL,aAAKzF,YAAL;AACD;;AAED,UAAI0F,QAAQ,IAAIC,SAAhB,EAA2B;AACzB,aAAK3E,gBAAL,CAAsB0E,QAAtB,EAAgCC,SAAhC,EAA2C,mBAA3C;AACD;;AAED,UAAIjV,IAAI,CAACwB,GAAL,CAASiT,MAAT,IAAmB,CAAvB,EAA0B;AACxB,aAAK3M,gBAAL,CAAsBW,UAAtB,IAAoCgM,MAApC;AACAzD,QAAAA,SAAS,GAAG,IAAZ;AACD;;AAED,UAAIhR,IAAI,CAACwB,GAAL,CAASkT,MAAT,IAAmB,CAAvB,EAA0B;AACxB,aAAK5M,gBAAL,CAAsBC,SAAtB,IAAmC2M,MAAnC;AACA1D,QAAAA,SAAS,GAAG,IAAZ;AACD;;AAED,aAAOA,SAAP;AACD;AAED;AACF;AACA;;AAhoCA;AAAA;AAAA,WAioCE,iBAAeqE,EAAf,EAAmC;AACjC,UAAI,CAAC,KAAKxN,QAAV,EAAoB;AAClB,eAAOwN,EAAP;AACD;;AACD,UAAIlV,GAAG,GAAG,KAAK0H,QAAL,CAAc1H,GAAxB;;AACA,UAAI,CAAClC,sBAAA,CAAuBkC,GAAvB,CAAL,EAAkC;AAChCA,QAAAA,GAAG,GAAG,CAAN;AACD;;AACDA,MAAAA,GAAG,IAAI,KAAK8P,YAAL,IAAqB,CAA5B;AACA,UAAMqF,KAAK,GAAG,KAAKzN,QAAL,CAAcjD,OAAd,GAAwB,KAAKqL,YAA7B,IAA6C,CAA3D;AACA,UAAMxR,GAAG,GAAG0B,GAAG,GAAIkV,EAAE,GAAG,KAAKxN,QAAL,CAAclD,MAApB,GAA8B2Q,KAAhD;AACA,aAAO7W,GAAP;AACD;AAED;AACF;AACA;;AAjpCA;AAAA;AAAA,WAkpCE,qBAAYA,GAAZ,EAAiC;AAC/B,aAAO,KAAKoO,OAAL,CAAapO,GAAb,IAAoB,KAAKqV,aAAL,EAApB,GAA2C,KAAKyB,WAAL,EAAlD;AACD;AAED;AACF;AACA;;AAxpCA;AAAA;AAAA,WAypCE,qBAAYF,EAAZ,EAAgC;AAC9B,aAAO,KAAKG,OAAL,CAAa,KAAK1B,aAAL,KAAuBuB,EAAvB,GAA4B,KAAKE,WAAL,EAAzC,CAAP;AACD;AAED;AACF;AACA;;AA/pCA;AAAA;AAAA,WAgqCE,iBAAe9W,GAAf,EAAoC;AAClC,UAAI,CAAC,KAAKoJ,QAAV,EAAoB;AAClB,eAAOpJ,GAAP;AACD;;AACD,UAAI0B,GAAG,GAAG,KAAK0H,QAAL,CAAc1H,GAAxB;;AACA,UAAI,CAAClC,sBAAA,CAAuBkC,GAAvB,CAAL,EAAkC;AAChCA,QAAAA,GAAG,GAAG,CAAN;AACD;;AACDA,MAAAA,GAAG,IAAI,KAAK8P,YAAL,IAAqB,CAA5B;AACA,UAAMqF,KAAK,GAAG,KAAKzN,QAAL,CAAcjD,OAAd,GAAwB,KAAKqL,YAA7B,IAA6C,CAA3D;AACA,aAAO,CAAC,CAAC9P,GAAD,GAAO1B,GAAR,KAAgB,KAAKoJ,QAAL,CAAclD,MAAd,GAAuB2Q,KAAvC,CAAP;AACD;AAED;AACF;AACA;;AA/qCA;AAAA;AAAA,WAgrCE,iBAAe7W,GAAf,EAAoC;AAClC;AACA,UAAI,KAAKoJ,QAAL,IAAiB,KAAKA,QAAL,CAAcpD,WAA/B,IAA8C,KAAKoD,QAAL,CAAc/C,QAAhE,EAA0E;AACxE,YAAM2Q,KAAK,GAAG,KAAK5N,QAAL,CAAc/C,QAA5B;AACA,YAAMrF,IAAI,GAAGhB,GAAG,GAAGgX,KAAnB;AACA,YAAMC,QAAQ,GAAG1V,IAAI,CAACqQ,KAAL,CAAW5Q,IAAX,CAAjB;;AACA,YAAMkW,QAAQ,GAAG3V,IAAI,CAACwB,GAAL,CAAS,KAAKqG,QAAL,CAAc1H,GAAvB,IAA8B,KAAK0H,QAAL,CAAc/C,QAA7D;;AACA,YAAM8Q,SAAS,GAAG3X,kBAAA,CAAmB,KAAK4J,QAAL,CAAc1H,GAAjC,KAAyCwV,QAAQ,GAAG3V,IAAI,CAACqC,KAAL,CAAWsT,QAAX,CAApD,IAA4E,KAAK9N,QAAL,CAAc/C,QAA5G;;AACArG,QAAAA,GAAG,GAAGuB,IAAI,CAACqQ,KAAL,CAAWuF,SAAX,IAAwB5V,IAAI,CAACqQ,KAAL,CAAWqF,QAAQ,GAAGD,KAAtB,CAA9B;AACD;;AAEDhX,MAAAA,GAAG,GAAGR,0BAAA,CAA2BQ,GAA3B,EAAgC,KAAKoJ,QAAL,CAAc1H,GAA9C,EAAmD,KAAK0H,QAAL,CAAczH,GAAjE,CAAN;AACA,aAAO3B,GAAP;AACD;AA7rCH;AAAA;AAAA,WA+rCE,wBAAeS,CAAf,EAAuD;AAAA,UAA7BuF,WAA6B,uEAAf,KAAe;AACrD,UAAM+C,QAAQ,GAAGxH,IAAI,CAACG,GAAL,CAASjB,CAAT,EAAY,KAAK4Q,MAAL,EAAZ,CAAjB;;AACA,UAAI5E,YAAY,GAAG,KAAK8E,WAAL,CAAiBxI,QAAjB,CAAnB;;AACA0D,MAAAA,YAAY,GAAGlL,IAAI,CAACqQ,KAAL,CAAWnF,YAAX,CAAf;;AACA,UAAIzG,WAAJ,EAAiB;AACfyG,QAAAA,YAAY,GAAG,KAAKhC,OAAL,CAAagC,YAAb,CAAf;AACD;;AAED,aAAOA,YAAP;AACD;AAED;AACF;AACA;AACA;AACA;AACA;;AA/sCA;AAAA;AAAA,WAgtCE,0BAAiB2K,EAAjB,EAAwD;AAAA,UAA3BC,SAA2B,uEAAf,KAAe;AACtD,UAAM1T,IAAI,GAAGnE,kBAAA,CAAmB4X,EAAnB,IAAyB,CAAzB,GAA6B,GAA7B,GAAmC,EAAhD;AACAA,MAAAA,EAAE,GAAG7V,IAAI,CAACwB,GAAL,CAASqU,EAAT,CAAL,CAFsD,CAGtD;;AACA,UAAIE,OAAO,GAAGF,EAAE,GAAG,IAAnB;;AACA,UAAIC,SAAJ,EAAe;AACbC,QAAAA,OAAO,GAAGF,EAAV;AACD,OAPqD,CAStD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,UAAMG,IAAI,GAAG,CAAb;AACA,UAAMC,IAAI,GAAG,CAAb;AACA,UAAMC,KAAK,GAAG,CAAd;AACA,UAAMC,OAAO,GAAG,CAAhB;AAEA,UAAIC,GAAG,GAAG,EAAV;;AACA,UAAIJ,IAAJ,EAAU;AACRI,QAAAA,GAAG,IAAIJ,IAAI,GAAG,GAAd;AACD;;AAED,UAAIC,IAAJ,EAAU;AACRG,QAAAA,GAAG,IAAIH,IAAI,GAAG,GAAd;AACD;;AAED,UAAIC,KAAJ,EAAW;AACTE,QAAAA,GAAG,IAAIF,KAAK,GAAG,GAAf;AACD;;AAED,UAAIC,OAAJ,EAAa;AACXC,QAAAA,GAAG,IAAID,OAAO,GAAG,GAAjB;AACD;;AAED,UAAI,CAACzX,KAAK,CAACqX,OAAD,CAAV,EAAqB;AACnBK,QAAAA,GAAG,IAAIL,OAAP;AACD;;AAED,aAAO3T,IAAI,GAAGgU,GAAd;AACD;AAED;AACF;AACA;;AAtwCA;AAAA;AAAA,WAuwCE,uBAAsB;AACpB,UAAI,CAAC,KAAKvO,QAAV,EAAoB;AAClB,eAAO,CAAP;AACD;;AACD,aAAO,KAAKA,QAAL,CAAc9C,UAAd,IAA4B,CAAnC;AACD;AA5wCH;AAAA;AAAA,WA8wCE,wBAAqB;AACnB,UAAMsR,WAAW,GAAG,CAAC,CAAC,KAAKzJ,IAAP,IAAe,CAAC,CAAC,KAAK/E,QAAtB,IAAkC,CAAC,CAAC,KAAK+E,IAAL,CAAU+G,MAA9C,IAAwD,KAAK/G,IAAL,CAAU+G,MAAV,CAAiBlF,WAAjB,GAA+B,CAAvF,IAA4F,KAAK7B,IAAL,CAAU+G,MAAV,CAAiBhC,YAAjB,GAAgC,CAA5H,IAAiI,KAAK9J,QAAL,CAAclD,MAAnK;;AACA,UAAI,CAAC0R,WAAL,EAAkB;AAChB;AACD;;AACD,UAAMC,WAAW,GAAG,KAAKxG,MAAL,KAAgB,KAAKyF,WAAL,EAApC;;AACA,UAAIhV,IAAI,GAAG,KAAKiV,OAAL,CAAa,KAAK1B,aAAL,EAAb,CAAX;AACA,UAAIxT,EAAE,GAAG,KAAKkV,OAAL,CAAa,KAAK1B,aAAL,KAAuBwC,WAApC,CAAT;;AACA,UAAI5X,KAAK,CAAC6B,IAAD,CAAL,IAAe7B,KAAK,CAAC4B,EAAD,CAApB,IAA4BC,IAAI,KAAKD,EAAzC,EAA6C;AAC3C;AACD;;AAED,UAAIA,EAAE,GAAGC,IAAT,EAAe;AACb,YAAMgW,QAAQ,GAAGjW,EAAjB;AACAA,QAAAA,EAAE,GAAGC,IAAL;AACAA,QAAAA,IAAI,GAAGgW,QAAP;AACD;;AAED,UAAMC,WAAW,GAAGvY,yBAAA,CAA0BsC,IAA1B,EAAgCD,EAAhC,CAApB;;AACA,UAAIkW,WAAW,IAAI,CAAnB,EAAsB;AACpB;AACD,OArBkB,CAuBnB;AACA;;;AACA,UAAM/W,IAAI,GAAGxB,0BAAA,CAA2BuY,WAAW,IAAIF,WAAW,GAAG,KAAKzO,QAAL,CAAclD,MAAhC,CAAtC,CAAb;AACA,UAAM+R,SAAS,GAAGzY,0BAAA,CAA2BuY,WAAW,IAAIF,WAAW,GAAG,KAAKzO,QAAL,CAAchD,WAAhC,CAAtC,CAAlB,CA1BmB,CA4BnB;;AACA,UAAM8R,OAAO,GAAG3W,IAAI,CAACqC,KAAL,CAAW9B,IAAI,GAAGd,IAAlB,IAA0BA,IAA1C,CA7BmB,CA+BnB;;AACA,UAAMmX,KAAK,GAAG5W,IAAI,CAAC6W,IAAL,CAAUvW,EAAE,GAAGb,IAAf,IAAuBA,IAAvB,GAA8BA,IAA5C;;AAEA,UAAI,CAACxB,sBAAA,CAAuBwB,IAAvB,CAAD,IAAiCA,IAAI,IAAI,CAAzC,IAA8CO,IAAI,CAACwB,GAAL,CAASoV,KAAK,GAAGD,OAAjB,MAA8B,CAAhF,EAAmF;AACjF;AACD;;AAED,UAAIG,aAAa,GAAG,CAApB;;AACA,WAAKlK,IAAL,CAAUmK,IAAV;;AACA,UAAMhZ,YAAY,GAAGrB,+BAAA,CAAgC,KAAKmL,QAArC,CAArB;AACA,UAAMmP,UAAU,GAAGjZ,YAAY,GAAG,CAAlC;AACA,UAAMkZ,eAAe,GAAGlZ,YAAY,GAAG,GAAvC;;AACA,WAAK,IAAI8B,CAAC,GAAG8W,OAAb,EAAsB9W,CAAC,IAAI+W,KAA3B,EAAkC/W,CAAC,IAAIJ,IAAvC,EAA6C;AAC3C;AACA,YAAMyX,QAAQ,GAAG,KAAKC,SAAL,CAAe,KAAKC,WAAL,CAAiBvX,CAAjB,CAAf,CAAjB;;AACA,aAAK+M,IAAL,CAAUmK,IAAV;;AACA,aAAKnK,IAAL,CAAUyK,SAAV;;AACA,aAAKzK,IAAL,CAAU0K,WAAV,CAAsB,CAAC,CAAD,CAAtB;;AACA,aAAK1K,IAAL,CAAU2K,SAAV,GAAsB,CAAtB;AACA,aAAK3K,IAAL,CAAU4K,WAAV,GAAwB,KAAK3P,QAAL,CAAc3C,SAAtC;AACAjH,QAAAA,sBAAA,CAAuB,KAAK2O,IAA5B,EAAkCsK,QAAlC,EAA4CF,UAA5C,EAAwDE,QAAxD,EAAkEnZ,YAAlE;;AACA,aAAK6O,IAAL,CAAU8K,MAAV;;AAEA,aAAK9K,IAAL,CAAU+K,SAAV,GAAsB,KAAK9P,QAAL,CAAc5C,WAApC;;AACA,YAAI,KAAK4C,QAAL,CAAczC,IAAlB,EAAwB;AACtB,eAAKwH,IAAL,CAAUxH,IAAV,GAAiB,KAAKyC,QAAL,CAAczC,IAA/B;AACD;;AAED,YAAMwS,IAAI,GAAG,KAAKC,gBAAL,CAAsBhY,CAAtB,CAAb;;AACA,YAAMiY,QAAQ,GAAG,KAAKlL,IAAL,CAAUmL,WAAV,CAAsBH,IAAtB,CAAjB;;AAEA,YAAMI,KAAK,GAAGd,QAAQ,GAAGY,QAAQ,CAACzY,KAAT,GAAiB,CAA1C,CAnB2C,CAoB3C;;AACA,YAAIX,KAAK,CAACoY,aAAD,CAAL,IAAwBA,aAAa,IAAIkB,KAA7C,EAAoD;AAClDlB,UAAAA,aAAa,GAAGkB,KAAK,GAAGF,QAAQ,CAACzY,KAAjC;;AACA,eAAKuN,IAAL,CAAUqL,QAAV,CAAmBL,IAAnB,EAAyBI,KAAzB,EAAgC,EAAhC;AACD;;AAED,aAAKpL,IAAL,CAAUsL,OAAV;;AACA,YAAI,CAACja,sBAAA,CAAuByY,SAAvB,CAAD,IAAsCA,SAAS,IAAI,CAAvD,EAA0D;AACxD;AACD,SA7B0C,CA8B3C;;;AACA,aAAK,IAAIxX,CAAC,GAAGW,CAAC,GAAG6W,SAAjB,EAA4BxX,CAAC,GAAGW,CAAC,GAAGJ,IAApC,EAA0CP,CAAC,IAAIwX,SAA/C,EAA0D;AACxD;AACA,cAAMyB,YAAY,GAAG,KAAKhB,SAAL,CAAe,KAAKC,WAAL,CAAiBlY,CAAjB,CAAf,CAArB;;AACA,eAAK0N,IAAL,CAAUyK,SAAV;;AACA,eAAKzK,IAAL,CAAU2K,SAAV,GAAsB,KAAKa,WAA3B;AACA,eAAKxL,IAAL,CAAU4K,WAAV,GAAwB,KAAK3P,QAAL,CAAc3C,SAAtC;AACAjH,UAAAA,sBAAA,CAAuB,KAAK2O,IAA5B,EAAkCuL,YAAlC,EAAgDlB,eAAhD,EAAiEkB,YAAjE,EAA+Epa,YAA/E;;AACA,eAAK6O,IAAL,CAAU8K,MAAV;AACD;AACF;;AAED,WAAK9K,IAAL,CAAUsL,OAAV;AACD;AAED;AACF;AACA;;AAx2CA;AAAA;AAAA,WAy2CE,2BAA4C;AAAA;;AAC1C,UAAMG,QAAQ,GAAG;AACf9E,QAAAA,IAAI,EAAE,EADS;AAEftB,QAAAA,IAAI,EAAE;AACJ/S,UAAAA,CAAC,EAAE,CADC;AAEJC,UAAAA,CAAC,EAAE,CAFC;AAGJE,UAAAA,KAAK,EAAE,CAHH;AAIJC,UAAAA,MAAM,EAAE;AAJJ,SAFS;AAQfa,QAAAA,GAAG,EAAE,IARU;AASfC,QAAAA,GAAG,EAAE,IATU;AAUfiK,QAAAA,SAAS,EAAE;AAVI,OAAjB;;AAaA,UAAI,CAAC,KAAKmD,MAAV,EAAkB;AAChB,eAAO6K,QAAP;AACD;;AACD,UAAM9E,IAAI,GAAG,KAAK/F,MAAL,CAAY+F,IAAzB;;AACA,UAAI,CAACA,IAAD,IAAS,CAACjJ,KAAK,CAACC,OAAN,CAAcgJ,IAAd,CAAV,IAAiCA,IAAI,CAACjX,MAAL,IAAe,CAApD,EAAuD;AACrD,eAAO+b,QAAP;AACD;;AACD,UAAIC,iBAAiB,GAAG5b,+BAAA,CAAgC,KAAKmL,QAArC,CAAxB;AACA0L,MAAAA,IAAI,CAAC/W,OAAL,CAAa,UAACiO,GAAD,EAAM1L,KAAN,EAAgB;AAC3B,YAAI,CAAC0L,GAAD,IAAQA,GAAG,CAAC8N,MAAhB,EAAwB;AACtB;AACD,SAH0B,CAK3B;;;AACA,YAAMC,SAAS,GAAG9b,+BAAA,CAAgC+N,GAAhC,EAAqC,MAAI,CAAC5C,QAA1C,CAAlB;AACA,YAAMzD,YAAY,GAAG1H,qCAAA,CAAsC+N,GAAtC,EAA2C,MAAI,CAAC5C,QAAhD,CAArB;AACA,YAAM8Q,WAAW,GAAGL,iBAAiB,IAAI,MAAI,CAACxQ,gBAAL,GAAwB,MAAI,CAACA,gBAAL,CAAsBC,SAA9C,GAA0D,CAA9D,CAArC;AACAuQ,QAAAA,iBAAiB,IAAIE,SAAS,GAAGpU,YAAjC;;AACA,YAAIrF,KAAK,IAAI,CAAb,EAAgB;AACdsZ,UAAAA,QAAQ,CAACpG,IAAT,CAAc9S,CAAd,GAAkBwZ,WAAlB;AACD;;AAEDN,QAAAA,QAAQ,CAACpG,IAAT,CAAc3S,MAAd,GAAuBU,IAAI,CAACI,GAAL,CAASkY,iBAAiB,GAAGE,SAA7B,EAAwCH,QAAQ,CAACpG,IAAT,CAAc3S,MAAtD,CAAvB;AAEA,YAAMkU,OAAO,GAAG;AACdvB,UAAAA,IAAI,EAAE;AAAE/S,YAAAA,CAAC,EAAE,CAAL;AAAQC,YAAAA,CAAC,EAAEwZ,WAAX;AAAwBtZ,YAAAA,KAAK,EAAE,MAAI,CAACqI,OAAL,GAAe,MAAI,CAACoI,MAAL,EAAf,GAA+B,CAA9D;AAAiExQ,YAAAA,MAAM,EAAEkZ;AAAzE,WADQ;AAEdpU,UAAAA,YAAY,EAAEA,YAFA;AAGdmC,UAAAA,KAAK,EAAEkE,GAHO;AAIdtK,UAAAA,GAAG,EAAE,IAJS;AAKdC,UAAAA,GAAG,EAAE,IALS;AAMdwY,UAAAA,MAAM,EAAE,EANM;AAOdvO,UAAAA,SAAS,EAAE;AAPG,SAAhB;AASAgO,QAAAA,QAAQ,CAAC9E,IAAT,CAAcpX,IAAd,CAAmBqX,OAAnB;;AACA,YAAI,CAAC/I,GAAG,CAACJ,SAAL,IAAkB,CAACI,GAAG,CAACJ,SAAJ,CAAc7N,OAAjC,IAA4CiO,GAAG,CAACJ,SAAJ,CAAc/N,MAAd,IAAwB,CAAxE,EAA2E;AACzE;AACD,SA5B0B,CA8B3B;;;AACA,YAAImO,GAAG,IAAIA,GAAG,CAACJ,SAAf,EAA0B;AACxBI,UAAAA,GAAG,CAACJ,SAAJ,CAAc7N,OAAd,CAAsB,UAACiB,QAAD,EAAc;AAClC,gBAAIA,QAAQ,IAAI,CAACiB,KAAK,CAACjB,QAAQ,CAACgB,GAAV,CAAlB,IAAoC,CAAChB,QAAQ,CAAC8a,MAAlD,EAA0D;AACxD,kBAAIM,YAAqC,GAAG,IAA5C;;AACA,mBAAK,IAAIhZ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2T,OAAO,CAACoF,MAAR,CAAetc,MAAnC,EAA2CuD,CAAC,EAA5C,EAAgD;AAC9C,oBAAMiZ,aAAa,GAAGtF,OAAO,CAACoF,MAAR,CAAe/Y,CAAf,CAAtB;;AACA,oBAAIpC,QAAQ,CAACsb,KAAT,KAAmBD,aAAa,CAACC,KAArC,EAA4C;AAC1CF,kBAAAA,YAAY,GAAGC,aAAf;AACA;AACD;AACF;;AACD,kBAAI,CAACD,YAAL,EAAmB;AACjBA,gBAAAA,YAAY,GAAG;AACb1Y,kBAAAA,GAAG,EAAE,IADQ;AAEbC,kBAAAA,GAAG,EAAE,IAFQ;AAGb2Y,kBAAAA,KAAK,EAAEtb,QAAQ,CAACsb,KAHH;AAIb1O,kBAAAA,SAAS,EAAE;AAJE,iBAAf;AAOAmJ,gBAAAA,OAAO,CAACoF,MAAR,CAAezc,IAAf,CAAoB0c,YAApB;AACD;;AACD,kBAAMG,YAAY,GAAG,MAAI,CAACC,oBAAL,CAA0Bxb,QAA1B,EAAoC+V,OAApC,CAArB;;AACA,kBAAMzB,YAAY,GAAG;AACnBxL,gBAAAA,KAAK,EAAE9I,QADY;AAEnBgV,gBAAAA,SAAS,EAAEe,OAFQ;AAGnB0F,gBAAAA,WAAW,EAAEL,YAHM;AAInB5G,gBAAAA,IAAI,EAAE+G;AAJa,eAArB;AAOA,kBAAM7Y,GAAG,GAAG0Y,YAAY,CAAC1Y,GAAb,IAAoB,IAApB,GAA2B1C,QAAQ,CAACgB,GAApC,GAA0CuB,IAAI,CAACG,GAAL,CAAS1C,QAAQ,CAACgB,GAAlB,EAAuBoa,YAAY,CAAC1Y,GAApC,CAAtD;AACA,kBAAMC,GAAG,GAAGyY,YAAY,CAACzY,GAAb,IAAoB,IAApB,GAA2B3C,QAAQ,CAACgB,GAApC,GAA0CuB,IAAI,CAACI,GAAL,CAAS3C,QAAQ,CAACgB,GAAlB,EAAuBoa,YAAY,CAACzY,GAApC,CAAtD;;AACA,kBAAI,CAAC1B,KAAK,CAACyB,GAAD,CAAV,EAAiB;AACf0Y,gBAAAA,YAAY,CAAC1Y,GAAb,GAAmBA,GAAnB;AACD;;AACD,kBAAI,CAACzB,KAAK,CAAC0B,GAAD,CAAV,EAAiB;AACfyY,gBAAAA,YAAY,CAACzY,GAAb,GAAmBA,GAAnB;AACD;;AACDoT,cAAAA,OAAO,CAACnJ,SAAR,CAAkBlO,IAAlB,CAAuB4V,YAAvB;AACA8G,cAAAA,YAAY,CAACxO,SAAb,CAAuBlO,IAAvB,CAA4B4V,YAA5B;AACAsG,cAAAA,QAAQ,CAAChO,SAAT,CAAmBlO,IAAnB,CAAwB4V,YAAxB;AACD;AACF,WAxCD;AAyCD;;AAEDyB,QAAAA,OAAO,CAACoF,MAAR,CAAepc,OAAf,CAAuB,UAACuc,KAAD,EAAW;AAChC;AACA9a,UAAAA,uBAAA,CAAwBuV,OAAxB,EAAiCuF,KAAjC,EAAwC,IAAxC,EAFgC,CAGhC;;AACA,cAAMI,SAAS,GAAG,MAAI,CAACC,sBAAL,CAA4B3O,GAA5B,EAAiC+I,OAAO,CAACvB,IAAR,CAAa9S,CAA9C,EAAiD4Z,KAAK,CAAC5Y,GAAvD,EAA4D4Y,KAAK,CAAC3Y,GAAlE,CAAlB;;AACA2Y,UAAAA,KAAK,CAAC9G,IAAN,GAAakH,SAAb;AACD,SAND,EA3E2B,CAmF3B;;AACAlb,QAAAA,uBAAA,CAAwBoa,QAAxB,EAAkC7E,OAAlC,EAA2C,IAA3C;AACD,OArFD;;AAsFA,UAAIvV,sBAAA,CAAuBoa,QAAQ,CAACjY,GAAhC,CAAJ,EAA0C;AACxCiY,QAAAA,QAAQ,CAACpG,IAAT,CAAc5S,KAAd,GAAsB,KAAKwN,OAAL,CAAawL,QAAQ,CAACjY,GAAtB,CAAtB;AACD;;AACD,aAAOiY,QAAP;AACD;AAz9CH;AAAA;AAAA,WA29CE,uBAAoB;AAAA;;AAClB,UAAM9F,IAAI,GAAG,KAAKe,eAAL,EAAb;;AACA,UAAIf,IAAI,IAAIA,IAAI,CAACgB,IAAjB,EAAuB;AACrB,aAAK3G,IAAL,CAAUmK,IAAV;;AACAxE,QAAAA,IAAI,CAACgB,IAAL,CAAU/W,OAAV,CAAkB,UAAC6c,OAAD,EAAa;AAC7B,cAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AAED,gBAAI,CAACzM,IAAL,CAAU+K,SAAV,GAAsBjb,kCAAA,CAAmC2c,OAAO,CAAC9S,KAA3C,EAAkD,MAAI,CAACsB,QAAvD,CAAtB,CAL6B,CAM7B;AACA;;AACA,cAAMoJ,MAAM,GAAG,MAAI,CAACsI,UAAL,CAAgBF,OAAO,CAACpH,IAAxB,CAAf;;AACA,cAAIhB,MAAJ,EAAY;AACV,kBAAI,CAACrE,IAAL,CAAU4M,QAAV,CAAmBvI,MAAM,CAAC/R,CAA1B,EAA6B+R,MAAM,CAAC9R,CAApC,EAAuC8R,MAAM,CAAC5R,KAA9C,EAAqD4R,MAAM,CAAC3R,MAA5D;AACD;;AAED,cAAMma,iBAAiB,GAAG/c,iCAAA,CAAkC2c,OAAO,CAAC9S,KAA1C,EAAiD,MAAI,CAACsB,QAAtD,CAA1B;;AACA,cAAI,CAACwR,OAAO,CAACT,MAAb,EAAqB;AACnB;AACD;;AACDS,UAAAA,OAAO,CAACT,MAAR,CAAepc,OAAf,CAAuB,UAACuc,KAAD,EAAW;AAChC;AACA,gBAAMW,UAAU,GAAG,MAAI,CAACH,UAAL,CAAgBR,KAAK,CAAC9G,IAAtB,CAAnB;;AACA,gBAAIyH,UAAJ,EAAgB;AACd,oBAAI,CAAC9M,IAAL,CAAU+K,SAAV,GAAsB8B,iBAAtB;;AACA,oBAAI,CAAC7M,IAAL,CAAU4M,QAAV,CAAmBE,UAAU,CAACxa,CAA9B,EAAiCwa,UAAU,CAACva,CAA5C,EAA+Cua,UAAU,CAACra,KAA1D,EAAiEqa,UAAU,CAACpa,MAA5E;AACD;AACF,WAPD;AAQD,SAzBD;;AA2BA,aAAKsN,IAAL,CAAUsL,OAAV;AACD;AACF;AAED;AACF;AACA;AACA;;AAjgDA;AAAA;AAAA,WAkgDE,oBAAW/W,IAAX,EAAwD;AACtD,UAAI,CAACA,IAAL,EAAW;AACT,eAAO,IAAP;AACD,OAHqD,CAItD;;;AACA,UAAMwY,IAAI,GAAG,CAAb;AAAA,UACEC,IAAI,GAAG,KAAK9J,MAAL,EADT;AAAA,UAEE+J,IAAI,GAAGnd,+BAAA,CAAgC,KAAKmL,QAArC,CAFT;AAAA,UAGEiS,IAAI,GAAG,KAAKhK,MAAL,EAHT;;AAKA,UACE7R,2BAAA,CAA4BkD,IAA5B,EAAkC;AAChCjC,QAAAA,CAAC,EAAEya,IAD6B;AAEhCxa,QAAAA,CAAC,EAAE0a,IAF6B;AAGhCxa,QAAAA,KAAK,EAAEpB,yBAAA,CAA0B0b,IAA1B,EAAgCC,IAAhC,CAHyB;AAIhCta,QAAAA,MAAM,EAAErB,yBAAA,CAA0B4b,IAA1B,EAAgCC,IAAhC;AAJwB,OAAlC,CADF,EAOE;AACA,YAAM3a,CAAC,GAAGa,IAAI,CAACI,GAAL,CAASe,IAAI,CAAChC,CAAd,EAAiB0a,IAAjB,CAAV;AACA,YAAM3a,CAAC,GAAGc,IAAI,CAACI,GAAL,CAASe,IAAI,CAACjC,CAAd,EAAiBya,IAAjB,CAAV;AACA,YAAMK,OAAO,GAAG7Y,IAAI,CAACjC,CAAL,GAASA,CAAzB;AACA,YAAM+a,OAAO,GAAG9Y,IAAI,CAAChC,CAAL,GAASA,CAAzB;AAEA,eAAO;AACLG,UAAAA,MAAM,EAAE6B,IAAI,CAAC7B,MAAL,GAAc2a,OADjB;AAEL5a,UAAAA,KAAK,EAAE8B,IAAI,CAAC9B,KAAL,GAAa2a,OAFf;AAGL9a,UAAAA,CAAC,EAAEA,CAHE;AAILC,UAAAA,CAAC,EAAEA,CAJE;AAKL+a,UAAAA,QAAQ,EAAEla,IAAI,CAACwB,GAAL,CAASyY,OAAT,IAAoB,CALzB;AAMLE,UAAAA,QAAQ,EAAEna,IAAI,CAACwB,GAAL,CAASwY,OAAT,IAAoB;AANzB,SAAP;AAQD;;AACD,aAAO,IAAP;AACD;AAED;AACF;AACA;AACA;AACA;;AAziDA;AAAA;AAAA,WA0iDE,gCAAuBvP,GAAvB,EAAyC2P,IAAzC,EAAuDC,QAAvD,EAAyEC,QAAzE,EAAoG;AAClG,UAAIhW,WAA4B,GAAG5H,iCAAA,CAAkC+N,GAAlC,EAAuC,KAAK5C,QAA5C,CAAnC;AAEA,UAAMvI,MAAM,GAAG5C,+BAAA,CAAgC+N,GAAhC,EAAqC,KAAK5C,QAA1C,CAAf;;AACA,UAAK,CAACvD,WAAD,IAAgBA,WAAW,KAAK,CAAjC,IAAuC5F,KAAK,CAAC4F,WAAD,CAA5C,IAAuEA,WAAW,IAAI,MAA1F,EAAkG;AAChGA,QAAAA,WAAW,GAAGtE,IAAI,CAACqC,KAAL,CAAW/C,MAAM,GAAG,GAApB,CAAd;AACD;;AAED,UAAIgF,WAAW,GAAGhF,MAAlB,EAA0B;AACxBgF,QAAAA,WAAW,GAAGhF,MAAd;AACD;;AAED,UAAMkb,MAAM,GAAGlb,MAAM,GAAIgF,WAAzB,CAZkG,CAalG;;AACA,UAAMmW,IAAI,GAAG,KAAKrD,WAAL,CAAiBiD,QAAjB,CAAb,CAdkG,CAczD;;;AACzC,UAAMK,IAAI,GAAG,KAAKtD,WAAL,CAAiBkD,QAAjB,CAAb,CAfkG,CAezD;;;AAEzC,aAAO;AACLpb,QAAAA,CAAC,EAAEub,IADE;AAELtb,QAAAA,CAAC,EAAEib,IAAI,GAAGpa,IAAI,CAACqC,KAAL,CAAWmY,MAAM,GAAG,CAApB,CAFL;AAGLlb,QAAAA,MAAM,EAAEgF,WAHH;AAILjF,QAAAA,KAAK,EAAEpB,yBAAA,CAA0Bwc,IAA1B,EAAgCC,IAAhC;AAJF,OAAP;AAMD;AAjkDH;AAAA;AAAA,WAmkDE,8BAAqBjd,QAArB,EAAiDkd,aAAjD,EAAuG;AACrG,UAAI,CAACld,QAAL,EAAe;AACb4D,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACA,eAAO,IAAP;AACD;;AAED,UAAM7C,GAAG,GAAGhB,QAAQ,CAACgB,GAArB;;AACA,UAAIC,KAAK,CAACD,GAAD,CAAT,EAAgB;AACd,eAAO,IAAP;AACD;;AAED,UAAMmc,OAAO,GAAGD,aAAa,CAAC1I,IAA9B,CAXqG,CAYrG;;AACA,UAAM9S,CAAC,GAAGyb,OAAO,CAACzb,CAAR,GAAYyb,OAAO,CAACtb,MAAR,GAAiB,CAAvC;AAEA,UAAIA,MAAuB,GAAG5C,mCAAA,CAAoCe,QAApC,EAA8Ckd,aAAa,CAACpU,KAA5D,EAAmE,KAAKsB,QAAxE,EAAkF,QAAlF,EAA4F,MAA5F,CAA9B;AACA,UAAIxI,KAAsB,GAAG3C,mCAAA,CAAoCe,QAApC,EAA8Ckd,aAAa,CAACpU,KAA5D,EAAmE,KAAKsB,QAAxE,EAAkF,OAAlF,EAA2F,MAA3F,CAA7B;;AAEA,UAAIvI,MAAM,IAAI,MAAd,EAAsB;AACpBA,QAAAA,MAAM,GAAGsb,OAAO,CAACtb,MAAR,GAAiB,CAA1B;AACD;;AACD,UAAID,KAAK,IAAI,MAAb,EAAqB;AACnBA,QAAAA,KAAK,GAAGC,MAAR;AACD;;AACD,UAAIA,MAAM,GAAG,CAAb,EAAgB;AACd,YAAI,CAACZ,KAAK,CAACD,GAAD,CAAV,EAAiB;AACf,iBAAO;AACLS,YAAAA,CAAC,EAAEc,IAAI,CAACqC,KAAL,CAAW,KAAK+U,WAAL,CAAiB3Y,GAAjB,CAAX,CADE;AACiC;AACtCU,YAAAA,CAAC,EAAEa,IAAI,CAACqC,KAAL,CAAWlD,CAAX,CAFE;AAGLG,YAAAA,MAAM,EAAEA,MAHH;AAILD,YAAAA,KAAK,EAAEA;AAJF,WAAP;AAMD;AACF;;AAED,aAAO,IAAP;AACD;AAvmDH;AAAA;AAAA,WAymDE,4BAAyB;AAAA;;AACvB,WAAKyS,gBAAL,CAAsB,UAACC,YAAD,EAA2B;AAC/C,YAAMtH,GAAG,GAAGsH,YAAY,CAACU,SAAb,CAAuBlM,KAAnC;AACA,YAAMyC,GAAG,GAAG+I,YAAY,CAACE,IAAzB;AACA,YAAMxU,QAAQ,GAAGsU,YAAY,CAACxL,KAA9B;;AACA,YAAIyC,GAAJ,EAAS;AACP,cAAI9J,CAAC,GAAG,MAAI,CAACiY,SAAL,CAAenO,GAAG,CAAC9J,CAAnB,CAAR;;AACA,cAAIC,CAAC,GAAG6J,GAAG,CAAC7J,CAAZ;;AACA,cAAM8R,MAAM,GAAG,MAAI,CAACsI,UAAL,CAAgB;AAC7Bra,YAAAA,CAAC,EAAEA,CAAC,GAAG8J,GAAG,CAAC3J,KAAJ,GAAY,CADU;AAE7BF,YAAAA,CAAC,EAAEA,CAAC,GAAG6J,GAAG,CAAC1J,MAAJ,GAAa,CAFS;AAG7BD,YAAAA,KAAK,EAAE2J,GAAG,CAAC3J,KAHkB;AAI7BC,YAAAA,MAAM,EAAE0J,GAAG,CAAC1J;AAJiB,WAAhB,CAAf;;AAMA,cAAI,CAAC2R,MAAL,EAAa;AACX;AACD;;AAED,gBAAI,CAACrE,IAAL,CAAUmK,IAAV,GAbO,CAeP;AACA;;;AACA,cAAI9F,MAAM,IAAIA,MAAM,CAACiJ,QAArB,EAA+B;AAC7B,kBAAI,CAACtN,IAAL,CAAUyK,SAAV;;AACA,kBAAI,CAACzK,IAAL,CAAUzL,IAAV,CAAe,CAAf,EAAkBzE,+BAAA,CAAgC,MAAI,CAACmL,QAArC,CAAlB,EAAkE,MAAI,CAACiI,MAAL,EAAlE,EAAiF,MAAI,CAACA,MAAL,EAAjF;;AACA,kBAAI,CAAClD,IAAL,CAAUiO,IAAV;AACD;;AAED,cAAMnd,KAAK,GAAGhB,gCAAA,CAAiCe,QAAjC,EAA2CgN,GAA3C,EAAgD,MAAI,CAAC5C,QAArD,CAAd;;AACA,cAAInK,KAAK,KAAKjB,0BAAd,EAA0C;AACxC;AACD;;AAED,cAAMue,aAAa,GAAGvd,QAAQ,CAACuM,QAAT,GAAoBtN,4CAAA,CAA6Ce,QAA7C,EAAuDgN,GAAvD,EAA4D,MAAI,CAAC5C,QAAjE,CAApB,GAAiGnL,oCAAA,CAAqCe,QAArC,EAA+CgN,GAA/C,EAAoD,MAAI,CAAC5C,QAAzD,CAAvH;AACA,cAAMsT,MAAM,GAAGze,0CAAA,CAA2Ce,QAA3C,EAAqDgN,GAArD,EAA0D,MAAI,CAAC5C,QAA/D,CAAf;AACA,cAAIjE,WAAW,GAAG,EAAlB;;AACA,cAAIuX,MAAM,GAAG,CAAb,EAAgB;AACd,gBAAI1d,QAAQ,CAACuM,QAAb,EAAuB;AACrBpG,cAAAA,WAAW,GAAGlH,8CAAA,CAA+Ce,QAA/C,EAAyDgN,GAAzD,EAA8D,MAAI,CAAC5C,QAAnE,CAAd;AACD,aAFD,MAEO;AACLjE,cAAAA,WAAW,GAAGlH,sCAAA,CAAuCe,QAAvC,EAAiDgN,GAAjD,EAAsD,MAAI,CAAC5C,QAA3D,CAAd;AACD;AACF;;AAED,cAAInK,KAAK,IAAIjB,2BAAb,EAA0C;AACxC,kBAAI,CAACmQ,IAAL,CAAUyK,SAAV;;AACA,kBAAI,CAACzK,IAAL,CAAU2O,SAAV,CAAoBrc,CAApB,EAAuBC,CAAvB;;AACA,kBAAI,CAACyN,IAAL,CAAU4O,MAAV,CAAkB,KAAKxb,IAAI,CAACyb,EAAX,GAAiB,GAAlC;;AACA,gBAAIN,MAAM,GAAG,CAAT,IAAcvX,WAAlB,EAA+B;AAC7B,oBAAI,CAACgJ,IAAL,CAAU+K,SAAV,GAAsB/T,WAAtB;;AACA,oBAAI,CAACgJ,IAAL,CAAUzL,IAAV,CAAe,CAAC6H,GAAG,CAAC3J,KAAL,GAAa,CAA5B,EAA+B,CAAC2J,GAAG,CAAC1J,MAAL,GAAc,CAA7C,EAAgD0J,GAAG,CAAC3J,KAApD,EAA2D2J,GAAG,CAAC1J,MAA/D;;AACA,oBAAI,CAACsN,IAAL,CAAU8O,IAAV;AACD;;AAED,kBAAI,CAAC9O,IAAL,CAAU+K,SAAV,GAAsBqD,aAAtB,CAVwC,CAWxC;;AACA,kBAAI,CAACpO,IAAL,CAAU2O,SAAV,CAAoBJ,MAApB,EAA4BA,MAA5B;;AACA,kBAAI,CAACvO,IAAL,CAAUzL,IAAV,CAAe,CAAC6H,GAAG,CAAC3J,KAAL,GAAa,CAA5B,EAA+B,CAAC2J,GAAG,CAAC1J,MAAL,GAAc,CAA7C,EAAgD0J,GAAG,CAAC3J,KAAJ,GAAY8b,MAAM,GAAG,CAArE,EAAwEnS,GAAG,CAAC1J,MAAJ,GAAa6b,MAAM,GAAG,CAA9F;;AACA,kBAAI,CAACvO,IAAL,CAAU8O,IAAV;AACD,WAfD,MAeO,IAAIhe,KAAK,IAAIjB,4BAAb,EAA2C;AAChD,kBAAI,CAACmQ,IAAL,CAAUyK,SAAV;;AACA,gBAAI8D,MAAM,GAAG,CAAT,IAAcvX,WAAlB,EAA+B;AAC7B,oBAAI,CAACgJ,IAAL,CAAU+K,SAAV,GAAsB/T,WAAtB;;AACA,oBAAI,CAACgJ,IAAL,CAAUgP,GAAV,CAAc1c,CAAd,EAAiBC,CAAjB,EAAoB6J,GAAG,CAAC1J,MAAxB,EAAgC,CAAhC,EAAmC,IAAIU,IAAI,CAACyb,EAA5C;AACD;;AACD,kBAAI,CAAC7O,IAAL,CAAU+K,SAAV,GAAsBqD,aAAtB;;AACA,kBAAI,CAACpO,IAAL,CAAUgP,GAAV,CAAc1c,CAAd,EAAiBC,CAAjB,EAAoB6J,GAAG,CAAC1J,MAAJ,GAAa6b,MAAjC,EAAyC,CAAzC,EAA4C,IAAInb,IAAI,CAACyb,EAArD;;AACA,kBAAI,CAAC7O,IAAL,CAAU8O,IAAV;AACD,WATM,MASA,IAAIhe,KAAK,IAAIjB,0BAAb,EAAyC;AAC9C,kBAAI,CAACmQ,IAAL,CAAUyK,SAAV;;AACAlY,YAAAA,CAAC,GAAGA,CAAC,GAAG6J,GAAG,CAAC1J,MAAJ,GAAa,CAArB;AACAJ,YAAAA,CAAC,GAAGA,CAAC,GAAG8J,GAAG,CAAC3J,KAAJ,GAAY,CAApB;;AACA,gBAAI8b,MAAM,GAAG,CAAT,IAAcvX,WAAlB,EAA+B;AAC7B,oBAAI,CAACgJ,IAAL,CAAU+K,SAAV,GAAsB/T,WAAtB;;AACA,oBAAI,CAACgJ,IAAL,CAAUzL,IAAV,CAAejC,CAAf,EAAkBC,CAAlB,EAAqB6J,GAAG,CAAC3J,KAAzB,EAAgC2J,GAAG,CAAC1J,MAApC;;AACA,oBAAI,CAACsN,IAAL,CAAU8O,IAAV;AACD;;AAED,kBAAI,CAAC9O,IAAL,CAAU+K,SAAV,GAAsBqD,aAAtB;;AACA,kBAAI,CAACpO,IAAL,CAAUzL,IAAV,CAAejC,CAAC,GAAGic,MAAnB,EAA2Bhc,CAAC,GAAGgc,MAA/B,EAAuCnS,GAAG,CAAC3J,KAAJ,GAAY8b,MAAnD,EAA2DnS,GAAG,CAAC1J,MAAJ,GAAa6b,MAAxE;;AACA,kBAAI,CAACvO,IAAL,CAAU8O,IAAV;AACD;;AAED,gBAAI,CAAC9O,IAAL,CAAUsL,OAAV;AACD;AACF,OApFD;AAqFD;AA/rDH;AAAA;AAAA,WAisDE,gCAA6B;AAC3B,UAAI,KAAK1O,KAAT,EAAgB;AACd;AACD;;AAED,WAAKoD,IAAL,CAAUmK,IAAV;;AACA,UAAM8E,SAAS,GAAG,CAAlB;;AACA,UAAI,KAAKhR,cAAL,IAAuB,KAAKE,qBAAhC,EAAuD;AACrD,aAAK6B,IAAL,CAAU0K,WAAV,CAAsB,CAAC,CAAD,CAAtB;;AACA,aAAK1K,IAAL,CAAU2K,SAAV,GAAsB,KAAKa,WAA3B;AACA,aAAKxL,IAAL,CAAU4K,WAAV,GAAwB,KAAK3P,QAAL,CAAc1C,cAAtC;;AACA,aAAKyH,IAAL,CAAUkP,UAAV,CACE,KAAK3E,SAAL,CAAe,KAAKtM,cAAL,CAAoB3L,CAAnC,EAAsC2c,SAAtC,CADF,EAEE,KAAK1E,SAAL,CAAe,KAAKtM,cAAL,CAAoB1L,CAAnC,EAAsC0c,SAAtC,CAFF,EAGE7b,IAAI,CAACqC,KAAL,CAAW,KAAKwI,cAAL,CAAoBxL,KAA/B,CAHF,EAIEW,IAAI,CAACqC,KAAL,CAAW,KAAKwI,cAAL,CAAoBvL,MAA/B,CAJF;AAMD;;AACD,WAAKsN,IAAL,CAAUsL,OAAV;AACD;AAptDH;AAAA;AAAA,WAstDE,6BAA0B;AACxB,UAAI,KAAKrQ,QAAL,CAAchE,SAAlB,EAA6B;AAC3B,aAAK+I,IAAL,CAAUmK,IAAV;;AACA,aAAKnK,IAAL,CAAUyK,SAAV;;AACA,aAAKzK,IAAL,CAAUzL,IAAV,CAAe,CAAf,EAAkB,CAAlB,EAAqB,KAAK2O,MAAL,EAArB,EAAoC,KAAKiF,OAAL,EAApC;;AACA,aAAKnI,IAAL,CAAU+K,SAAV,GAAsB,KAAK9P,QAAL,CAAchE,SAApC;;AACA,aAAK+I,IAAL,CAAU8O,IAAV;;AACA,aAAK9O,IAAL,CAAUsL,OAAV;AACD,OAPD,MAOO;AACL;AACA,aAAKtL,IAAL,CAAUmP,SAAV,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,KAAKrU,OAAL,CAAarI,KAAvC,EAA8C,KAAKqI,OAAL,CAAapI,MAA3D;AACD;AACF;AAluDH;AAAA;AAAA,WAouDE,2BAAwB;AACtB,UAAI,CAAC,KAAKsN,IAAN,IAAc,CAAC,KAAK/E,QAApB,IAAgC,CAAC,KAAKA,QAAL,CAAcnD,aAAnD,EAAkE;AAChE;AACD;;AACD,UAAMxH,KAAK,GAAG,KAAK2K,QAAL,CAAcnD,aAA5B;;AACA,WAAKkI,IAAL,CAAUmK,IAAV;;AACA,UAAM8E,SAAS,GAAG3e,KAAK,CAACmC,KAAN,IAAe,CAAjC;AACA,WAAKuN,IAAL,CAAU2K,SAAV,GAAsBsE,SAAS,GAAG,KAAKzD,WAAvC;;AACA,UAAM4D,WAAW,GAAG,KAAK7E,SAAL,CAAe,KAAKC,WAAL,CAAiB,KAAKtK,IAAtB,CAAf,EAA4C+O,SAA5C,CAApB;;AACA,WAAKjP,IAAL,CAAU4K,WAAV,GAAwBta,KAAK,CAAC0G,WAA9B;AACA,WAAKgJ,IAAL,CAAU+K,SAAV,GAAsBza,KAAK,CAAC2G,SAA5B;AACA,UAAM1E,CAAC,GAAGjC,KAAK,CAACqG,SAAhB;;AACA,WAAKqJ,IAAL,CAAUyK,SAAV;;AACApZ,MAAAA,sBAAA,CAAuB,KAAK2O,IAA5B,EAAkCoP,WAAlC,EAA+C7c,CAA/C,EAAkD6c,WAAlD,EAA+D,KAAKjH,OAAL,EAA/D;;AACA,WAAKnI,IAAL,CAAU8K,MAAV;;AAEA,UAAIxa,KAAK,CAACuG,SAAN,IAAmBvG,KAAK,CAACsG,QAA7B,EAAuC;AACrC,YAAMyY,QAAQ,GAAG/e,KAAK,CAACsG,QAAvB;AACA,YAAMC,SAAS,GAAGvG,KAAK,CAACuG,SAAxB;;AACA,YAAIvG,KAAK,CAACwG,OAAN,KAAkBP,yBAAtB,EAAiD;AAC/C,eAAKyJ,IAAL,CAAUyK,SAAV;;AACA,eAAKzK,IAAL,CAAUrO,MAAV,CAAiByd,WAAW,GAAGC,QAAQ,GAAG,CAA1C,EAA6C9c,CAA7C;;AACA,eAAKyN,IAAL,CAAUpO,MAAV,CAAiBwd,WAAW,GAAGC,QAAQ,GAAG,CAA1C,EAA6C9c,CAA7C;;AACA,eAAKyN,IAAL,CAAUpO,MAAV,CAAiBwd,WAAjB,EAA8BvY,SAA9B;;AACA,eAAKmJ,IAAL,CAAUuP,SAAV;;AACA,eAAKvP,IAAL,CAAU8K,MAAV;AACD,SAPD,MAOO,IAAIxa,KAAK,CAACwG,OAAN,KAAkBP,qBAAtB,EAA6C;AAClD,eAAKyJ,IAAL,CAAU4M,QAAV,CAAmBwC,WAAW,GAAGC,QAAQ,GAAG,CAA5C,EAA+C9c,CAA/C,EAAkD8c,QAAlD,EAA4DxY,SAA5D;;AACA,eAAKmJ,IAAL,CAAU8O,IAAV;AACD;AACF;;AAED,WAAK9O,IAAL,CAAUsL,OAAV;AACD;AArwDH;AAAA;AAAA,WAuwDE,mCAAgC;AAC9B,UAAI,CAAC,KAAKtL,IAAN,IAAc,CAAC,KAAK/E,QAAxB,EAAkC;AAChC;AACD;;AACD,UAAInL,+BAAA,CAAgC,KAAKmL,QAArC,CAAJ,EAAoD;AAClD,aAAK+E,IAAL,CAAUmK,IAAV,GADkD,CAElD;;;AACA,aAAKnK,IAAL,CAAU2K,SAAV,GAAsB,KAAKa,WAA3B;;AACA,YAAI,KAAKvQ,QAAL,CAAc7C,eAAlB,EAAmC;AACjC;AACA,eAAK4H,IAAL,CAAU2K,SAAV,GAAsB,KAAKa,WAA3B,CAFiC,CAGjC;;AACA,eAAKxL,IAAL,CAAU+K,SAAV,GAAsB,KAAK9P,QAAL,CAAc7C,eAApC;;AACA,eAAK4H,IAAL,CAAU4M,QAAV,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,KAAK1J,MAAL,EAAzB,EAAwCpT,+BAAA,CAAgC,KAAKmL,QAArC,CAAxC;AACD,SAND,MAMO;AACL,eAAK+E,IAAL,CAAUmP,SAAV,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,KAAKjM,MAAL,EAA1B,EAAyCpT,+BAAA,CAAgC,KAAKmL,QAArC,CAAzC;AACD;;AACD,aAAK+E,IAAL,CAAUsL,OAAV;AACD;AACF;AA1xDH;AAAA;AAAA,WA4xDE,kBAAe;AACb,UAAIxW,MAAM,CAAC0a,qBAAX,EAAkC;AAChC1a,QAAAA,MAAM,CAAC0a,qBAAP,CAA6B,KAAKC,eAAlC;AACD,OAFD,MAEO;AACL,aAAKA,eAAL;AACD;AACF;AAED;AACF;AACA;;AAtyDA;AAAA;AAAA,WAuyDE,sBAA0B;AACxB,UAAI,KAAKvU,gBAAL,CAAsBW,UAAtB,IAAoC,KAAKX,gBAAL,CAAsBiF,WAA9D,EAA2E;AACzE,aAAKjF,gBAAL,CAAsBW,UAAtB,GAAmC,KAAKX,gBAAL,CAAsBiF,WAAzD;AACD;AACF;AAED;AACF;AACA;;AA/yDA;AAAA;AAAA;AAs0DE;AACF;AACA;AACA;AACE,uBAAiBuP,IAAjB,EAA4C;AAC1C,UAAM/V,KAAK,GAAG,KAAK+M,eAAL,EAAd;;AACA,UAAI/M,KAAK,IAAIA,KAAK,CAACgN,IAAnB,EAAyB;AACvB,aAAK,IAAI1T,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0G,KAAK,CAACgN,IAAN,CAAWjX,MAA/B,EAAuCuD,CAAC,EAAxC,EAA4C;AAC1C,cAAM4K,GAAG,GAAGlE,KAAK,CAACgN,IAAN,CAAW1T,CAAX,EAAcoS,IAA1B;;AACA,cAAIxH,GAAG,IAAIA,GAAG,CAACtL,CAAJ,IAASmd,IAAhB,IAAwBA,IAAI,IAAI7R,GAAG,CAACtL,CAAJ,GAAQsL,GAAG,CAACnL,MAAhD,EAAwD;AACtD,mBAAOmL,GAAP;AACD;AACF;AACF;;AAED,aAAO,IAAP;AACD;AAED;AACF;AACA;;AA11DA;AAAA;AAAA,WA21DE,mBAAUzB,GAAV,EAA8C;AAAA,UAAvB6S,SAAuB,uEAAX,CAAW;AAC5C7S,MAAAA,GAAG,GAAGhJ,IAAI,CAACqQ,KAAL,CAAWrH,GAAX,CAAN;;AACA,UAAI6S,SAAS,GAAG,CAAZ,IAAiB,CAArB,EAAwB;AACtB,eAAO7S,GAAP;AACD;;AAED,aAAOA,GAAG,GAAG,KAAKoP,WAAL,GAAmB,CAAhC;AACD;AAED;AACF;AACA;;AAt2DA;AAAA;AAAA,WAu2DE,mBAAyB;AACvB,aAAO,KAAKtL,IAAZ;AACD;AAED;AACF;AACA;AACA;AACA;;AA/2DA;AAAA;AAAA,WAg3DE,0BAAiBrO,GAAjB,EAA2G;AAAA,UAA7EqS,MAA6E,uEAA/CpO,oCAA+C;AACzGjE,MAAAA,GAAG,GAAGuB,IAAI,CAACqQ,KAAL,CAAW5R,GAAX,CAAN;;AACA,UAAIA,GAAG,GAAG,KAAKoJ,QAAL,CAAc1H,GAAxB,EAA6B;AAC3B1B,QAAAA,GAAG,GAAG,KAAKoJ,QAAL,CAAc1H,GAApB;AACD;;AAED,UAAI,KAAK2M,IAAL,IAAarO,GAAjB,EAAsB;AACpB,YAAM8M,OAAO,GAAG,KAAKuB,IAArB;AACA,YAAMyP,aAAa,GAAG,IAAI5Z,wBAAJ,EAAtB;AACA4Z,QAAAA,aAAa,CAAC9d,GAAd,GAAoBA,GAApB;AACA8d,QAAAA,aAAa,CAAChR,OAAd,GAAwBA,OAAxB;AACAgR,QAAAA,aAAa,CAACzL,MAAd,GAAuBA,MAAvB;AACA,aAAKhE,IAAL,GAAYrO,GAAZ;AACA,aAAK+d,IAAL,CAAUnZ,0BAAV,EAAsCkZ,aAAtC;;AACA,YAAIA,aAAa,CAACjT,WAAd,EAAJ,EAAiC;AAC/B,eAAKwD,IAAL,GAAYvB,OAAZ;AACA,iBAAO,KAAP;AACD;;AACD,eAAO,IAAP;AACD;;AAED,aAAO,KAAP;AACD;AAt4DH;AAAA;AAAA,WAw4DE,iBAAe9M,GAAf,EAAqC;AACnC;AACA,UAAI,KAAK+K,KAAL,IAAc,KAAKA,KAAL,CAAWG,IAAX,KAAoB1G,4BAAtC,EAAoE;AAClE,eAAO,KAAP;AACD;;AAED,UAAM+N,SAAS,GAAG,KAAK7F,gBAAL,CAAsB1M,GAAtB,EAA2BiE,iCAA3B,CAAlB;;AACA,UAAIsO,SAAJ,EAAe;AACb,aAAKnK,OAAL;AACA,aAAKC,MAAL;AACD;;AAED,aAAOkK,SAAP;AACD;AAr5DH;AAAA;AAAA,WAu5DE,sBAAqC;AACnC,aAAO,KAAKnJ,QAAZ;AACD;AAz5DH;AAAA;AAAA,WA25DE,uBAAqBzK,KAArB,EAA0C;AACxC,UAAI,KAAK0K,gBAAT,EAA2B;AACzB,aAAKA,gBAAL,CAAsBW,UAAtB,GAAmCrL,KAAnC;AACD;AACF;AA/5DH;AAAA;AAAA,WAi6DE,sBAAoBA,KAApB,EAAyC;AACvC,UAAI,KAAK0K,gBAAT,EAA2B;AACzB,aAAKA,gBAAL,CAAsBC,SAAtB,GAAkC3K,KAAlC;AACD;AACF;AAr6DH;AAAA;AAAA,WAu6DE,yBAA+B;AAC7B,aAAO,KAAK0K,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBW,UAA9C,GAA2D,CAAlE;AACD;AAz6DH;AAAA;AAAA,WA26DE,wBAA8B;AAC5B,aAAO,KAAKX,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,SAA9C,GAA0D,CAAjE;AACD;AAED;AACF;AACA;AACA;;AAl7DA;AAAA;AAAA,WAm7DE,oBAAkByJ,KAAlB,EAA2D;AACzD,WAAK3J,QAAL,GAAgB,KAAK+F,WAAL,CAAiB4D,KAAjB,CAAhB;AACA,WAAK3K,OAAL;AACA,WAAKC,MAAL,GAHyD,CAIzD;;AACA,aAAO,KAAKe,QAAZ;AACD;AAz7DH;AAAA;AAAA,WA27DE,qBAAY2J,KAAZ,EAAqD;AACnD,WAAK3J,QAAL,GAAgB,KAAK8U,aAAL,CAAmBnL,KAAnB,CAAhB,CADmD,CAEnD;;AACA,WAAK3J,QAAL,CAAc/C,QAAd,GAAyB7G,0BAAA,CAA2B,KAAK4J,QAAL,CAAc/C,QAAzC,EAAmD,CAAnD,EAAsD,KAAK+C,QAAL,CAAcjD,OAApE,CAAzB;AACA,WAAKqL,YAAL,GAAoB,KAAKC,QAAL,CAAc,KAAKrI,QAAL,CAAcxC,IAA5B,EAAkC,KAAKwC,QAAL,CAActC,OAAhD,EAAyD,KAAKsC,QAAL,CAAcrC,OAAvE,CAApB;AACA,WAAKqC,QAAL,CAAc1H,GAAd,GAAoBlC,sBAAA,CAAuB,KAAK4J,QAAL,CAAc1H,GAArC,IAA4C,KAAK0H,QAAL,CAAc1H,GAA1D,GAAgE,CAApF;AACA,WAAK0H,QAAL,CAAczH,GAAd,GAAoBnC,sBAAA,CAAuB,KAAK4J,QAAL,CAAczH,GAArC,IAA4C,KAAKyH,QAAL,CAAczH,GAA1D,GAAgEzB,MAAM,CAACkH,SAA3F;;AACA,UAAI,KAAKiC,gBAAT,EAA2B;AACzB,YAAM8U,SAAS,GAAG,KAAK9U,gBAAL,CAAsB8U,SAAxC;;AACA,YAAI,KAAK/U,QAAL,CAAcnC,oBAAd,IAAsCkX,SAAS,CAACC,QAAV,CAAmB,KAAKhV,QAAL,CAAcnC,oBAAjC,CAA1C,EAAkG;AAChGkX,UAAAA,SAAS,CAACE,GAAV,CAAc,KAAKjV,QAAL,CAAcnC,oBAA5B;AACD;;AACD,YAAI,KAAKmC,QAAL,CAAchE,SAAlB,EAA6B;AAC3B,eAAKiE,gBAAL,CAAsB5K,KAAtB,CAA4B6f,UAA5B,GAAyC,KAAKlV,QAAL,CAAchE,SAAvD;AACD;AACF;;AACD,aAAO,KAAKgE,QAAZ;AACD;AA58DH;AAAA;AAAA,WA88DE,oBAAiC;AAC/B,aAAO,KAAK2F,MAAZ;AACD;AAED;AACF;AACA;AACA;;AAr9DA;AAAA;AAAA,WAs9DE,kBAAgB+E,IAAhB,EAA2C;AACzC,WAAK/E,MAAL,GAAc+E,IAAd;AACA,WAAK1L,OAAL;AACA,WAAKC,MAAL;AACD,KA19DH,CA49DE;;AA59DF;AAAA;AAAA,WA69DE,sBAAa6M,MAAb,EAAwCpE,CAAxC,EAA6F;AAC3F,UAAI1G,MAAM,GAAG,CAAb;AACA,UAAImU,OAAO,GAAG,CAAd;AACA,UAAIC,OAAO,GAAG,CAAd;;AACA,UAAI1N,CAAC,CAAC3E,cAAF,IAAoB2E,CAAC,CAAC3E,cAAF,CAAiBtO,MAAjB,GAA0B,CAAlD,EAAqD;AACnD;AACA,YAAM4gB,KAAK,GAAG3N,CAAC,CAAC3E,cAAF,CAAiB,CAAjB,CAAd;AACAoS,QAAAA,OAAO,GAAGE,KAAK,CAACF,OAAhB;AACAC,QAAAA,OAAO,GAAGC,KAAK,CAACD,OAAhB;AACApU,QAAAA,MAAM,GAAG7I,IAAI,CAACI,GAAL,CAASyI,MAAT,EAAiBqU,KAAK,CAACC,OAAvB,EAAgCD,KAAK,CAACE,OAAtC,CAAT;AACD,OAND,MAMO;AACLJ,QAAAA,OAAO,GAAGzN,CAAC,CAACyN,OAAZ;AACAC,QAAAA,OAAO,GAAG1N,CAAC,CAAC0N,OAAZ;AACD;;AAED,UAAM9b,IAAI,GAAGwS,MAAM,CAAC0J,qBAAP,EAAb;AAAA,UAA6C;AAC3CC,MAAAA,MAAM,GAAG3J,MAAM,CAACtU,KAAP,GAAe,KAAK+Y,WAApB,GAAkCjX,IAAI,CAAC9B,KADlD;AAAA,UACyD;AACvDke,MAAAA,MAAM,GAAG5J,MAAM,CAACrU,MAAP,GAAgB,KAAK8Y,WAArB,GAAmCjX,IAAI,CAAC7B,MAFnD,CAf2F,CAiBhC;;AAE3D,UAAMJ,CAAC,GAAG,CAAC8d,OAAO,GAAG7b,IAAI,CAACqc,IAAhB,IAAwBF,MAAlC;AACA,UAAMne,CAAC,GAAG,CAAC8d,OAAO,GAAG9b,IAAI,CAACsc,GAAhB,IAAuBF,MAAjC,CApB2F,CAqB3F;;AACA,aAAO;AACLre,QAAAA,CAAC,EAAEA,CADE;AAELC,QAAAA,CAAC,EAAEA,CAFE;AAGL0J,QAAAA,MAAM,EAANA,MAHK;AAILtM,QAAAA,IAAI,EAAEgT;AAJD,OAAP;AAMD;AAED;AACF;AACA;;AA7/DA;AAAA;AAAA,WA8/DE,8BAA8B;AAC5B,UAAI,CAAC,KAAKzH,gBAAN,IAA0B,CAAC,KAAK8E,IAApC,EAA0C;AACxCvL,QAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACA;AACD;;AACD,UAAImI,OAAO,GAAG,KAAd;AACA,UAAMpK,KAAK,GAAG,KAAKyI,gBAAL,CAAsB2G,WAAtB,GAAoC,KAAK2J,WAAvD;AACA,UAAM9Y,MAAM,GAAG,KAAKwI,gBAAL,CAAsB6J,YAAtB,GAAqC,KAAKyG,WAAzD;;AACA,UAAIpY,IAAI,CAACqC,KAAL,CAAWhD,KAAX,KAAqBW,IAAI,CAACqC,KAAL,CAAW,KAAKuK,IAAL,CAAU+G,MAAV,CAAiBtU,KAA5B,CAAzB,EAA6D;AAC3D,aAAKuN,IAAL,CAAU+G,MAAV,CAAiBtU,KAAjB,GAAyBA,KAAzB;AACAoK,QAAAA,OAAO,GAAG,IAAV;AACD;;AAED,UAAIzJ,IAAI,CAACqC,KAAL,CAAW/C,MAAX,KAAsBU,IAAI,CAACqC,KAAL,CAAW,KAAKuK,IAAL,CAAU+G,MAAV,CAAiBrU,MAA5B,CAA1B,EAA+D;AAC7D,aAAKsN,IAAL,CAAU+G,MAAV,CAAiBrU,MAAjB,GAA0BA,MAA1B;AACAmK,QAAAA,OAAO,GAAG,IAAV;AACD;;AAED,UAAIA,OAAJ,EAAa;AACX,aAAKmD,IAAL,CAAU8Q,YAAV,CAAuB,KAAKtF,WAA5B,EAAyC,CAAzC,EAA4C,CAA5C,EAA+C,KAAKA,WAApD,EAAiE,CAAjE,EAAoE,CAApE;AACD;;AACD,aAAO3O,OAAP;AACD;AAED;AACF;AACA;;AAxhEA;AAAA;AAAA,WAyhEE,mBAAuB;AACrB,WAAK6G,gBAAL;AACD;AA3hEH;AAAA;AAAA,WA6hEE,4BAAgH;AAAA,UAA/F0E,QAA+F,uEAArE,IAAqE;AAAA,UAA/DC,SAA+D,uEAApC,IAAoC;AAAA,UAA9B0I,UAA8B,uEAAjB,SAAiB;;AAC9G,WAAKC,kBAAL;;AACA,UAAMrL,IAAI,GAAG,KAAKe,eAAL,EAAb;;AACA,UAAIf,IAAI,IAAIA,IAAI,CAACN,IAAjB,EAAuB;AACrB,YAAM4L,gBAAgB,GAAG,KAAKhW,QAAL,CAAclD,MAAvC;AACAqQ,QAAAA,QAAQ,GAAGA,QAAQ,IAAI,CAAvB,CAFqB,CAGrB;;AACA,YAAM8I,iBAAiB,GAAG,KAAKjR,OAAL,CAAa,KAAKC,IAAlB,CAA1B;AACA,YAAIiR,WAAW,GAAG,CAAlB;;AACA,YAAID,iBAAiB,GAAG,KAAKhO,MAAL,EAAxB,EAAuC;AACrC,cAAI6N,UAAU,IAAI,mBAAlB,EAAuC;AACrCI,YAAAA,WAAW,GAAG/d,IAAI,CAACqC,KAAL,CAAWyb,iBAAiB,GAAG,KAAKhO,MAAL,EAApB,IAAqC,KAAKjI,QAAL,CAAclD,MAAd,IAAwB,CAA7D,CAAX,CAAd;AACD,WAFD,MAEO;AACLoZ,YAAAA,WAAW,GAAG/d,IAAI,CAACqC,KAAL,CAAWyb,iBAAiB,GAAG,KAAKhO,MAAL,KAAgB,GAA/C,CAAd;AACD;AACF;;AACD,YAAMkO,SAAS,GAAGzL,IAAI,CAACN,IAAL,CAAU5S,KAAV,GAAkB,KAAKkW,WAAL,EAAlB,GAAuCsI,gBAAzD;AAEA7I,QAAAA,QAAQ,GAAGhV,IAAI,CAACI,GAAL,CACT4U,QADS,EAET;AACAgJ,QAAAA,SAHS,EAIT;AACA,aAAKlK,aAAL,KAAuB,KAAKhE,MAAL,EALd,EAMTiO,WANS,CAAX;AASA,YAAME,UAAU,GAAGje,IAAI,CAACqC,KAAL,CAAW2S,QAAX,IAAuB,IAA1C;;AACA,YAAIiJ,UAAU,IAAI,KAAK/P,cAAL,CAAoBhR,KAApB,CAA0BghB,QAA5C,EAAsD;AACpD,eAAKhQ,cAAL,CAAoBhR,KAApB,CAA0BghB,QAA1B,GAAqCD,UAArC;AACD;;AAEDhJ,QAAAA,SAAS,GAAGjV,IAAI,CAACI,GAAL,CAASJ,IAAI,CAACqC,KAAL,CAAWkQ,IAAI,CAACN,IAAL,CAAU3S,MAAV,GAAmB,KAAKyV,OAAL,KAAiB,GAA/C,CAAT,EAA8D,KAAKjN,gBAAL,CAAsBC,SAAtB,GAAkC,KAAKgN,OAAL,EAAlC,GAAmD,CAAjH,EAAoH/U,IAAI,CAACqQ,KAAL,CAAW4E,SAAS,IAAI,CAAxB,CAApH,CAAZ;AAEA,YAAMkJ,CAAC,GAAGlJ,SAAS,GAAG,IAAtB;;AACA,YAAI,KAAK/G,cAAL,CAAoBhR,KAApB,CAA0BkhB,SAA1B,IAAuCD,CAA3C,EAA8C;AAC5C,eAAKjQ,cAAL,CAAoBhR,KAApB,CAA0BkhB,SAA1B,GAAsCD,CAAtC;AACD;AACF;AACF;AAED;AACF;AACA;AACA;AACA;AACA;;AA3kEA;AAAA;AAAA,WA4kEE,wBAAexV,QAAf,EAA6F;AAAA;;AAAA,UAA5ClK,GAA4C,uEAAvB,IAAuB;;AAC3F;AACA,UAAM4f,WAAW,GAAG,SAAdA,WAAc,CAAC1U,IAAD,EAAuC;AACzD,YAAIA,IAAI,KAAK1G,4BAAb,EAA2C;AACzC,iBAAO,CAAP;AACD,SAFD,MAEO,IAAI0G,IAAI,KAAK1G,4BAAb,EAA2C;AAChD,iBAAO,CAAP;AACD,SAFM,MAEA,IAAI0G,IAAI,KAAK1G,yBAAb,EAAwC;AAC7C,iBAAO,CAAP;AACD;;AACD,eAAO,CAAC,CAAR;AACD,OATD;;AAUA,UAAMqb,gBAAgB,GAAG3V,QAAQ,CAACvM,MAAT,CAAgB,UAAC0C,OAAD,EAAa;AACpD,YAAI,CAACA,OAAL,EAAc;AACZ,iBAAO,KAAP;AACD;;AACD,YAAIA,OAAO,CAAC6K,IAAR,KAAiB1G,4BAArB,EAAmD;AACjD,cAAI,CAACvG,oCAAA,CAAqCoC,OAAO,CAACrB,QAA7C,EAAuDqB,OAAO,CAAC2L,GAA/D,EAAoE,MAAI,CAAC5C,QAAzE,CAAL,EAAyF;AACvF,mBAAO,KAAP;AACD;AACF,SAJD,MAIO,IAAI/I,OAAO,CAAC6K,IAAR,KAAiB1G,yBAArB,EAAgD;AACrD,cAAI,CAACvG,iCAAA,CAAkCoC,OAAO,CAAC2L,GAA1C,EAA+C,MAAI,CAAC5C,QAApD,CAAL,EAAoE;AAClE,mBAAO,KAAP;AACD;AACF,SAJM,MAIA,IAAI/I,OAAO,CAAC6K,IAAR,KAAiB1G,uBAArB,EAA8C;AACnD,iBAAO,KAAP;AACD;;AACD,eAAO,IAAP;AACD,OAhBwB,CAAzB;;AAiBA,UAAMyb,aAAa,GAAG,SAAhBA,aAAgB,CAACC,CAAD,EAAqBC,CAArB,EAAoD;AACxE,YAAIC,KAAK,GAAGR,WAAW,CAACM,CAAC,CAAChV,IAAH,CAAvB;AACA,YAAImV,KAAK,GAAGT,WAAW,CAACO,CAAC,CAACjV,IAAH,CAAvB;;AACA,YAAIkV,KAAK,KAAKC,KAAd,EAAqB;AACnB,cAAIrgB,GAAG,KAAK,IAAZ,EAAkB;AAChB,mBAAO,CAAP;AACD,WAHkB,CAKnB;;;AACAogB,UAAAA,KAAK,GAAG5gB,yBAAA,CAA0B0gB,CAAC,CAAClgB,GAA5B,EAAiCA,GAAjC,CAAR;AACAqgB,UAAAA,KAAK,GAAG7gB,yBAAA,CAA0B2gB,CAAC,CAACngB,GAA5B,EAAiCA,GAAjC,CAAR;;AACA,cAAIogB,KAAK,KAAKC,KAAd,EAAqB;AACnB,mBAAO,CAAP;AACD;;AACD,iBAAOD,KAAK,GAAGC,KAAR,GAAgB,CAAhB,GAAoB,CAAC,CAA5B;AACD;;AAED,eAAOD,KAAK,GAAGC,KAAR,GAAgB,CAAhB,GAAoB,CAAC,CAA5B;AACD,OAlBD;;AAmBA,UAAMC,MAAM,GAAGT,gBAAgB,CAACU,IAAjB,CAAsBN,aAAtB,CAAf;;AACA,UAAIK,MAAM,CAACziB,MAAP,GAAgB,CAApB,EAAuB;AACrB,eAAOyiB,MAAM,CAACA,MAAM,CAACziB,MAAP,GAAgB,CAAjB,CAAb;AACD;;AAED,aAAO,IAAP;AACD;AAED;AACF;AACA;;AAtoEA;AAAA;AAAA,WAuoEE,0BAAwB0M,GAAxB,EAAgF;AAAA;;AAAA,UAAzCiW,WAAyC,uEAA3B,CAA2B;AAC9EA,MAAAA,WAAW,GAAGjf,IAAI,CAACI,GAAL,CAAS6e,WAAT,EAAsB,CAAtB,CAAd;AACA,UAAM5G,QAAgC,GAAG,EAAzC;;AAEA,UAAI,CAACrP,GAAL,EAAU;AACR,eAAOqP,QAAP;AACD;;AAED,UAAMta,YAAY,GAAGrB,+BAAA,CAAgC,KAAKmL,QAArC,CAArB,CAR8E,CAS9E;;AACA,UAAMmU,WAAW,GAAG,KAAK5E,WAAL,CAAiB,KAAKtK,IAAtB,CAApB;;AACA,UAAIzN,KAAK,GAAG,CAAZ;;AACA,UAAI,KAAKwI,QAAL,IAAiB,KAAKA,QAAL,CAAcnD,aAAnC,EAAkD;AAChD,YAAMA,aAAa,GAAG,KAAKmD,QAAL,CAAcnD,aAApC;AACArF,QAAAA,KAAK,GAAGW,IAAI,CAACI,GAAL,CAAS,CAACsE,aAAa,CAACrF,KAAd,IAAuB,CAAxB,IAA6B,KAAK+Y,WAA3C,EAAwD,CAAC1T,aAAa,CAAClB,QAAd,IAA0B,CAA3B,IAAgC,KAAK4U,WAArC,IAAoD,CAA5G,IAAiH6G,WAAzH;AACD,OAf6E,CAgB9E;;;AACA,UAAIjW,GAAG,CAAC7J,CAAJ,IAASpB,YAAY,GAAG,GAAxB,IAAgCiL,GAAG,CAAC9J,CAAJ,IAAS8c,WAAW,GAAG3c,KAAK,GAAG,CAA/B,IAAoC2J,GAAG,CAAC9J,CAAJ,IAAS8c,WAAW,GAAG3c,KAAK,GAAG,CAAvG,EAA2G;AACzGgZ,QAAAA,QAAQ,CAAClc,IAAT,CAAc;AACZsC,UAAAA,GAAG,EAAE,KAAKqO,IADE;AAEZnD,UAAAA,IAAI,EAAE1G,4BAA4BqD;AAFtB,SAAd;AAID;;AACD,UAAM4Y,IAAI,GAAG,KAAKrX,QAAL,CAAcpD,WAA3B;;AACA,UAAIuE,GAAG,CAAC7J,CAAJ,IAASpB,YAAT,IAAyB,KAAK8J,QAAL,CAAcjC,kBAA3C,EAA+D;AAC7D,aAAKkM,gBAAL,CAAsB,UAACC,YAAD,EAAehT,KAAf,EAAsBogB,SAAtB,EAA0C;AAC9D;AACA,cAAIA,SAAJ,EAAe;AACb,gBAAMC,aAAa,GAAGnhB,uBAAA,CAAwB+K,GAAG,CAAC9J,CAA5B,EAA+B8J,GAAG,CAAC7J,CAAnC,EAAsC4S,YAAY,CAACU,SAAb,CAAuBR,IAA7D,CAAtB;;AACA,gBAAImN,aAAJ,EAAmB;AACjB,kBAAM3U,GAAG,GAAG;AACVhM,gBAAAA,GAAG,EAAE,OAAI,CAACoV,cAAL,CAAoB7K,GAAG,CAAC9J,CAAxB,EAA2BggB,IAA3B,CADK;AAEV7U,gBAAAA,SAAS,EAAE0H,YAAY,CAACU,SAAb,CAAuBlM,KAAvB,CAA6B8D,SAF9B;AAGVV,gBAAAA,IAAI,EAAE1G,uBAHI;AAIVwH,gBAAAA,GAAG,EAAEsH,YAAY,CAACU,SAAb,CAAuBlM;AAJlB,eAAZ;AAMA8R,cAAAA,QAAQ,CAAClc,IAAT,CAAcsO,GAAd;AACD;;AACD,gBAAIsH,YAAY,CAACU,SAAb,CAAuBmG,MAA3B,EAAmC;AACjC7G,cAAAA,YAAY,CAACU,SAAb,CAAuBmG,MAAvB,CAA8Bpc,OAA9B,CAAsC,UAACuc,KAAD,EAAW;AAC/C,oBAAMsG,wBAAwB,GAAGphB,uBAAA,CAAwB+K,GAAG,CAAC9J,CAA5B,EAA+B8J,GAAG,CAAC7J,CAAnC,EAAsC4Z,KAAK,CAAC9G,IAA5C,CAAjC;;AACA,oBAAIoN,wBAAJ,EAA8B;AAC5B,sBAAMxN,eAAe,GAAG,OAAI,CAACW,aAAL,CAAmBuG,KAAK,CAAC1O,SAAzB,CAAxB;;AACA,sBAAMiV,YAAY,GAAG;AACnB7gB,oBAAAA,GAAG,EAAE,OAAI,CAACoV,cAAL,CAAoB7K,GAAG,CAAC9J,CAAxB,EAA2BggB,IAA3B,CADc;AAEnBvV,oBAAAA,IAAI,EAAE1G,yBAFa;AAGnB8V,oBAAAA,KAAK,EAAEA,KAHY;AAInBtO,oBAAAA,GAAG,EAAEsH,YAAY,CAACU,SAAb,CAAuBlM,KAJT;AAKnB8D,oBAAAA,SAAS,EAAEwH;AALQ,mBAArB;;AAQA,sBAAM0N,OAAO,GAAG,OAAI,CAACrW,OAAL,CAAa6P,KAAK,CAAC5Y,GAAnB,CAAhB,CAV4B,CAW5B;;;AACAmf,kBAAAA,YAAY,CAAC7gB,GAAb,IAAoBsa,KAAK,CAAC5Y,GAAN,GAAYof,OAAhC;AACAlH,kBAAAA,QAAQ,CAAClc,IAAT,CAAcmjB,YAAd;AACD;AACF,eAjBD;AAkBD;AACF;;AAED,cAAME,WAAW,GAAGzN,YAAY,CAACE,IAAjC;;AACA,cAAIuN,WAAJ,EAAiB;AACf,gBAAMC,IAAI,GAAGxhB,yBAAA,CAA0BuhB,WAAW,CAACtgB,CAAtC,EAAyCsgB,WAAW,CAACrgB,CAArD,EAAwD6J,GAAG,CAAC9J,CAA5D,EAA+D8J,GAAG,CAAC7J,CAAnE,CAAb;;AACA,gBAAIsgB,IAAI,IAAID,WAAW,CAAClgB,MAAZ,GAAqB2f,WAAjC,EAA8C;AAC5C5G,cAAAA,QAAQ,CAAClc,IAAT,CAAc;AACZsB,gBAAAA,QAAQ,EAAEsU,YAAY,CAACxL,KADX;AAEZ8D,gBAAAA,SAAS,EAAE,CAAC0H,YAAY,CAACxL,KAAd,CAFC;AAGZ9H,gBAAAA,GAAG,EAAEsT,YAAY,CAACxL,KAAb,CAAmB9H,GAHZ;AAIZgM,gBAAAA,GAAG,EAAEsH,YAAY,CAACU,SAAb,CAAuBlM,KAJhB;AAKZoD,gBAAAA,IAAI,EAAE1G,4BAA4B2G;AALtB,eAAd;AAOD;AACF;AACF,SAhDD;AAiDD;;AACD,aAAOyO,QAAP;AACD;AAED;AACF;AACA;;AAvtEA;AAAA;AAAA,WAwtEE,uBAAcqH,OAAd,EAAyD;AACvDA,MAAAA,OAAO,GAAGA,OAAO,IAAK,EAAtB,CADuD,CAEvD;AACA;;AACA,UAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAevb,sBAAf,CAAX,CAAd,CAJuD,CAKvD;AACA;;AACA,UAAMwb,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACzf,EAAD,EAAUC,IAAV,EAA8B;AACrD,YAAI,CAACD,EAAD,IAAO,CAACC,IAAZ,EAAkB;AAChB;AACD,SAHoD,CAIrD;;;AACA,aAAK,IAAIyf,GAAT,IAAgBzf,IAAhB,EAAsB;AACpB,cAAI0f,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqC7f,IAArC,EAA2Cyf,GAA3C,CAAJ,EAAqD;AACnD,gBAAIzf,IAAI,CAACyf,GAAD,CAAJ,KAAc7iB,SAAlB,EAA6B;AAC3B,kBAAI,gBAAOoD,IAAI,CAACyf,GAAD,CAAX,MAAqB,QAAzB,EAAmC;AACjC,oBAAI,CAAC1f,EAAE,CAAC0f,GAAD,CAAP,EAAc;AACZ1f,kBAAAA,EAAE,CAAC0f,GAAD,CAAF,GAAUzf,IAAI,CAACyf,GAAD,CAAd;AACD,iBAFD,MAEO;AACLD,kBAAAA,gBAAgB,CAACzf,EAAE,CAAC0f,GAAD,CAAH,EAAUzf,IAAI,CAACyf,GAAD,CAAd,CAAhB;AACD;AACF,eAND,MAMO;AACL1f,gBAAAA,EAAE,CAAC0f,GAAD,CAAF,GAAUzf,IAAI,CAACyf,GAAD,CAAd;AACD;AACF;AACF;AACF;AACF,OApBD;;AAsBAD,MAAAA,gBAAgB,CAACJ,KAAD,EAAQD,OAAR,CAAhB;AACA,aAAOC,KAAP;AACD;AAED;AACF;AACA;;AA3vEA;AAAA;AAAA,WA4vEE,uBAAqB1jB,QAArB,EAAoF;AAClF,WAAKokB,EAAL,CAAQhd,0BAAR,EAAoCpH,QAApC;AACD;AAED;AACF;AACA;;AAlwEA;AAAA;AAAA,WAmwEE,uBAAqBA,QAArB,EAA6E;AAC3E,WAAKokB,EAAL,CAAQhd,0BAAR,EAAoCpH,QAApC;AACD;AAED;AACF;AACA;;AAzwEA;AAAA;AAAA,WA0wEE,gBAAcA,QAAd,EAAsE;AACpE,WAAKokB,EAAL,CAAQhd,mBAAR,EAA6BpH,QAA7B;AACD;AAED;AACF;AACA;;AAhxEA;AAAA;AAAA,WAixEE,wBAAsBA,QAAtB,EAA8E;AAC5E,WAAKokB,EAAL,CAAQhd,2BAAR,EAAqCpH,QAArC;AACD;AAED;AACF;AACA;;AAvxEA;AAAA;AAAA,WAwxEE,uBAAqBA,QAArB,EAA8E;AAC5E,WAAKokB,EAAL,CAAQhd,0BAAR,EAAoCpH,QAApC;AACD;AAED;AACF;AACA;;AA9xEA;AAAA;AAAA,WA+xEE,2BAAyBA,QAAzB,EAA4F;AAC1F,WAAKokB,EAAL,CAAQhd,8BAAR,EAAwCpH,QAAxC;AACD;AAED;AACF;AACA;;AAryEA;AAAA;AAAA,WAsyEE,qBAAmBA,QAAnB,EAA4E;AAC1E,WAAKokB,EAAL,CAAQhd,wBAAR,EAAkCpH,QAAlC;AACD;AAxyEH;AAAA;AAAA,WA0yEE,oBAAkBA,QAAlB,EAA8E;AAC5E,WAAKokB,EAAL,CAAQhd,uBAAR,EAAiCpH,QAAjC;AACD;AAED;AACF;AACA;;AAhzEA;AAAA;AAAA,WAizEE,kBAAgBA,QAAhB,EAA0E;AACxE,WAAKokB,EAAL,CAAQhd,qBAAR,EAA+BpH,QAA/B;AACD;AAnzEH;AAAA;AAAA,WAqzEE,0BAAiBM,IAAjB,EAA+D;AAC7D,UAAMqkB,WAAW,GAAG;AAClBrkB,QAAAA,IAAI,EAAEA,IADY;AAElBkM,QAAAA,UAAU,EAAE,KAAKqL,aAAL,EAFM;AAGlB/L,QAAAA,SAAS,EAAE,KAAKgM,YAAL,EAHO;AAIlB8M,QAAAA,YAAY,EAAE,KAAK/Y,gBAAL,CAAsB+Y,YAJlB;AAKlB9T,QAAAA,WAAW,EAAE,KAAKjF,gBAAL,CAAsBiF;AALjB,OAApB;;AAOA,iFAAW1J,qBAAX,EAAkCud,WAAlC;;AACA,aAAOA,WAAP;AACD;AA/zEH;AAAA;AAAA,WAi0EE,8BAAqB9hB,OAArB,EAA0J;AAAA,UAAlGgS,MAAkG,uEAApEpO,oCAAoE;AACxJ,UAAMnG,IAAI,GAAG,IAAIkG,4BAAJ,EAAb;AACAlG,MAAAA,IAAI,CAACkC,GAAL,GAAWK,OAAO,CAACL,GAAnB;AACAlC,MAAAA,IAAI,CAACgP,OAAL,GAAezM,OAAO,CAACyM,OAAvB;AACAhP,MAAAA,IAAI,CAACuM,MAAL,GAAchK,OAAd;AACAvC,MAAAA,IAAI,CAACuU,MAAL,GAAcA,MAAd;AACA,WAAK0L,IAAL,CAAUnZ,8BAAV,EAA0C9G,IAA1C;AACA,aAAOA,IAAP;AACD;AAz0EH;AAAA;AAAA,WA20EE,iCAA2C;AACzC,UAAMA,IAAI,GAAG,KAAKukB,iBAAL,EAAb;;AACA,WAAKtE,IAAL,CAAUnZ,0BAAV,EAAsC9G,IAAtC;;AACA,UAAIA,IAAI,CAAC+M,WAAL,EAAJ,EAAwB;AACtB,aAAKyX,YAAL,CAAkBxkB,IAAlB,EAAwB,KAAKiN,KAA7B,EAAoC,IAApC;AACD;;AACD,aAAOjN,IAAP;AACD;AAl1EH;AAAA;AAAA,WAo1EE,kCAA4C;AAC1C,UAAI,KAAKiN,KAAL,IAAc,KAAKA,KAAL,CAAWC,OAA7B,EAAsC;AACpC,YAAMlN,IAAI,GAAG,KAAKukB,iBAAL,EAAb;;AACA,aAAKtE,IAAL,CAAUnZ,2BAAV,EAAuC9G,IAAvC;;AACA,YAAIA,IAAI,CAAC+M,WAAL,EAAJ,EAAwB;AACtB,eAAKyX,YAAL,CAAkBxkB,IAAlB,EAAwB,KAAKiN,KAA7B,EAAoC,IAApC;AACD;;AACD,eAAOjN,IAAP;AACD;;AAED,aAAO,IAAP;AACD;AA/1EH;AAAA;AAAA,WAi2EE,sBAAaykB,QAAb,EAA0CzO,IAA1C,EAA8F;AAAA;;AAAA,UAAvB0O,OAAuB,uEAAb,KAAa;;AAC5F,UAAID,QAAQ,CAACrY,QAAb,EAAuB;AACrBqY,QAAAA,QAAQ,CAACrY,QAAT,CAAkBnM,OAAlB,CAA0B,UAACsC,OAAD,EAAa;AACrC,cAAM0S,KAAK,GAAGyP,OAAO,GAAGniB,OAAO,CAAC8R,UAAX,GAAwB9R,OAAO,CAACyM,OAArD;;AACA,iBAAI,CAACmG,eAAL,CAAqB5S,OAArB,EAA8B0S,KAA9B;AACD,SAHD;AAID;;AACDe,MAAAA,IAAI,CAAC9T,GAAL,GAAW8T,IAAI,CAAChH,OAAhB;AACAyV,MAAAA,QAAQ,CAACviB,GAAT,GAAeuiB,QAAQ,CAACzV,OAAxB;AACD;AA12EH;AAAA;AAAA,WA42EE,0BAAoC;AAClC,UAAI,CAAC,KAAK/B,KAAV,EAAiB;AACf,eAAO,IAAP;AACD;;AACD,UAAMjN,IAAI,GAAG,KAAKukB,iBAAL,EAAb;;AACA,WAAKtE,IAAL,CAAUnZ,mBAAV,EAA+B9G,IAA/B;;AACA,UAAIA,IAAI,CAAC+M,WAAL,EAAJ,EAAwB;AACtB,aAAKyX,YAAL,CAAkBxkB,IAAlB,EAAwB,KAAKiN,KAA7B,EAAoC,KAApC;AACD;;AACD,aAAOjN,IAAP;AACD;AAt3EH;AAAA;AAAA,WAw3EE,gCAAuBoU,KAAvB,EAA+E;AAC7E,UAAMpU,IAAI,GAAG,IAAIsG,qBAAJ,EAAb;AACAtG,MAAAA,IAAI,CAACyN,QAAL,GAAgB2G,KAAK,CAAC3G,QAAtB;AACAzN,MAAAA,IAAI,CAACkN,OAAL,GAAekH,KAAK,CAAClH,OAArB;AACA,WAAK+S,IAAL,CAAUnZ,uBAAV,EAAmC9G,IAAnC;AACA,aAAOA,IAAP;AACD;AA93EH;AAAA;AAAA,WAg4EE,6BAAuC;AACrC,UAAM2kB,kBAAkB,GAAG,IAAIne,iBAAJ,EAA3B;;AACA,UAAI,CAAC,KAAKyG,KAAV,EAAiB;AACf,eAAO0X,kBAAP;AACD;;AACDA,MAAAA,kBAAkB,CAACziB,GAAnB,GAAyB,KAAK8K,WAAL,CAAiB9K,GAA1C;AACAyiB,MAAAA,kBAAkB,CAACjY,WAAnB,GAAiC,KAAKM,WAAL,CAAiBN,WAAlD;AACAiY,MAAAA,kBAAkB,CAAChY,OAAnB,GAA6B,KAAKK,WAAL,CAAiBL,OAA9C;AACAgY,MAAAA,kBAAkB,CAAClY,GAAnB,GAAyB,KAAKO,WAA9B;AACA2X,MAAAA,kBAAkB,CAACvY,QAAnB,GAA8B,KAAKa,KAAL,CAAWb,QAAzC;AACAuY,MAAAA,kBAAkB,CAACpY,MAAnB,GAA4B,KAAKU,KAAL,CAAWV,MAAvC;AACA,aAAOoY,kBAAP;AACD;AA54EH;;AAAA;AAAA,EAA8BnlB,qBAA9B,E","sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./src/timelineEventsEmitter.ts","webpack:///./src/enums/timelineKeyframeShape.ts","webpack:///./src/utils/timelineStyleUtils.ts","webpack:///./src/utils/timelineUtils.ts","webpack:///./src/utils/events/timelineBaseEvent.ts","webpack:///./src/utils/events/timelineKeyframeChangedEvent.ts","webpack:///./src/enums/timelineEventSource.ts","webpack:///./src/utils/events/timelineTimeChangedEvent.ts","webpack:///./src/utils/events/timelineSelectedEvent.ts","webpack:///./src/utils/events/timelineClickEvent.ts","webpack:///./src/utils/events/timelineDragEvent.ts","webpack:///./src/enums/timelineInteractionMode.ts","webpack:///./src/enums/timelineElementType.ts","webpack:///./src/enums/timelineCursorType.ts","webpack:///./src/enums/timelineCapShape.ts","webpack:///./src/enums/timelineSelectionMode.ts","webpack:///./src/enums/timelineEvents.ts","webpack:///./src/settings/defaults.ts","webpack:///./src/timeline.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"timelineModule\"] = factory();\n\telse\n\t\troot[\"timelineModule\"] = factory();\n})(self, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/* eslint-disable  @typescript-eslint/no-explicit-any */\r\ninterface Event {\r\n  topic: string;\r\n  callback: (args: any) => void;\r\n}\r\n\r\nexport class TimelineEventsEmitter {\r\n  protected _subscriptions: Array<Event> = [];\r\n\r\n  // on event.\r\n  on(topic: string, callback: (args: any) => void): void {\r\n    if (!callback) {\r\n      return;\r\n    }\r\n\r\n    this._subscriptions.push({\r\n      topic: topic,\r\n      callback: callback,\r\n    });\r\n  }\r\n  /**\r\n   * Remove an event from the subscriptions list.\r\n   */\r\n  off(topic: string, callback: (args: any) => void): void {\r\n    this._subscriptions = this._subscriptions.filter((event) => {\r\n      return event && event.callback != callback && event.topic != topic;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Unsubscribe all\r\n   */\r\n  offAll(): void {\r\n    this._subscriptions.length = 0;\r\n  }\r\n\r\n  // emit event.\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  emit(topic: string, args: any): void {\r\n    this._subscriptions.forEach((event) => {\r\n      if (event && event.topic == topic && event.callback) {\r\n        event.callback(args);\r\n      }\r\n    });\r\n  }\r\n}\r\n","export enum TimelineKeyframeShape {\r\n  None = 'none',\r\n  Rhomb = 'rhomb',\r\n  Circle = 'circle',\r\n  Rect = 'rect',\r\n}\r\n","/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport { TimelineRow } from '../timelineRow';\r\nimport { TimelineOptions } from '../settings/timelineOptions';\r\nimport { TimelineRowStyle } from '../settings/styles/timelineRowStyle';\r\nimport { TimelineKeyframeStyle } from '../settings/styles/timelineKeyframeStyle';\r\nimport { TimelineKeyframeShape } from '../enums/timelineKeyframeShape';\r\n\r\nexport class TimelineStyleUtils {\r\n  /**\r\n   * Get keyframe style from a keyframe, than from a row, than from a global settings.\r\n   * @param keyframe keyframe to get style for.\r\n   * @param row keyframe row.\r\n   * @param propertyName property to get.\r\n   * @param defaultValue default value to return\r\n   * @param reverseOrder reverse styling order: global, row, keyframe\r\n   */\r\n  static getKeyframeStyle<T>(\r\n    keyframeStyle: TimelineKeyframeStyle | null,\r\n    rowStyle: TimelineRow | null,\r\n    options: TimelineOptions | null,\r\n    propertyName: string,\r\n    defaultValue?: T,\r\n    reverseOrder = false,\r\n  ): T {\r\n    // Don't spawn new array for the normal order.\r\n    let styles: Array<any> | null = null;\r\n    if (keyframeStyle) {\r\n      const style: any = keyframeStyle;\r\n      if (style[propertyName] !== undefined) {\r\n        const value = style[propertyName];\r\n        if (!reverseOrder) {\r\n          return value;\r\n        }\r\n        styles = styles || [];\r\n        styles.push(value);\r\n      }\r\n    }\r\n\r\n    if (rowStyle && rowStyle.keyframesStyle) {\r\n      const style: any = rowStyle.keyframesStyle;\r\n      if (style[propertyName] !== undefined) {\r\n        const value = style[propertyName];\r\n        if (!reverseOrder) {\r\n          return value;\r\n        }\r\n        styles = styles || [];\r\n        styles.push(value);\r\n      }\r\n    }\r\n    const globalRowStyle = options ? options.rowsStyle : null;\r\n    if (globalRowStyle && globalRowStyle.keyframesStyle) {\r\n      const style: any = globalRowStyle.keyframesStyle;\r\n      if (style[propertyName] !== undefined) {\r\n        const value = style[propertyName];\r\n        if (!reverseOrder) {\r\n          return value;\r\n        }\r\n        styles = styles || [];\r\n        styles.push(value);\r\n      }\r\n    }\r\n\r\n    return reverseOrder && styles && styles.length > 0 ? styles[styles.length - 1] : defaultValue;\r\n  }\r\n\r\n  /**\r\n   * Get row style from default settings or overrides by a row settings.\r\n   */\r\n  static getRowStyle<T>(rowStyle: TimelineRowStyle, options: TimelineOptions | null, propertyName: string, defaultValue?: T, reverseOrder = false): T | undefined {\r\n    // Don't spawn new array for the normal order.\r\n    let styles: Array<any> = null;\r\n    if (rowStyle) {\r\n      const style: any = rowStyle;\r\n      if (style[propertyName] !== undefined) {\r\n        const results = style[propertyName] as T;\r\n        if (!reverseOrder) {\r\n          return results;\r\n        }\r\n        styles = styles || [];\r\n        styles.push(results);\r\n      }\r\n    }\r\n    const globalRowStyle = options ? options.rowsStyle : null;\r\n    if (globalRowStyle) {\r\n      const style: any = globalRowStyle;\r\n      if (style[propertyName] !== undefined) {\r\n        const results = style[propertyName] as T;\r\n        if (!reverseOrder) {\r\n          return results;\r\n        }\r\n\r\n        styles = styles || [];\r\n        styles.push(results);\r\n      }\r\n    }\r\n\r\n    return reverseOrder && styles && styles.length > 0 ? styles[styles.length - 1] : defaultValue;\r\n  }\r\n\r\n  static keyframeShape(keyframe: TimelineKeyframeStyle | null, rowStyle: TimelineRowStyle | null, options: TimelineOptions | null): TimelineKeyframeShape {\r\n    const shape = TimelineStyleUtils.getKeyframeStyle<TimelineKeyframeShape>(keyframe, rowStyle, options, 'shape', TimelineKeyframeShape.Rhomb);\r\n    return shape;\r\n  }\r\n  static keyframeFillColor(keyframe: TimelineKeyframeStyle | null, rowStyle: TimelineRowStyle | null, options: TimelineOptions | null): string {\r\n    const color = TimelineStyleUtils.getKeyframeStyle<string>(keyframe, rowStyle, options, 'fillColor', 'DarkOrange');\r\n    return color;\r\n  }\r\n  static keyframeSelectedFillColor(keyframe: TimelineKeyframeStyle | null, rowStyle: TimelineRowStyle | null, options: TimelineOptions | null): string {\r\n    const color = TimelineStyleUtils.getKeyframeStyle<string>(keyframe, rowStyle, options, 'selectedFillColor', 'red');\r\n    return color;\r\n  }\r\n\r\n  static keyframeStrokeThickness(keyframe: TimelineKeyframeStyle | null, rowStyle: TimelineRowStyle | null, options: TimelineOptions | null): number {\r\n    return TimelineStyleUtils.getKeyframeStyle<number>(keyframe, rowStyle, options, 'strokeThickness', 0.2, false);\r\n  }\r\n\r\n  static keyframeStrokeColor(keyframe: TimelineKeyframeStyle | null, rowStyle: TimelineRowStyle | null, options: TimelineOptions | null): string {\r\n    return TimelineStyleUtils.getKeyframeStyle<string>(keyframe, rowStyle, options, 'strokeColor', 'Black', false);\r\n  }\r\n  static keyframeSelectedStrokeColor(keyframe: TimelineKeyframeStyle | null, rowStyle: TimelineRowStyle | null, options: TimelineOptions | null): string {\r\n    return TimelineStyleUtils.getKeyframeStyle<string>(keyframe, rowStyle, options, 'selectedStrokeColor', 'Black', false);\r\n  }\r\n  /**\r\n   * Get current row height from styling\r\n   */\r\n  static getRowHeight(rowStyle: TimelineRowStyle, options: TimelineOptions): number {\r\n    return TimelineStyleUtils.getRowStyle<number>(rowStyle, options, 'height', 24);\r\n  }\r\n  static rowGroupHeight(rowStyle: TimelineRowStyle, options: TimelineOptions): number | string {\r\n    return TimelineStyleUtils.getRowStyle<number | string>(rowStyle, options, 'groupHeight', 'auto');\r\n  }\r\n  static groupFillColor(rowStyle: TimelineRowStyle, options: TimelineOptions): string | null {\r\n    return TimelineStyleUtils.getRowStyle<string>(rowStyle, options, 'groupFillColor');\r\n  }\r\n  static getRowMarginBottom(rowStyle: TimelineRowStyle, options: TimelineOptions): number {\r\n    return TimelineStyleUtils.getRowStyle<number>(rowStyle, options, 'marginBottom', 0);\r\n  }\r\n  static getRowFillColor(rowStyle: TimelineRowStyle, options: TimelineOptions): string {\r\n    return TimelineStyleUtils.getRowStyle<string>(rowStyle, options, 'fillColor', '#252526');\r\n  }\r\n  static headerHeight(options: TimelineOptions | null): number {\r\n    return options ? options.headerHeight : 0 || 30;\r\n  }\r\n  static keyframeDraggable(keyframe: TimelineKeyframeStyle | null, rowStyle: TimelineRowStyle | null, options: TimelineOptions | null, defaultValue = true): boolean {\r\n    return TimelineStyleUtils.getKeyframeStyle<boolean>(keyframe, rowStyle, options, 'draggable', defaultValue, false);\r\n  }\r\n\r\n  static groupDraggable(rowStyle: TimelineRowStyle, options: TimelineOptions, defaultValue = true): boolean {\r\n    return TimelineStyleUtils.getRowStyle<boolean>(rowStyle, options, 'groupDraggable', defaultValue, false);\r\n  }\r\n}\r\n","import { TimelineRanged } from '../timelineRanged';\r\n\r\nconst denominators = [1, 2, 5, 10];\r\nexport class TimelineUtils {\r\n  static drawLine(ctx: CanvasRenderingContext2D, x1: number, y1: number, x2: number, y2: number): void {\r\n    ctx.moveTo(x1, y1);\r\n    ctx.lineTo(x2, y2);\r\n  }\r\n  /**\r\n   * Check is valid number.\r\n   */\r\n  static isNumber(val?: number): boolean {\r\n    if (typeof val === 'number' && !isNaN(val) && Number.isFinite(val)) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n  static deleteElement<T>(array: Array<T>, element: T): Array<T> {\r\n    const index: number = array.indexOf(element);\r\n    if (index !== -1) {\r\n      return array.splice(index, 1);\r\n    }\r\n    return array;\r\n  }\r\n\r\n  /**\r\n   * Check rectangle overlap.\r\n   */\r\n  static isOverlap(x: number, y: number, rectangle: DOMRect): boolean {\r\n    if (!rectangle) {\r\n      return false;\r\n    }\r\n\r\n    if (rectangle.x <= x && rectangle.x + rectangle.width >= x && rectangle.y <= y && rectangle.y + rectangle.height >= y) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n  /**\r\n   * Find beautiful step for the header line gauge.\r\n   */\r\n  static findGoodStep(originalStep: number, divisionCheck = 0): number {\r\n    if (originalStep <= 0 || isNaN(originalStep) || !Number.isFinite(originalStep)) {\r\n      return originalStep;\r\n    }\r\n    let step = originalStep;\r\n    let lastDistance = null;\r\n    const pow = TimelineUtils.getPowArgument(originalStep);\r\n    for (let i = 0; i < denominators.length; i++) {\r\n      const denominator = denominators[i];\r\n      const calculatedStep = denominator * Math.pow(10, pow);\r\n      if (divisionCheck && divisionCheck % calculatedStep != 0) {\r\n        continue;\r\n      }\r\n      const distance = TimelineUtils.getDistance(originalStep, calculatedStep);\r\n\r\n      if (distance == 0 || (distance <= 0.1 && pow > 0)) {\r\n        lastDistance = distance;\r\n        step = calculatedStep;\r\n        break;\r\n      } else if (!lastDistance || lastDistance > distance) {\r\n        lastDistance = distance;\r\n        step = calculatedStep;\r\n      }\r\n    }\r\n\r\n    return step;\r\n  }\r\n  /**\r\n   * Keep value in min, max bounds.\r\n   */\r\n  static keepInBounds(value: number, min: number | undefined = null, max: number | undefined = null): number {\r\n    if (TimelineUtils.isNumber(value)) {\r\n      if (TimelineUtils.isNumber(min)) {\r\n        value = Math.max(value, min);\r\n      }\r\n      if (TimelineUtils.isNumber(max)) {\r\n        value = Math.min(value, max);\r\n      }\r\n    }\r\n\r\n    return value;\r\n  }\r\n  static setMinMax(to: TimelineRanged, from: TimelineRanged, shrink = false): TimelineRanged {\r\n    if (!from || !to) {\r\n      return to;\r\n    }\r\n    const fromMin = Math.min(from.getMin ? from.getMin() : from.min, from.min);\r\n    const toMin = Math.min(to.getMin ? to.getMin() : to.min, to.min);\r\n    const isFromMinNumber = TimelineUtils.isNumber(fromMin);\r\n    const isToMinNumber = TimelineUtils.isNumber(toMin);\r\n    // get absolute min and max bounds:\r\n    if (isFromMinNumber && isToMinNumber) {\r\n      to.min = shrink ? Math.min(fromMin, toMin) : Math.max(fromMin, toMin);\r\n    } else if (isFromMinNumber) {\r\n      to.min = fromMin;\r\n    }\r\n\r\n    const fromMax = Math.min(from.getMax ? from.getMax() : from.max, from.max);\r\n    const toMax = Math.min(to.getMax ? to.getMax() : to.max, to.max);\r\n    const isFromMaxNumber = TimelineUtils.isNumber(fromMax);\r\n    const isToMaxNumber = TimelineUtils.isNumber(toMax);\r\n    if (isFromMaxNumber && isToMaxNumber) {\r\n      to.max = shrink ? Math.max(fromMax, toMax) : Math.min(fromMax, toMax);\r\n    } else if (isFromMaxNumber) {\r\n      to.max = fromMax;\r\n    }\r\n\r\n    return to;\r\n  }\r\n  static isRectOverlap(rect: DOMRect, rect2: DOMRect): boolean {\r\n    if (!rect || !rect2) {\r\n      console.log('Rectangles cannot be empty');\r\n      return false;\r\n    }\r\n\r\n    // If one rectangle is on left side of other\r\n    if (rect.x > rect2.x + rect2.width || rect2.x > rect.x + rect.width) {\r\n      return true;\r\n    }\r\n\r\n    // If one rectangle is above other\r\n    if (rect.y < rect2.y + rect2.height || rect2.y < rect.y + rect.height) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  static getDistance(x1: number, y1: number, x2?: number, y2?: number): number {\r\n    if (x2 != undefined && y2 != undefined) {\r\n      return Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));\r\n    } else {\r\n      return Math.abs(x1 - y1);\r\n    }\r\n  }\r\n  static sign(p: number): number {\r\n    return p >= 0 ? 1 : -1;\r\n  }\r\n\r\n  static clearBrowserSelection(): void {\r\n    if (!window) {\r\n      return;\r\n    }\r\n    if (window.getSelection) {\r\n      window.getSelection().removeAllRanges();\r\n    } else {\r\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n      const doc: any = window.document;\r\n      if (doc.selection) {\r\n        doc.selection.empty();\r\n      }\r\n    }\r\n  }\r\n  static getPowArgument(toCheck: number): number {\r\n    if (!toCheck || toCheck === 0 || !isFinite(toCheck)) {\r\n      return 1;\r\n    }\r\n    // some optimization for numbers:\r\n    if (toCheck >= 10 && toCheck < 100) {\r\n      return 1;\r\n    } else if (toCheck >= 100 && toCheck < 1000) {\r\n      return 2;\r\n    } else if (toCheck >= 1000 && toCheck < 10000) {\r\n      return 3;\r\n    }\r\n\r\n    toCheck = Math.abs(toCheck);\r\n    let category = 0;\r\n    const s = this.sign(toCheck);\r\n    if (toCheck > 1) {\r\n      while (toCheck >= 1) {\r\n        toCheck = Math.floor(toCheck / 10.0);\r\n        category++;\r\n      }\r\n\r\n      return s * category - 1;\r\n    } else if (toCheck > 0.0) {\r\n      // Get number of zeros before the number.\r\n      const zerosCount = Math.floor(Math.log(toCheck) / Math.log(10) + 1) - 1;\r\n      return zerosCount;\r\n    } else {\r\n      return 1;\r\n    }\r\n  }\r\n}\r\n","export class TimelineBaseEvent {\r\n  private _prevented = false;\r\n  /**\r\n   * Prevent default click logic.\r\n   */\r\n  preventDefault(): void {\r\n    this._prevented = true;\r\n  }\r\n\r\n  isPrevented(): boolean {\r\n    return this._prevented;\r\n  }\r\n}\r\n","import { TimelineBaseEvent } from './timelineBaseEvent';\r\nimport { TimelineElement } from '../timelineElement';\r\nimport { TimelineEventSource } from '../../enums/timelineEventSource';\r\n\r\nexport class TimelineKeyframeChangedEvent extends TimelineBaseEvent {\r\n  /**\r\n   * Value to be used.\r\n   */\r\n  val: number;\r\n  /**\r\n   * Previous value.\r\n   */\r\n  prevVal: number;\r\n  /**\r\n   * Target element\r\n   */\r\n  target: TimelineElement;\r\n  /**\r\n   * Event source.\r\n   */\r\n  source: TimelineEventSource;\r\n}\r\n","export enum TimelineEventSource {\r\n  User = 'user',\r\n  Programmatically = 'programmatically',\r\n  SetTimeMethod = 'setTimeMethod',\r\n}\r\n","import { TimelineBaseEvent } from './timelineBaseEvent';\r\nimport { TimelineEventSource } from '../../enums/timelineEventSource';\r\n\r\nexport class TimelineTimeChangedEvent extends TimelineBaseEvent {\r\n  /**\r\n   * new value to be set.\r\n   */\r\n  val = 0;\r\n  /**\r\n   * previous value.\r\n   */\r\n  prevVal = 0;\r\n  source: TimelineEventSource = TimelineEventSource.User;\r\n}\r\n","import { TimelineKeyframe } from '../../timelineKeyframe';\r\nimport { TimelineBaseEvent } from './timelineBaseEvent';\r\n\r\nexport class TimelineSelectedEvent extends TimelineBaseEvent {\r\n  selected: Array<TimelineKeyframe> = [];\r\n  changed: Array<TimelineKeyframe> = [];\r\n}\r\n","import { TimelineElement } from '../timelineElement';\r\nimport { TimelineBaseEvent } from './timelineBaseEvent';\r\nimport { TimelineValues } from '../timelineValues';\r\n\r\nexport class TimelineClickEvent extends TimelineBaseEvent implements TimelineValues {\r\n  args: MouseEvent;\r\n  /**\r\n   * Clicked screen position.\r\n   */\r\n  pos: DOMPoint;\r\n\r\n  /**\r\n   * Elements list under the click\r\n   */\r\n  elements: Array<TimelineElement>;\r\n  /**\r\n   * Target element\r\n   */\r\n  target: TimelineElement;\r\n  /**\r\n   * Value to be used.\r\n   */\r\n  val: number;\r\n  /**\r\n   * Snapped value.\r\n   */\r\n  snapVal: number;\r\n  /**\r\n   * Unsnapped original value.\r\n   */\r\n  originalVal: number;\r\n}\r\n","import { TimelineValues } from '../timelineValues';\r\nimport { TimelineBaseEvent } from './timelineBaseEvent';\r\nimport { TimelineElementDragState } from '../timelineElementDragState';\r\n\r\nexport class TimelineDragEvent extends TimelineBaseEvent implements TimelineValues {\r\n  args: MouseEvent;\r\n  /**\r\n   * Clicked screen position.\r\n   */\r\n  pos: DOMPoint;\r\n\r\n  /**\r\n   * Elements to be dragged as a group.\r\n   */\r\n  elements: Array<TimelineElementDragState>;\r\n  /**\r\n   * Target element\r\n   */\r\n  target: TimelineElementDragState;\r\n  /**\r\n   * Value to be used.\r\n   */\r\n  val: number;\r\n\r\n  /**\r\n   * prev value.\r\n   */\r\n  prevVal: number;\r\n\r\n  /**\r\n   * Snapped value.\r\n   */\r\n  snapVal: number;\r\n  /**\r\n   * Unsnapped original value.\r\n   */\r\n  originalVal: number;\r\n}\r\n","export enum TimelineInteractionMode {\r\n  /**\r\n   * Selection tool\r\n   */\r\n  Selection = 'selection',\r\n  /**\r\n   * Pan tool\r\n   */\r\n  Pan = 'pan',\r\n  /**\r\n   * Zoom tool.\r\n   */\r\n  Zoom = 'zoom',\r\n}\r\n","export enum TimelineElementType {\r\n  /**\r\n   * Timeline\r\n   */\r\n  Timeline = 'timeline',\r\n  /**\r\n   * Keyframes\r\n   */\r\n  Keyframe = 'keyframe',\r\n  /**\r\n   * Keyframes group\r\n   */\r\n  Group = 'group',\r\n  /**\r\n   * Row\r\n   */\r\n  Row = 'row',\r\n}\r\n","export enum TimelineCursorType {\r\n  Alias = 'alias',\r\n  AllScroll = 'all-scroll',\r\n  Auto = 'auto',\r\n  Cell = 'cell',\r\n  ContextMenu = 'context-menu',\r\n  ColResize = 'col-resize',\r\n  Copy = 'copy',\r\n  Crosshair = 'crosshair',\r\n  Default = 'default',\r\n  EResize = 'e-resize',\r\n  EWResize = 'ew-resize',\r\n  Grab = 'grab',\r\n  Grabbing = 'grabbing',\r\n  Help = 'help',\r\n  Move = 'move',\r\n  NResize = 'n-resize',\r\n  NEResize = 'ne-resize',\r\n  NESWResize = 'nesw-resize',\r\n  NSResize = 'ns-resize',\r\n  NWResize = 'nw-resize',\r\n  NWSEResize = 'nwse-resize',\r\n  NoDrop = 'no-drop',\r\n  None = 'none',\r\n  NotAllowed = 'not-allowed',\r\n  Pointer = 'pointer',\r\n  Progress = 'progress',\r\n  RowResize = 'row-resize',\r\n  SResize = 's-resize',\r\n  SEResize = 'se-resize',\r\n  SWResize = 'sw-resize',\r\n  Text = 'text',\r\n  WResize = 'w-resize',\r\n  Wait = 'wait',\r\n  ZoomIn = 'zoom-in',\r\n  ZoomOut = 'zoom-out',\r\n}\r\n","export enum TimelineCapShape {\r\n  None = 'none',\r\n  Triangle = 'triangle',\r\n  Rect = 'rect',\r\n}\r\n","/**\r\n * Timeline selection mode.\r\n */\r\nexport enum TimelineSelectionMode {\r\n  /**\r\n   * Select new items. deselect changed.\r\n   */\r\n  Normal = 'normal',\r\n  /**\r\n   * Append current selection.\r\n   */\r\n  Append = 'append',\r\n  /**\r\n   * Revert selection of a specified nodes.\r\n   */\r\n  Revert = 'revert',\r\n}\r\n","export enum TimelineEvents {\r\n  Selected = 'selected',\r\n  TimeChanged = 'timechanged',\r\n  KeyframeChanged = 'keyframeChanged',\r\n  DragStarted = 'dragStarted',\r\n  Drag = 'drag',\r\n  DragFinished = 'dragFinished',\r\n  Scroll = 'scroll',\r\n  DoubleClick = 'doubleClick',\r\n  MouseDown = 'mouseDown',\r\n}\r\n","import { TimelineConsts } from './timelineConsts';\r\nimport { TimelineCapShape } from '../enums/timelineCapShape';\r\nimport { TimelineStyle } from './styles/timelineStyle';\r\nimport { TimelineOptions } from './timelineOptions';\r\nimport { TimelineKeyframeShape } from '../enums/timelineKeyframeShape';\r\nimport { TimelineKeyframeStyle } from './styles/timelineKeyframeStyle';\r\nimport { TimelineRowStyle } from './styles/timelineRowStyle';\r\n\r\nexport const defaultTimelineStyle = {\r\n  width: 2,\r\n  marginTop: 15,\r\n  capWidth: 4,\r\n  capHeight: 10,\r\n  /**\r\n   * Draw timeline rectangular cap.\r\n   */\r\n  capType: TimelineCapShape.Rect,\r\n  strokeColor: 'DarkOrange',\r\n  fillColor: 'DarkOrange',\r\n} as TimelineStyle;\r\n\r\nexport const defaultTimelineKeyframeStyle = {\r\n  /**\r\n   * keyframe fill color.\r\n   */\r\n  fillColor: 'DarkOrange',\r\n  shape: TimelineKeyframeShape.Rhomb,\r\n  /**\r\n   * Selected keyframe fill color.\r\n   */\r\n  selectedFillColor: 'red',\r\n  strokeColor: 'black',\r\n  selectedStrokeColor: 'black',\r\n  strokeThickness: 0.2,\r\n  draggable: true,\r\n} as TimelineKeyframeStyle;\r\n\r\nexport const defaultTimelineRowStyle = {\r\n  /**\r\n   * Row height in pixels.\r\n   */\r\n  height: 24,\r\n  marginBottom: 2,\r\n  fillColor: '#252526',\r\n  /**\r\n   * Keyframes group color\r\n   */\r\n  groupFillColor: '#094771',\r\n  groupHeight: 'auto',\r\n  keyframesStyle: defaultTimelineKeyframeStyle,\r\n} as TimelineRowStyle;\r\n\r\nexport const defaultTimelineOptions = {\r\n  /**\r\n   *  Snap all selected keyframes as a bundle during the drag.\r\n   */\r\n  snapAllKeyframesOnMove: false,\r\n\r\n  /**\r\n   * Check whether snapping is enabled.\r\n   */\r\n  snapEnabled: true,\r\n\r\n  timelineStyle: defaultTimelineStyle,\r\n  /**\r\n   * approximate step for the timeline in pixels for 1 second\r\n   */\r\n  stepPx: 120,\r\n  /**\r\n   * Number of units that should fit into one stepPx. (1 second by a default)\r\n   */\r\n  stepVal: 1000,\r\n  stepSmallPx: 30,\r\n  /**\r\n   * Snap step in units. from 0 to stepVal\r\n   */\r\n  snapStep: 200,\r\n  /**\r\n   * additional left margin in pixels to start the line gauge from.\r\n   */\r\n  leftMargin: 25,\r\n  headerFillColor: '#101011',\r\n  fillColor: '#101011',\r\n\r\n  labelsColor: '#D5D5D5',\r\n  /**\r\n   * Header gauge tick color.\r\n   */\r\n  tickColor: '#D5D5D5',\r\n  /**\r\n   * Selection rectangle color.\r\n   */\r\n  selectionColor: 'White',\r\n\r\n  /**\r\n   * Default rows style.\r\n   * Can be overridden by setting style individually for each row.\r\n   */\r\n  rowsStyle: defaultTimelineRowStyle,\r\n  /**\r\n   * Header height in pixels\r\n   */\r\n  headerHeight: 30,\r\n  font: '11px sans-serif',\r\n  /**\r\n   * Default zoom level = 1. where screen pixels are equals to the corresponding stepVal stepPx.\r\n   */\r\n  zoom: 1,\r\n  /**\r\n   * Default zoom speed.\r\n   */\r\n  zoomSpeed: 0.1,\r\n  /**\r\n   * Max zoom value.\r\n   */\r\n  zoomMin: 0.1,\r\n  /**\r\n   * Min zoom value.\r\n   */\r\n  zoomMax: 8,\r\n  /**\r\n   * Set this to true in a MAC OS environment: The Meta key will be used instead of the Ctrl key.\r\n   */\r\n  controlKeyIsMetaKey: false,\r\n  /**\r\n   * Access the scroll container via this class for e.g. scroll bar styling.\r\n   */\r\n  scrollContainerClass: 'scroll-container',\r\n  /**\r\n   * keyframes group is draggable.\r\n   */\r\n  groupsDraggable: true,\r\n  /**\r\n   * keyframes group is draggable.\r\n   */\r\n  keyframesDraggable: true,\r\n  min: 0,\r\n  max: Number.MAX_VALUE,\r\n} as TimelineOptions;\r\n\r\nexport const defaultTimelineConsts: TimelineConsts = {\r\n  /**\r\n   * Auto pan speed.\r\n   */\r\n  autoPanSpeed: 50,\r\n  /**\r\n   * scroll speed when mouse drag is used (from 0 to 1)\r\n   */\r\n  scrollByDragSpeed: 0.12,\r\n  /**\r\n   * Determine whether item was clicked.\r\n   */\r\n  clickDetectionMs: 120,\r\n  /**\r\n   * Timeout to detect double click.\r\n   */\r\n  doubleClickTimeoutMs: 400,\r\n  /**\r\n   * Time in ms used to refresh scrollbars when pan is finished.\r\n   */\r\n  scrollFinishedTimeoutMs: 500,\r\n  /**\r\n   * Auto pan padding\r\n   */\r\n  autoPanByScrollPadding: 10,\r\n  /**\r\n   * Click threshold\r\n   */\r\n  clickThreshold: 3,\r\n} as TimelineConsts;\r\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n// bundle entry point\n\nimport { TimelineModel } from './timelineModel';\nimport { TimelineRow } from './timelineRow';\nimport { TimelineKeyframe } from './timelineKeyframe';\nimport { TimelineEventsEmitter } from './timelineEventsEmitter';\nimport { TimelineConsts } from './settings/timelineConsts';\nimport { TimelineRanged } from './timelineRanged';\n\n// @public styles\nimport { TimelineOptions } from './settings/timelineOptions';\n\nimport { TimelineStyleUtils } from './utils/timelineStyleUtils';\nimport { TimelineUtils } from './utils/timelineUtils';\nimport { TimelineElement } from './utils/timelineElement';\n\n// @private helper containers.\nimport { TimelineCutBoundsRectResults } from './utils/timelineCutBoundsRectResults';\nimport { TimelineSelectionResults } from './utils/timelineSelectionResults';\nimport { TimelineMouseData } from './utils/timelineMouseData';\nimport { TimelineElementDragState } from './utils/TimelineElementDragState';\nimport { TimelineDraggableData } from './utils/timelineDraggableData';\n\n// @private virtual model\nimport { TimelineModelCalcResults } from './utils/timelineModelCalcResults';\nimport { TimelineCalculatedRow } from './utils/timelineCalculatedRow';\nimport { TimelineCalculatedGroup } from './utils/timelineCalculatedGroup';\nimport { TimelineCalculatedKeyframe } from './utils/timelineCalculatedKeyframe';\n\n// @public events\nimport { TimelineKeyframeChangedEvent } from './utils/events/timelineKeyframeChangedEvent';\nimport { TimelineTimeChangedEvent } from './utils/events/timelineTimeChangedEvent';\nimport { TimelineSelectedEvent } from './utils/events/timelineSelectedEvent';\nimport { TimelineScrollEvent } from './utils/events/timelineScrollEvent';\nimport { TimelineClickEvent } from './utils/events/timelineClickEvent';\nimport { TimelineDragEvent } from './utils/events/timelineDragEvent';\n\n// @public enums\nimport { TimelineKeyframeShape } from './enums/timelineKeyframeShape';\nimport { TimelineInteractionMode } from './enums/timelineInteractionMode';\nimport { TimelineElementType } from './enums/timelineElementType';\nimport { TimelineCursorType } from './enums/timelineCursorType';\nimport { TimelineCapShape } from './enums/timelineCapShape';\nimport { TimelineEventSource } from './enums/timelineEventSource';\nimport { TimelineSelectionMode } from './enums/timelineSelectionMode';\nimport { TimelineEvents } from './enums/timelineEvents';\n// @private defaults are exposed:\nimport { defaultTimelineOptions, defaultTimelineConsts } from './settings/defaults';\n\nexport class Timeline extends TimelineEventsEmitter {\n  /**\n   * component container.\n   */\n  _container: HTMLElement | null = null;\n  /**\n   * Dynamically generated event.\n   */\n  _canvas: HTMLCanvasElement | null = null;\n  /**\n   * Dynamically generated scroll container.\n   */\n  _scrollContainer: HTMLElement | null = null;\n  /**\n   * Dynamically generated virtual scroll content.\n   */\n  _scrollContent: HTMLElement | null = null;\n  /**\n   * Rendering context\n   */\n  _ctx: CanvasRenderingContext2D | null = null;\n  /**\n   * Components settings\n   */\n  _options: TimelineOptions | null = null;\n  /**\n   * Drag start position.\n   */\n  _startPos: TimelineMouseData | null = null;\n  /**\n   * Drag scroll started position.\n   */\n  _scrollStartPos: DOMPoint | null = { x: 0, y: 0 } as DOMPoint;\n  _currentPos: TimelineMouseData | null = null;\n\n  _selectionRect: DOMRect | null = null;\n  _selectionRectEnabled = false;\n  _drag: TimelineDraggableData | null = null;\n  _startedDragWithCtrl = false;\n  _startedDragWithShiftKey = false;\n\n  _clickTimeout? = 0;\n  _lastClickTime = 0;\n  _lastClickPoint: DOMPoint | null = null;\n  _consts: TimelineConsts = defaultTimelineConsts;\n  _clickAllowed = false;\n  /**\n   * scroll finished timer reference.\n   */\n  _scrollFinishedTimerRef?: number | null = null;\n  _val = 0;\n  _pixelRatio = 1;\n  _currentZoom = 0;\n  _intervalRef?: number | null = null;\n  _autoPanLastActionDate = 0;\n  _isPanStarted = false;\n  _interactionMode = TimelineInteractionMode.Selection;\n  _lastUsedArgs: MouseEvent | TouchEvent | null = null;\n  _model: TimelineModel | null = null;\n\n  /**\n   * Create Timeline instance\n   * @param options Timeline settings.\n   * @param model Timeline model.\n   */\n  constructor(options: TimelineOptions | null = null, model: TimelineModel | null = null) {\n    super();\n    // Allow to create instance without an error to perform tests.\n    if (options || model) {\n      this.initialize(options, model);\n    }\n  }\n\n  /**\n   * Initialize Timeline\n   * @param options Timeline settings.\n   * @param model Timeline model.\n   */\n  public initialize(options: TimelineOptions | null, model: TimelineModel | null): void {\n    this._model = model;\n    if (!options || !options.id) {\n      throw new Error(`Element cannot be empty. Should be string or DOM element.`);\n    }\n\n    this._generateContainers(options.id);\n    this._options = this._setOptions(options);\n    this._subscribeOnEvents();\n    this.rescale();\n    this.redraw();\n  }\n\n  /**\n   * Generate component html.\n   * @param id container.\n   */\n  _generateContainers(id: string | HTMLElement): void {\n    if (id instanceof HTMLElement) {\n      this._container = id as HTMLElement;\n    } else {\n      this._container = document.getElementById(id);\n    }\n\n    if (!this._container) {\n      throw new Error(`Element cannot be empty. Should be string or DOM element.`);\n    }\n\n    this._scrollContainer = document.createElement('div');\n    this._scrollContent = document.createElement('div');\n    this._canvas = document.createElement('canvas');\n\n    if (!this._canvas || !this._canvas.getContext) {\n      console.log('Cannot initialize canvas context.');\n      return null;\n    }\n\n    this._container.style.position = 'relative';\n    // Generate size container:\n    this._canvas.style.cssText =\n      'image-rendering: -moz-crisp-edges;' +\n      'image-rendering: -webkit-crisp-edges;' +\n      'image-rendering: pixelated;' +\n      'image-rendering: crisp-edges;' +\n      'user-select: none;' +\n      '-webkit-user-select: none;' +\n      '-khtml-user-select: none;' +\n      '-moz-user-select: none;' +\n      '-o-user-select: none;' +\n      'user-select: none;' +\n      'touch-action: none;' +\n      'position: relative;' +\n      '-webkit-user-drag: none;' +\n      '-khtml-user-drag: none;' +\n      '-moz-user-drag: none;' +\n      '-o-user-drag: none;' +\n      'user-drag: none;' +\n      'padding: inherit';\n\n    this._scrollContainer.style.cssText = 'overflow: scroll;' + 'position: absolute;' + 'width:  100%;' + 'height:  100%;';\n\n    this._scrollContent.style.width = this._scrollContent.style.height = '100%';\n\n    // add the text node to the created div\n    this._scrollContainer.appendChild(this._scrollContent);\n    this._container.appendChild(this._scrollContainer);\n    const scrollBarWidth = this._scrollContainer.offsetWidth - this._scrollContent.clientWidth;\n    // Calculate current browser scrollbar size and add offset for the canvas\n    this._canvas.style.width = this._canvas.style.height = 'calc(100% -' + (scrollBarWidth || 17) + 'px)';\n\n    this._container.appendChild(this._canvas);\n    this._ctx = this._canvas.getContext('2d');\n  }\n\n  /**\n   * Subscribe current component on the related events.\n   */\n  _subscribeOnEvents(): void {\n    this._container.addEventListener('wheel', this._handleWheelEvent);\n\n    if (this._scrollContainer) {\n      this._scrollContainer.addEventListener('scroll', this._handleScrollEvent);\n    }\n    document.addEventListener('keyup', this._handleKeyUp, false);\n    document.addEventListener('keydown', this._handleKeyDown, false);\n    window.addEventListener('blur', this._handleBlurEvent, false);\n    window.addEventListener('resize', this._handleWindowResizeEvent, false);\n\n    this._canvas.addEventListener('touchstart', this._handleMouseDownEvent, false);\n    this._canvas.addEventListener('mousedown', this._handleMouseDownEvent, false);\n    window.addEventListener('mousemove', this._handleMouseMoveEvent, false);\n    window.addEventListener('touchmove', this._handleMouseMoveEvent, false);\n    window.addEventListener('mouseup', this._handleMouseUpEvent, false);\n    window.addEventListener('touchend', this._handleMouseUpEvent, false);\n  }\n\n  public dispose(): void {\n    // Unsubscribe all events\n    this.offAll();\n    this._container = null;\n    this._canvas = null;\n    this._scrollContainer = null;\n    this._scrollContent = null;\n    this._ctx = null;\n    this._cleanUpSelection();\n\n    this._container.removeEventListener('wheel', this._handleWheelEvent);\n\n    if (this._scrollContainer) {\n      this._scrollContainer.removeEventListener('scroll', this._handleScrollEvent);\n    }\n\n    window.removeEventListener('blur', this._handleBlurEvent);\n    window.removeEventListener('resize', this._handleWindowResizeEvent);\n    document.removeEventListener('keydown', this._handleKeyDown);\n    document.removeEventListener('keyup', this._handleKeyUp);\n    this._canvas.removeEventListener('touchstart', this._handleMouseDownEvent);\n    this._canvas.removeEventListener('mousedown', this._handleMouseDownEvent);\n    window.removeEventListener('mousemove', this._handleMouseMoveEvent);\n    window.removeEventListener('touchmove', this._handleMouseMoveEvent);\n    window.removeEventListener('mouseup', this._handleMouseUpEvent);\n    window.removeEventListener('touchend', this._handleMouseUpEvent);\n    // Stop times\n    this._stopAutoPan();\n    this._clearScrollFinishedTimer();\n  }\n\n  _handleKeyUp = (event: KeyboardEvent): void => {\n    if (this._interactionMode === TimelineInteractionMode.Zoom) {\n      this._setZoomCursor(event);\n    }\n  };\n  _handleKeyDown = (event: KeyboardEvent): void => {\n    if (this._interactionMode === TimelineInteractionMode.Zoom) {\n      this._setZoomCursor(event);\n    }\n  };\n\n  _setZoomCursor(e: MouseEvent | KeyboardEvent): void {\n    if (this._controlKeyPressed(e)) {\n      this._setCursor(TimelineCursorType.ZoomOut);\n    } else {\n      this._setCursor(TimelineCursorType.ZoomIn);\n    }\n  }\n\n  _handleBlurEvent = (): void => {\n    this._cleanUpSelection();\n  };\n  _handleWindowResizeEvent = (): void => {\n    // Rescale and redraw\n    this.rescale();\n    this.redraw();\n  };\n\n  _clearScrollFinishedTimer(): void {\n    if (this._scrollFinishedTimerRef) {\n      clearTimeout(this._scrollFinishedTimerRef);\n      this._scrollFinishedTimerRef = null;\n    }\n  }\n\n  _handleScrollEvent = (args: MouseEvent): void => {\n    this._clearScrollFinishedTimer();\n    // Set a timeout to run event 'scrolling end'.\n    this._scrollFinishedTimerRef = window.setTimeout(() => {\n      if (!this._isPanStarted) {\n        if (this._scrollFinishedTimerRef) {\n          clearTimeout(this._scrollFinishedTimerRef);\n          this._scrollFinishedTimerRef = null;\n        }\n\n        this.rescale();\n        this.redraw();\n      }\n    }, this._consts.scrollFinishedTimeoutMs);\n\n    this.redraw();\n    this._emitScrollEvent(args);\n  };\n\n  _controlKeyPressed(e: MouseEvent | KeyboardEvent | TouchEvent): boolean {\n    if (!this._options || this._options.controlKeyIsMetaKey === undefined) {\n      return e.metaKey || e.ctrlKey;\n    }\n    return this._options.controlKeyIsMetaKey || this._options.controlKeyIsMetaKey ? e.metaKey : e.ctrlKey;\n  }\n\n  _handleWheelEvent = (event: WheelEvent): void => {\n    if (this._controlKeyPressed(event)) {\n      event.preventDefault();\n      const mousePos = Math.max(0, this._getMousePos(this._canvas, event).x || 0);\n      this._zoom(TimelineUtils.sign(event.deltaY), this._options.zoomSpeed, mousePos);\n    } else {\n      this._scrollContainer.scrollTop += event.deltaY;\n      event.preventDefault();\n    }\n  };\n\n  _zoom(direction: number, speed: number, x: number): void {\n    if (speed > 0 && speed <= 1) {\n      const deltaSpeed = TimelineUtils.getDistance(this._width() / 2, x) * 0.2;\n      x = x + deltaSpeed;\n      const diff = this._width() / x;\n      const val = this._fromScreen(x);\n      const zoom = direction * this._currentZoom * speed;\n      //this._options.zoom\n      this._currentZoom = this._setZoom(this._currentZoom + zoom);\n      // Get only after zoom is set\n      const zoomCenter = this.valToPx(val);\n      let newScrollLeft = Math.round(zoomCenter - this._width() / diff);\n      if (newScrollLeft <= 0) {\n        newScrollLeft = 0;\n      }\n\n      this._rescaleInternal(newScrollLeft + this._width(), null, 'zoom');\n      if (this._scrollContainer.scrollLeft != newScrollLeft) {\n        // Scroll event will redraw the screen.\n        this._scrollContainer.scrollLeft = newScrollLeft;\n      }\n\n      this.redraw();\n    }\n  }\n\n  /**\n   * Zoom in\n   * @param speed value from 0 to 1\n   */\n  public zoomIn(speed = this._options.zoomSpeed): void {\n    this._zoom(1, speed, this._scrollContainer.clientWidth / 2);\n  }\n\n  /**\n   * Zoom out.\n   * @param speed value from 0 to 1\n   */\n  public zoomOut(speed = this._options.zoomSpeed): void {\n    this._zoom(-1, speed, this._scrollContainer.clientWidth / 2);\n  }\n\n  /**\n   * Set direct zoom value.\n   * @param zoom zoom value to set. percent 0-1 and etc.\n   * @param min min zoom.\n   * @param max max zoom.\n   * @return normalized value.\n   */\n  _setZoom(zoom: number, min: number | undefined = null, max: number | undefined = null): number {\n    min = TimelineUtils.isNumber(min) ? min : this._options ? this._options.zoomMin : null;\n    max = TimelineUtils.isNumber(max) ? max : this._options ? this._options.zoomMax : null;\n    if (TimelineUtils.isNumber(zoom)) {\n      zoom = TimelineUtils.keepInBounds(zoom, min, max);\n      zoom = zoom || 1;\n      this._currentZoom = zoom;\n      return zoom;\n    }\n\n    return zoom;\n  }\n\n  /**\n   * Set direct zoom value.\n   * @public\n   * @param zoom zoom value to set. percent 0-1 and etc.\n   * @return normalized value.\n   */\n  setZoom(zoom: number): number {\n    const prevZoom = this.getZoom();\n    if (prevZoom !== zoom) {\n      const zoomSet = this._setZoom(zoom);\n      if (prevZoom != zoomSet) {\n        this.rescale();\n        this.redraw();\n        return zoomSet;\n      }\n    }\n    return prevZoom;\n  }\n\n  /**\n   * Get current zoom level.\n   */\n  getZoom(): number {\n    if (TimelineUtils.isNumber(this._currentZoom)) {\n      return this._currentZoom || 1;\n    }\n    return 1;\n  }\n\n  /**\n   * @param args\n   */\n  _handleMouseDownEvent = (args: MouseEvent): void => {\n    let isDoubleClick = Date.now() - this._lastClickTime < this._consts.doubleClickTimeoutMs;\n    // Prevent drag of the canvas if canvas is selected as text:\n    TimelineUtils.clearBrowserSelection();\n\n    this._startPos = this._trackMousePos(this._canvas, args);\n\n    if (!this._startPos) {\n      return;\n    }\n\n    // Don't allow to perform double click if mouse was moved to far.\n    if (this._lastClickPoint && this._startPos && TimelineUtils.getDistance(this._lastClickPoint.x, this._lastClickPoint.y, this._startPos.x, this._startPos.y) > this._consts.clickThreshold) {\n      isDoubleClick = false;\n    }\n\n    this._lastClickPoint = this._startPos;\n    this._scrollStartPos = {\n      x: this._scrollContainer.scrollLeft,\n      y: this._scrollContainer.scrollTop,\n    } as DOMPoint;\n    this._clickAllowed = true;\n    const elements = this.elementFromPoint(this._startPos, Math.max(2, this._startPos.radius));\n    const target = this._findDraggable(elements, this._startPos.val);\n    const event = new TimelineClickEvent();\n    event.pos = this._startPos;\n    event.val = this._startPos.val;\n    event.originalVal = this._startPos.originalVal;\n    event.snapVal = this._startPos.snapVal;\n    event.args = args;\n    // all elements under the click:\n    event.elements = elements;\n    // target element.\n    event.target = target;\n\n    if (isDoubleClick) {\n      super.emit(TimelineEvents.DoubleClick, event);\n      return;\n    }\n\n    super.emit(TimelineEvents.MouseDown, event);\n\n    this._clickTimeout = Date.now();\n    this._lastClickTime = Date.now();\n    if (event.isPrevented()) {\n      // Mouse up will be also prevented\n      this._cleanUpSelection();\n      return;\n    }\n\n    this._currentPos = this._startPos;\n\n    // Select keyframes on mouse down\n    if (target && this._interactionMode !== TimelineInteractionMode.Zoom) {\n      this._drag = {\n        changed: false,\n        target: this._setElementDragState(target, target.val),\n        val: target.val,\n        type: target.type,\n        elements: [],\n      } as TimelineDraggableData;\n\n      if (target.type === TimelineElementType.Keyframe) {\n        this._startedDragWithCtrl = this._controlKeyPressed(args);\n        this._startedDragWithShiftKey = args.shiftKey;\n        // get all related selected keyframes if we are selecting one.\n        if (!target.keyframe.selected && !this._controlKeyPressed(args)) {\n          this._selectInternal(target.keyframe);\n        }\n        // Allow to drag all selected keyframes on a screen\n        this._drag.elements = this.getSelectedElements().map((element) => {\n          return this._setElementDragState(element, element.val);\n        });\n      } else if (target.type === TimelineElementType.Group) {\n        const keyframes = this._drag.target.keyframes;\n\n        if (keyframes && Array.isArray(keyframes)) {\n          this._drag.elements = keyframes.map((keyframe) => {\n            return this._setElementDragState(this._convertToElement(this._drag.target.row, keyframe), keyframe.val);\n          });\n        }\n      } else {\n        this._drag.elements = [this._drag.target];\n      }\n    }\n\n    this.redraw();\n  };\n\n  _setElementDragState(element: TimelineElement | TimelineElementDragState, val: number): TimelineElementDragState {\n    const state = element as TimelineElementDragState;\n    state.prevVal = state.val;\n    if (state.startedVal === undefined || state.startedVal === null) {\n      state.startedVal = val;\n    }\n    if (state.prevVal === undefined || state.prevVal === null) {\n      state.prevVal = val;\n    }\n    state.val = val;\n    return state;\n  }\n\n  isLeftButtonClicked(args: MouseEvent | TouchEvent | any): boolean {\n    return !!args && args.buttons == 1;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  _handleMouseMoveEvent = (args: MouseEvent | TouchEvent | any): void => {\n    if (!args) {\n      args = this._lastUsedArgs;\n    } else {\n      this._lastUsedArgs = args;\n    }\n    if (!args) {\n      return;\n    }\n    const isTouch = args.changedTouches && args.changedTouches.length > 0;\n    this._currentPos = this._trackMousePos(this._canvas, args);\n    if (!this._isPanStarted && this._selectionRect && this._clickTimeoutIsOver()) {\n      // TODO: implement selection by rect\n      this._selectionRectEnabled = this._interactionMode !== TimelineInteractionMode.Zoom;\n    } else {\n      this._selectionRectEnabled = false;\n    }\n\n    args = args as MouseEvent;\n    const isLeftClicked = this.isLeftButtonClicked(args);\n    if (this._startPos) {\n      if (isLeftClicked || isTouch) {\n        if (this._drag && !this._startedDragWithCtrl) {\n          const convertedVal = this._currentPos.val;\n          if (this._drag.type === TimelineElementType.Timeline) {\n            this._setTimeInternal(convertedVal, TimelineEventSource.User);\n          } else if ((this._drag.type == TimelineElementType.Keyframe || this._drag.type == TimelineElementType.Group) && this._drag.elements) {\n            const offset = Math.floor(convertedVal - this._drag.val);\n            const movedOffset = this._moveElements(offset, this._drag.elements, TimelineEventSource.User);\n            if (movedOffset !== 0) {\n              if (!this._drag.changed) {\n                this._drag.prevVal = this._drag.val;\n                const eventArgs = this._emitDragStartedEvent();\n                if (eventArgs.isPrevented()) {\n                  // Cleanup drag here, so drag finished will be ignored.\n                  this._drag = null;\n                  this._cleanUpSelection();\n                  return;\n                }\n              }\n\n              this._drag.changed = true;\n              this._drag.val += offset;\n              this._emitDragEvent();\n            }\n          }\n        }\n\n        if (this._interactionMode === TimelineInteractionMode.Pan && !this._drag) {\n          this._isPanStarted = true;\n          this._setCursor(TimelineCursorType.Grabbing);\n          // Track scroll by drag.\n          this._scrollByPan(this._startPos, this._currentPos, this._scrollStartPos);\n        } else {\n          // Track scroll by mouse or touch out of the area.\n          this._scrollBySelectionOutOfBounds(this._currentPos);\n        }\n\n        this.redraw();\n      } else {\n        // Fallback. Cancel mouse move when focus was lost and mouse down is still counted.\n        this._cleanUpSelection();\n        this.redraw();\n      }\n    } else if (!isTouch) {\n      const elements = this.elementFromPoint(this._currentPos, Math.max(2, this._currentPos.radius));\n      const target = this._findDraggable(elements, this._currentPos.val);\n      if (this._isPanStarted || this._interactionMode === TimelineInteractionMode.Pan) {\n        if (isLeftClicked) {\n          this._setCursor(TimelineCursorType.Grabbing);\n        } else {\n          this._setCursor(TimelineCursorType.Grab);\n        }\n      } else {\n        if (this._interactionMode === TimelineInteractionMode.Zoom) {\n          this._setZoomCursor(args);\n          return;\n        } else {\n          this._setCursor(TimelineCursorType.Default);\n        }\n      }\n\n      if (target) {\n        let cursor: TimelineCursorType | null = null;\n        if (target.type === TimelineElementType.Group) {\n          cursor = cursor || TimelineCursorType.EWResize;\n        } else if (target.type == TimelineElementType.Keyframe) {\n          cursor = cursor || TimelineCursorType.Pointer;\n        } else if (target.type == TimelineElementType.Timeline) {\n          cursor = cursor || TimelineCursorType.EWResize;\n        }\n\n        if (cursor) {\n          this._setCursor(cursor);\n        }\n      }\n    }\n\n    if (isTouch) {\n      args.preventDefault();\n    }\n  };\n\n  /**\n   * Move elements\n   * @param offset vector to move elements along.\n   * @param elements Element to move.\n   * @returns real moved value.\n   */\n  _moveElements(offset: number, elements: Array<TimelineElementDragState>, source: TimelineEventSource = TimelineEventSource.Programmatically): number {\n    if (!elements) {\n      return;\n    }\n    let isChanged = false;\n    if (Math.abs(offset) > 0) {\n      // Find drag min and max bounds:\n      let bounds = { min: Number.MIN_SAFE_INTEGER, max: Number.MAX_SAFE_INTEGER } as TimelineRanged;\n      bounds = TimelineUtils.setMinMax(bounds, this._options);\n      elements.forEach((p) => {\n        // find allowed bounds for the draggable items.\n        // find for each row and keyframe separately.\n        const currentBounds = TimelineUtils.setMinMax(\n          TimelineUtils.setMinMax(\n            {\n              min: bounds.min,\n              max: bounds.max,\n            },\n            p.keyframe,\n          ),\n          p.row,\n        );\n        const expectedKeyframeValue = this._options && this._options.snapAllKeyframesOnMove ? this.snapVal(p.keyframe.val) : p.keyframe.val;\n        const newPosition = expectedKeyframeValue + offset;\n        if (TimelineUtils.isNumber(currentBounds.min) && newPosition < currentBounds.min) {\n          // Return to the bounds:\n          offset = offset + TimelineUtils.getDistance(currentBounds.min, newPosition);\n        }\n        if (TimelineUtils.isNumber(currentBounds.max) && newPosition > currentBounds.max) {\n          // Return to the bounds:\n          offset = offset - TimelineUtils.getDistance(currentBounds.max, newPosition);\n        }\n      });\n\n      if (Math.abs(offset) > 0) {\n        // don't allow to move less than zero.\n        elements.forEach((element) => {\n          const prevVal = element.keyframe.val;\n          const toSet = prevVal + offset;\n          const newValue = this._setKeyframePos(element, toSet, source);\n          isChanged = newValue !== prevVal;\n        });\n      }\n\n      if (isChanged) {\n        return offset;\n      }\n    }\n\n    return 0;\n  }\n\n  _handleMouseUpEvent = (args: MouseEvent): void => {\n    if (this._startPos) {\n      //window.releaseCapture();\n      const pos = this._trackMousePos(this._canvas, args);\n\n      // Click detection.\n      if (this._clickAllowed || !this._clickTimeoutIsOver() || (this._drag && (this._startedDragWithCtrl || this._startedDragWithShiftKey))) {\n        if (this._options && this._interactionMode === TimelineInteractionMode.Zoom) {\n          const direction = this._controlKeyPressed(args) ? 1 : -1;\n          const mousePos = Math.max(0, this._getMousePos(this._canvas, args).x || 0);\n          this._zoom(direction, this._options.zoomSpeed, mousePos);\n        } else {\n          this._performClick(pos, this._drag);\n        }\n      } else if (!this._drag && this._selectionRect && this._selectionRectEnabled) {\n        if (this._interactionMode === TimelineInteractionMode.Zoom) {\n          if (this._selectionRect.width > 20) {\n            // TODO: implement zoom by screen rect.\n          }\n        } else {\n          const keyframes = this._getKeyframesByRectangle(this._selectionRect);\n          const selectionMode = args.shiftKey ? TimelineSelectionMode.Append : TimelineSelectionMode.Normal;\n          this.select(keyframes, selectionMode);\n        }\n      }\n\n      this._cleanUpSelection();\n      this.redraw();\n    }\n  };\n\n  /**\n   * client height.\n   */\n  _height(): number {\n    if (this._canvas) {\n      return this._canvas.clientHeight;\n    }\n    return 0;\n  }\n\n  /**\n   * Client width;\n   */\n  _width(): number {\n    if (this._canvas) {\n      return this._canvas.clientWidth;\n    }\n    return 0;\n  }\n\n  /**\n   * Convert virtual calculation results to keyframes\n   */\n  _mapKeyframes(array: Array<TimelineCalculatedKeyframe | TimelineElement>): Array<TimelineKeyframe> {\n    const results: Array<TimelineKeyframe> = [];\n    if (!array) {\n      return results;\n    }\n\n    for (let i = 0; i < array.length; i++) {\n      results.push((array[i] as TimelineCalculatedKeyframe).model || (array[i] as TimelineElement).keyframe);\n    }\n    return results;\n  }\n\n  /**\n   * Get all keyframes under the screen rectangle.\n   * @param screenRect screen coordinates to get keyframes.\n   */\n  _getKeyframesByRectangle(screenRect: DOMRect): TimelineKeyframe[] {\n    const keyframesModels: Array<TimelineKeyframe> = [];\n    this._forEachKeyframe((calcKeyframe) => {\n      if (TimelineUtils.isOverlap(calcKeyframe.size.x, calcKeyframe.size.y, screenRect)) {\n        keyframesModels.push(calcKeyframe.model);\n      }\n    });\n    return keyframesModels;\n  }\n\n  _performClick(pos: TimelineMouseData, drag: TimelineDraggableData): boolean {\n    let isChanged = false;\n    if (drag && drag.type === TimelineElementType.Keyframe) {\n      let mode = TimelineSelectionMode.Normal;\n      if ((this._startedDragWithCtrl && this._controlKeyPressed(pos.args)) || (this._startedDragWithShiftKey && pos.args.shiftKey)) {\n        if (this._controlKeyPressed(pos.args)) {\n          mode = TimelineSelectionMode.Revert;\n        }\n      }\n      // Reverse selected keyframe selection by a click:\n      isChanged = this._selectInternal(this._drag.target.keyframe, mode).selectionChanged || isChanged;\n\n      if (pos.args.shiftKey) {\n        // Set current timeline position if it's not a drag or selection rect small or fast click.\n        isChanged = this._setTimeInternal(pos.val, TimelineEventSource.User) || isChanged;\n      }\n    } else {\n      // deselect keyframes if any:\n      isChanged = this._selectInternal(null).selectionChanged || isChanged;\n\n      // change timeline pos:\n      // Set current timeline position if it's not a drag or selection rect small or fast click.\n      isChanged = this._setTimeInternal(pos.val, TimelineEventSource.User) || isChanged;\n    }\n\n    return isChanged;\n  }\n\n  /**\n   * Set keyframe value.\n   * @param keyframe\n   * @param value\n   * @return set value.\n   */\n  _setKeyframePos(element: TimelineElementDragState, value: number, source: TimelineEventSource = TimelineEventSource.Programmatically): number {\n    if (!element || !element.keyframe) {\n      return value;\n    }\n    value = Math.floor(value);\n    if (element.keyframe && element.keyframe.val != value) {\n      element.prevVal = element.val;\n      element.val = value;\n      element.keyframe.val = value;\n      const event = this._emitKeyframeChanged(element, source);\n      if (event.isPrevented()) {\n        element.val = event.prevVal;\n        element.keyframe.val = event.prevVal;\n      }\n\n      return value;\n    }\n\n    return value;\n  }\n\n  /**\n   * @param cursor to set.\n   */\n  _setCursor(cursor: string): void {\n    if (this._canvas.style.cursor != cursor) {\n      this._canvas.style.cursor = cursor;\n    }\n  }\n\n  /**\n   * Set pan mode\n   * @param isPan\n   */\n  public setInteractionMode(mode: TimelineInteractionMode): void {\n    if (this._interactionMode != mode) {\n      this._interactionMode = mode;\n      // Avoid any conflicts with other modes:\n      this._cleanUpSelection();\n    }\n  }\n\n  /**\n   * Get current interaction mode.\n   */\n  public getInteractionMode(): TimelineInteractionMode {\n    return this._interactionMode;\n  }\n\n  _convertToElement(row: TimelineRow, keyframe: TimelineKeyframe): TimelineElement {\n    const data = {\n      type: TimelineElementType.Keyframe,\n      val: keyframe.val,\n      keyframe: keyframe,\n      row: row,\n    } as TimelineElement;\n    return data;\n  }\n\n  public getSelectedKeyframes(): Array<TimelineKeyframe> {\n    return this._mapKeyframes(this.getSelectedElements());\n  }\n\n  public getSelectedElements(): Array<TimelineElement> {\n    const selected: Array<TimelineElement> = [];\n    this._forEachKeyframe((keyframe): void => {\n      if (keyframe && keyframe.model.selected) {\n        selected.push(this._convertToElement(keyframe.parentRow.model, keyframe.model));\n      }\n      return;\n    });\n\n    return selected;\n  }\n\n  public getAllKeyframes(): Array<TimelineKeyframe> {\n    const selected: Array<TimelineKeyframe> = [];\n    this._forEachKeyframe((keyframe): void => {\n      selected.push(keyframe.model);\n    });\n\n    return selected;\n  }\n\n  public selectAllKeyframes(): TimelineSelectionResults {\n    return this.select(this.getAllKeyframes(), TimelineSelectionMode.Normal);\n  }\n\n  public deselectAll(): TimelineSelectionResults {\n    return this.select(null);\n  }\n\n  private _changeNodeState(state: TimelineSelectionResults, node: TimelineKeyframe, value: boolean): boolean {\n    if (node.selected !== value) {\n      const selectable = typeof node.selectable === 'boolean' ? node.selectable : true;\n      if (!value || (value && selectable)) {\n        node.selected = value;\n        state.changed.push(node);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public select(nodes: TimelineKeyframe[] | TimelineKeyframe | null, mode = TimelineSelectionMode.Normal): TimelineSelectionResults {\n    const results = this._selectInternal(nodes, mode);\n    if (results.selectionChanged) {\n      this.redraw();\n    }\n    return results;\n  }\n\n  /**\n   * Select keyframes\n   * @param nodes keyframe or list of the keyframes to be selected.\n   * @param mode selection mode.\n   */\n  public _selectInternal(nodes: TimelineKeyframe[] | TimelineKeyframe | null, mode = TimelineSelectionMode.Normal): TimelineSelectionResults {\n    if (!nodes) {\n      nodes = [];\n    }\n    if (!Array.isArray(nodes)) {\n      nodes = [nodes];\n    }\n\n    const state = {\n      selectionChanged: false,\n      selected: this.getSelectedKeyframes(),\n      changed: [] as Array<any>,\n    } as TimelineSelectionResults;\n    const nodesArray = nodes as TimelineKeyframe[];\n    //const state = this.selectedSubject.getValue();\n    this.getSelectedElements();\n    if (nodesArray && mode === TimelineSelectionMode.Append) {\n      nodes.forEach((node) => {\n        const changed = this._changeNodeState(state, node, true);\n        if (changed && node.selected) {\n          state.selected.push(node);\n        }\n      });\n    } else if (nodesArray && mode === TimelineSelectionMode.Revert) {\n      nodes.forEach((node) => {\n        if (state.selected.indexOf(node) >= 0) {\n          this._changeNodeState(state, node, false);\n          TimelineUtils.deleteElement<TimelineKeyframe>(state.selected, node);\n        } else {\n          this._changeNodeState(state, node, true);\n          if (node.selected) {\n            state.selected.push(node);\n          }\n        }\n      });\n    } else if (mode === TimelineSelectionMode.Normal) {\n      const selectedItems: Array<TimelineKeyframe> = [];\n      if (nodes) {\n        nodes.forEach((node) => {\n          this._changeNodeState(state, node, true);\n          if (node.selected) {\n            selectedItems.push(node);\n          }\n        });\n      }\n\n      state.selected.forEach((node) => {\n        const exists = nodesArray.indexOf(node) >= 0;\n        // Deselect\n        if (!exists) {\n          this._changeNodeState(state, node, false);\n        }\n      });\n\n      if (state.changed.length > 0) {\n        if (selectedItems) {\n          state.selected = selectedItems;\n        } else {\n          state.selected.length = 0;\n        }\n      }\n    }\n\n    if (state.changed.length > 0) {\n      state.selectionChanged = true;\n      this._emitKeyframesSelected(state);\n    }\n\n    return state;\n  }\n\n  /**\n   * foreach visible keyframe.\n   */\n  _forEachKeyframe(callback: (keyframe: TimelineCalculatedKeyframe, index?: number, newRow?: boolean) => void): void {\n    if (!callback) {\n      return;\n    }\n    if (!this._model) {\n      return;\n    }\n\n    const calculatedModel = this._calculateModel();\n    if (!calculatedModel) {\n      return;\n    }\n\n    calculatedModel.rows.forEach((calcRow) => {\n      if (!calcRow) {\n        return;\n      }\n\n      let nextRow = true;\n      calcRow.keyframes.forEach((keyframe, keyframeIndex) => {\n        if (keyframe) {\n          callback(keyframe, keyframeIndex, nextRow);\n        }\n\n        nextRow = false;\n      });\n    });\n  }\n\n  _trackMousePos(canvas: HTMLCanvasElement, mouseArgs: MouseEvent | TouchEvent): TimelineMouseData {\n    const pos = this._getMousePos(canvas, mouseArgs) as TimelineMouseData;\n    pos.originalVal = this._mousePosToVal(pos.x, false);\n    pos.snapVal = this._mousePosToVal(pos.x, true);\n    pos.val = pos.originalVal;\n    if (this._options && this._options.snapEnabled) {\n      pos.val = pos.snapVal;\n    }\n\n    if (this._startPos) {\n      if (!this._selectionRect) {\n        this._selectionRect = {} as DOMRect;\n      }\n\n      // get the pos with the virtualization:\n      const x = Math.floor(this._startPos.x + (this._scrollStartPos.x - this.getScrollLeft()));\n      const y = Math.floor(this._startPos.y + (this._scrollStartPos.y - this.getScrollTop()));\n      this._selectionRect.x = Math.min(x, pos.x);\n      this._selectionRect.y = Math.min(y, pos.y);\n      this._selectionRect.width = Math.max(x, pos.x) - this._selectionRect.x;\n      this._selectionRect.height = Math.max(y, pos.y) - this._selectionRect.y;\n      // Once mouse was moved outside of the bounds it's not a click anymore\n      if (this._clickAllowed) {\n        this._clickAllowed = this._selectionRect.height <= this._consts.clickThreshold && this._selectionRect.width <= this._consts.clickThreshold;\n      }\n    }\n\n    return pos;\n  }\n\n  _cleanUpSelection(): void {\n    this._emitDragFinishedEvent();\n    this._startPos = null;\n    this._drag = null;\n    this._startedDragWithCtrl = false;\n    this._startedDragWithShiftKey = false;\n    this._selectionRect = null;\n    this._clickTimeout = null;\n    this._scrollStartPos = null;\n    this._isPanStarted = false;\n    this._clickAllowed = false;\n    this._stopAutoPan();\n  }\n\n  /**\n   * Check whether click timeout is over.\n   */\n  _clickTimeoutIsOver(): boolean {\n    // Duration before the selection can be tracked.\n    if (this._clickTimeout && Date.now() - this._clickTimeout > this._consts.clickDetectionMs) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Automatically pan. Scroll canvas when selection is made and mouse outside of the bounds.\n   */\n  _startAutoPan(): void {\n    if (this._consts.autoPanSpeed) {\n      if (!this._intervalRef) {\n        // Repeat move calls to\n        this._intervalRef = window.setInterval(() => {\n          this._handleMouseMoveEvent(null);\n        }, this._consts.autoPanSpeed);\n      }\n    }\n  }\n\n  /**\n   * Stop current running auto pan\n   */\n  _stopAutoPan(): void {\n    if (this._intervalRef) {\n      clearInterval(this._intervalRef);\n      this._intervalRef = null;\n    }\n\n    this._autoPanLastActionDate = null;\n  }\n\n  /**\n   * Check whether auto pan should be slowed down a bit.\n   */\n  _checkUpdateSpeedTooFast(): boolean {\n    // Slow down updated a bit.\n    if (this._autoPanLastActionDate && Date.now() - this._autoPanLastActionDate <= 10) {\n      return true;\n    }\n\n    this._autoPanLastActionDate = Date.now();\n    return false;\n  }\n\n  _scrollByPan(start: TimelineMouseData, pos: TimelineMouseData, scrollStartPos: DOMPoint): void {\n    if (!start || !pos) {\n      return;\n    }\n\n    const offsetX = Math.round(start.x - pos.x);\n    const newLeft = scrollStartPos.x + offsetX;\n\n    if (offsetX > 0) {\n      this._rescaleInternal(newLeft + this._width());\n    }\n\n    if (offsetX > 0 && newLeft + this._width() >= this._scrollContainer.scrollWidth - 5) {\n      this._scrollContainer.scrollLeft = this._scrollContainer.scrollWidth;\n    } else {\n      this._scrollContainer.scrollLeft = newLeft;\n    }\n    this._scrollContainer.scrollTop = Math.round(scrollStartPos.y + start.y - pos.y);\n  }\n\n  _scrollBySelectionOutOfBounds(pos: DOMPoint): boolean {\n    const x = pos.x;\n    const y = pos.y;\n    let isChanged = false;\n    let speedX = 0;\n    let speedY = 0;\n    // Small offset to start auto pan earlier.\n    const bounds = this._consts.autoPanByScrollPadding;\n    const isLeft = x <= bounds;\n    const isRight = x >= this._width() - bounds;\n    const isTop = y <= bounds;\n    const isBottom = y >= this._height() - bounds;\n    let newWidth = null;\n    let newHeight = null;\n    if (isLeft || isRight || isTop || isBottom) {\n      // Auto move init\n      this._startAutoPan();\n\n      if (this._checkUpdateSpeedTooFast()) {\n        return false;\n      }\n\n      const scrollSpeedMultiplier = isNaN(this._consts.scrollByDragSpeed) ? 1 : this._consts.scrollByDragSpeed;\n      if (isLeft) {\n        // Get normalized speed.\n        speedX = -TimelineUtils.getDistance(x, bounds) * scrollSpeedMultiplier;\n      } else if (isRight) {\n        // Get normalized speed:\n        speedX = TimelineUtils.getDistance(x, this._width() - bounds) * scrollSpeedMultiplier;\n        newWidth = this.getScrollLeft() + this._width() + speedX;\n      }\n\n      if (isTop) {\n        // Get normalized speed.\n        speedY = (-TimelineUtils.getDistance(x, bounds) * scrollSpeedMultiplier) / 4;\n      } else if (isBottom) {\n        // Get normalized speed:\n        speedY = (TimelineUtils.getDistance(x, this._height() - bounds) * scrollSpeedMultiplier) / 4;\n        newHeight = this._scrollContainer.scrollTop + this._height();\n      }\n    } else {\n      this._stopAutoPan();\n    }\n\n    if (newWidth || newHeight) {\n      this._rescaleInternal(newWidth, newHeight, 'scrollBySelection');\n    }\n\n    if (Math.abs(speedX) > 0) {\n      this._scrollContainer.scrollLeft += speedX;\n      isChanged = true;\n    }\n\n    if (Math.abs(speedY) > 0) {\n      this._scrollContainer.scrollTop += speedY;\n      isChanged = true;\n    }\n\n    return isChanged;\n  }\n\n  /**\n   * Convert screen pixel to value.\n   */\n  public pxToVal(px: number): number {\n    if (!this._options) {\n      return px;\n    }\n    let min = this._options.min;\n    if (!TimelineUtils.isNumber(min)) {\n      min = 0;\n    }\n    min *= this._currentZoom || 1;\n    const steps = this._options.stepVal * this._currentZoom || 1;\n    const val = min + (px / this._options.stepPx) * steps;\n    return val;\n  }\n\n  /**\n   * Convert value to local screen component coordinates.\n   */\n  _toScreenPx(val: number): number {\n    return this.valToPx(val) - this.getScrollLeft() + this._leftMargin();\n  }\n\n  /**\n   * Convert screen local coordinates to a global value info.\n   */\n  _fromScreen(px: number): number {\n    return this.pxToVal(this.getScrollLeft() + px - this._leftMargin());\n  }\n\n  /**\n   * Convert area value to global screen pixel coordinates.\n   */\n  public valToPx(val: number): number {\n    if (!this._options) {\n      return val;\n    }\n    let min = this._options.min;\n    if (!TimelineUtils.isNumber(min)) {\n      min = 0;\n    }\n    min *= this._currentZoom || 1;\n    const steps = this._options.stepVal * this._currentZoom || 1;\n    return (-min + val) * (this._options.stepPx / steps);\n  }\n\n  /**\n   * Snap a value to a nearest grid point.\n   */\n  public snapVal(val: number): number {\n    // Snap a value if configured.\n    if (this._options && this._options.snapEnabled && this._options.snapStep) {\n      const stops = this._options.snapStep;\n      const step = val / stops;\n      const stepsFit = Math.round(step);\n      const minSteps = Math.abs(this._options.min) / this._options.snapStep;\n      const minOffset = TimelineUtils.sign(this._options.min) * (minSteps - Math.floor(minSteps)) * this._options.snapStep;\n      val = Math.round(minOffset) + Math.round(stepsFit * stops);\n    }\n\n    val = TimelineUtils.keepInBounds(val, this._options.min, this._options.max);\n    return val;\n  }\n\n  _mousePosToVal(x: number, snapEnabled = false): number {\n    const mousePos = Math.min(x, this._width());\n    let convertedVal = this._fromScreen(mousePos);\n    convertedVal = Math.round(convertedVal);\n    if (snapEnabled) {\n      convertedVal = this.snapVal(convertedVal);\n    }\n\n    return convertedVal;\n  }\n\n  /**\n   * Format line gauge text.\n   * Default formatting is HMS\n   * @param ms milliseconds to convert.\n   * @param isSeconds whether seconds are passed.\n   */\n  _formatUnitsText(ms: number, isSeconds = false): string {\n    const sign = TimelineUtils.sign(ms) < 0 ? '-' : '';\n    ms = Math.abs(ms);\n    // 1- Convert to seconds:\n    let seconds = ms / 1000;\n    if (isSeconds) {\n      seconds = ms;\n    }\n\n    // const year = Math.floor(seconds / (365 * 86400));\n    // seconds = seconds % (365 * 86400);\n    //\n    // const days = Math.floor(seconds / 86400);\n    // seconds = seconds % 86400;\n    //\n    // // 2- Extract hours:\n    // const hours = Math.floor(seconds / 3600); // 3,600 seconds in 1 hour\n    // seconds = seconds % 3600; // seconds remaining after extracting hours\n    // // 3- Extract minutes:\n    // const minutes = Math.floor(seconds / 60); // 60 seconds in 1 minute\n    // // 4- Keep only seconds not extracted to minutes:\n    // seconds = seconds % 60;\n\n    const year = 0;\n    const days = 0;\n    const hours = 0;\n    const minutes = 0;\n\n    let str = '';\n    if (year) {\n      str += year + ':';\n    }\n\n    if (days) {\n      str += days + ':';\n    }\n\n    if (hours) {\n      str += hours + ':';\n    }\n\n    if (minutes) {\n      str += minutes + ':';\n    }\n\n    if (!isNaN(seconds)) {\n      str += seconds;\n    }\n\n    return sign + str;\n  }\n\n  /**\n   * Left padding of the timeline.\n   */\n  _leftMargin(): number {\n    if (!this._options) {\n      return 0;\n    }\n    return this._options.leftMargin || 0;\n  }\n\n  _renderTicks(): void {\n    const rulerActive = !!this._ctx && !!this._options && !!this._ctx.canvas && this._ctx.canvas.clientWidth > 0 && this._ctx.canvas.clientHeight > 0 && this._options.stepPx;\n    if (!rulerActive) {\n      return;\n    }\n    const screenWidth = this._width() - this._leftMargin();\n    let from = this.pxToVal(this.getScrollLeft());\n    let to = this.pxToVal(this.getScrollLeft() + screenWidth);\n    if (isNaN(from) || isNaN(to) || from === to) {\n      return;\n    }\n\n    if (to < from) {\n      const wasToVal = to;\n      to = from;\n      from = wasToVal;\n    }\n\n    const valDistance = TimelineUtils.getDistance(from, to);\n    if (valDistance <= 0) {\n      return;\n    }\n\n    // Find the nearest 'beautiful' step for a gauge.\n    // 'beautiful' step should be dividable by 1/2/5/10!\n    const step = TimelineUtils.findGoodStep(valDistance / (screenWidth / this._options.stepPx));\n    const smallStep = TimelineUtils.findGoodStep(valDistance / (screenWidth / this._options.stepSmallPx));\n\n    // Find beautiful start point:\n    const fromVal = Math.floor(from / step) * step;\n\n    // Find a beautiful end point:\n    const toVal = Math.ceil(to / step) * step + step;\n\n    if (!TimelineUtils.isNumber(step) || step <= 0 || Math.abs(toVal - fromVal) === 0) {\n      return;\n    }\n\n    let lastTextStart = 0;\n    this._ctx.save();\n    const headerHeight = TimelineStyleUtils.headerHeight(this._options);\n    const tickHeight = headerHeight / 2;\n    const smallTickHeight = headerHeight / 1.3;\n    for (let i = fromVal; i <= toVal; i += step) {\n      // local\n      const sharpPos = this._getSharp(this._toScreenPx(i));\n      this._ctx.save();\n      this._ctx.beginPath();\n      this._ctx.setLineDash([4]);\n      this._ctx.lineWidth = 1;\n      this._ctx.strokeStyle = this._options.tickColor;\n      TimelineUtils.drawLine(this._ctx, sharpPos, tickHeight, sharpPos, headerHeight);\n      this._ctx.stroke();\n\n      this._ctx.fillStyle = this._options.labelsColor;\n      if (this._options.font) {\n        this._ctx.font = this._options.font;\n      }\n\n      const text = this._formatUnitsText(i);\n      const textSize = this._ctx.measureText(text);\n\n      const textX = sharpPos - textSize.width / 2;\n      // skip text render if there is no space for it.\n      if (isNaN(lastTextStart) || lastTextStart <= textX) {\n        lastTextStart = textX + textSize.width;\n        this._ctx.fillText(text, textX, 10);\n      }\n\n      this._ctx.restore();\n      if (!TimelineUtils.isNumber(smallStep) || smallStep <= 0) {\n        continue;\n      }\n      // Draw small steps\n      for (let x = i + smallStep; x < i + step; x += smallStep) {\n        // local\n        const nextSharpPos = this._getSharp(this._toScreenPx(x));\n        this._ctx.beginPath();\n        this._ctx.lineWidth = this._pixelRatio;\n        this._ctx.strokeStyle = this._options.tickColor;\n        TimelineUtils.drawLine(this._ctx, nextSharpPos, smallTickHeight, nextSharpPos, headerHeight);\n        this._ctx.stroke();\n      }\n    }\n\n    this._ctx.restore();\n  }\n\n  /**\n   * calculate virtual mode. Determine screen positions for the elements.\n   */\n  _calculateModel(): TimelineModelCalcResults {\n    const toReturn = {\n      rows: [],\n      size: {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0,\n      } as DOMRect,\n      min: null,\n      max: null,\n      keyframes: [] as Array<TimelineCalculatedKeyframe>,\n    } as TimelineModelCalcResults;\n\n    if (!this._model) {\n      return toReturn;\n    }\n    const rows = this._model.rows;\n    if (!rows || !Array.isArray(rows) || rows.length <= 0) {\n      return toReturn;\n    }\n    let rowAbsoluteHeight = TimelineStyleUtils.headerHeight(this._options);\n    rows.forEach((row, index) => {\n      if (!row || row.hidden) {\n        return;\n      }\n\n      // draw with scroll virtualization:\n      const rowHeight = TimelineStyleUtils.getRowHeight(row, this._options);\n      const marginBottom = TimelineStyleUtils.getRowMarginBottom(row, this._options);\n      const currentRowY = rowAbsoluteHeight - (this._scrollContainer ? this._scrollContainer.scrollTop : 0);\n      rowAbsoluteHeight += rowHeight + marginBottom;\n      if (index == 0) {\n        toReturn.size.y = currentRowY;\n      }\n\n      toReturn.size.height = Math.max(rowAbsoluteHeight + rowHeight, toReturn.size.height);\n\n      const calcRow = {\n        size: { x: 0, y: currentRowY, width: this._canvas ? this._width() : 0, height: rowHeight } as DOMRect,\n        marginBottom: marginBottom,\n        model: row,\n        min: null,\n        max: null,\n        groups: [] as Array<TimelineCalculatedGroup>,\n        keyframes: [] as Array<TimelineCalculatedKeyframe>,\n      } as TimelineCalculatedRow;\n      toReturn.rows.push(calcRow);\n      if (!row.keyframes || !row.keyframes.forEach || row.keyframes.length <= 0) {\n        return;\n      }\n\n      // Get min and max ms to draw keyframe rows:\n      if (row && row.keyframes) {\n        row.keyframes.forEach((keyframe) => {\n          if (keyframe && !isNaN(keyframe.val) && !keyframe.hidden) {\n            let currentGroup: TimelineCalculatedGroup = null;\n            for (let i = 0; i < calcRow.groups.length; i++) {\n              const existingGroup = calcRow.groups[i];\n              if (keyframe.group === existingGroup.group) {\n                currentGroup = existingGroup;\n                break;\n              }\n            }\n            if (!currentGroup) {\n              currentGroup = {\n                min: null,\n                max: null,\n                group: keyframe.group,\n                keyframes: [] as Array<TimelineCalculatedKeyframe>,\n              } as TimelineCalculatedGroup;\n\n              calcRow.groups.push(currentGroup);\n            }\n            const keyframeSize = this._getKeyframePosition(keyframe, calcRow);\n            const calcKeyframe = {\n              model: keyframe,\n              parentRow: calcRow,\n              parentGroup: currentGroup,\n              size: keyframeSize,\n            } as TimelineCalculatedKeyframe;\n\n            const min = currentGroup.min == null ? keyframe.val : Math.min(keyframe.val, currentGroup.min);\n            const max = currentGroup.max == null ? keyframe.val : Math.max(keyframe.val, currentGroup.max);\n            if (!isNaN(min)) {\n              currentGroup.min = min;\n            }\n            if (!isNaN(max)) {\n              currentGroup.max = max;\n            }\n            calcRow.keyframes.push(calcKeyframe);\n            currentGroup.keyframes.push(calcKeyframe);\n            toReturn.keyframes.push(calcKeyframe);\n          }\n        });\n      }\n\n      calcRow.groups.forEach((group) => {\n        // Extend row min max bounds by a group bounds:\n        TimelineUtils.setMinMax(calcRow, group, true);\n        // get group screen coords\n        const groupRect = this._getKeyframesGroupSize(row, calcRow.size.y, group.min, group.max);\n        group.size = groupRect;\n      });\n\n      // Extend screen bounds by a current calculation:\n      TimelineUtils.setMinMax(toReturn, calcRow, true);\n    });\n    if (TimelineUtils.isNumber(toReturn.max)) {\n      toReturn.size.width = this.valToPx(toReturn.max);\n    }\n    return toReturn;\n  }\n\n  _renderRows(): void {\n    const data = this._calculateModel();\n    if (data && data.rows) {\n      this._ctx.save();\n      data.rows.forEach((rowCalc) => {\n        if (!rowCalc) {\n          return;\n        }\n\n        this._ctx.fillStyle = TimelineStyleUtils.getRowFillColor(rowCalc.model, this._options);\n        //this._ctx.fillRect(data.areaRect.x, data.areaRect.y, data.areaRect.w, data.areaRect.h);\n        // Note: bounds used instead of the clip while clip is slow!\n        const bounds = this._cutBounds(rowCalc.size);\n        if (bounds) {\n          this._ctx.fillRect(bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n\n        const keyframeLaneColor = TimelineStyleUtils.groupFillColor(rowCalc.model, this._options);\n        if (!rowCalc.groups) {\n          return;\n        }\n        rowCalc.groups.forEach((group) => {\n          // get the bounds on a canvas\n          const rectBounds = this._cutBounds(group.size);\n          if (rectBounds) {\n            this._ctx.fillStyle = keyframeLaneColor;\n            this._ctx.fillRect(rectBounds.x, rectBounds.y, rectBounds.width, rectBounds.height);\n          }\n        });\n      });\n\n      this._ctx.restore();\n    }\n  }\n\n  /**\n   * Method is used for the optimization.\n   * Only visible part should be rendered.\n   */\n  _cutBounds(rect: DOMRect): TimelineCutBoundsRectResults {\n    if (!rect) {\n      return null;\n    }\n    // default bounds: minX, maxX, minY, maxY\n    const minX = 0,\n      maxX = this._width(),\n      minY = TimelineStyleUtils.headerHeight(this._options),\n      maxY = this._width();\n\n    if (\n      TimelineUtils.isRectOverlap(rect, {\n        x: minX,\n        y: minY,\n        width: TimelineUtils.getDistance(minX, maxX),\n        height: TimelineUtils.getDistance(minY, maxY),\n      } as DOMRect)\n    ) {\n      const y = Math.max(rect.y, minY);\n      const x = Math.max(rect.x, minX);\n      const offsetW = rect.x - x;\n      const offsetH = rect.y - y;\n\n      return {\n        height: rect.height + offsetH,\n        width: rect.width + offsetW,\n        x: x,\n        y: y,\n        overlapY: Math.abs(offsetH) > 0,\n        overlapX: Math.abs(offsetW) > 0,\n      } as TimelineCutBoundsRectResults;\n    }\n    return null;\n  }\n\n  /**\n   * get keyframe group screen rect coordinates.\n   * @param row\n   * @param rowY row screen coords y position\n   */\n  _getKeyframesGroupSize(row: TimelineRow, rowY: number, minValue: number, maxValue: number): DOMRect {\n    let groupHeight: number | string = TimelineStyleUtils.rowGroupHeight(row, this._options);\n\n    const height = TimelineStyleUtils.getRowHeight(row, this._options);\n    if ((!groupHeight && groupHeight !== 0) || isNaN(groupHeight as number) || groupHeight == 'auto') {\n      groupHeight = Math.floor(height * 0.7);\n    }\n\n    if (groupHeight > height) {\n      groupHeight = height;\n    }\n\n    const margin = height - (groupHeight as number);\n    // draw keyframes rows.\n    const xMin = this._toScreenPx(minValue); // local\n    const xMax = this._toScreenPx(maxValue); // local\n\n    return {\n      x: xMin,\n      y: rowY + Math.floor(margin / 2),\n      height: groupHeight,\n      width: TimelineUtils.getDistance(xMin, xMax),\n    } as DOMRect;\n  }\n\n  _getKeyframePosition(keyframe: TimelineKeyframe, rowCalculated: TimelineCalculatedRow): DOMRect | null {\n    if (!keyframe) {\n      console.log('keyframe should be defined.');\n      return null;\n    }\n\n    const val = keyframe.val;\n    if (isNaN(val)) {\n      return null;\n    }\n\n    const rowSize = rowCalculated.size;\n    // get center of the lane:\n    const y = rowSize.y + rowSize.height / 2;\n\n    let height: number | string = TimelineStyleUtils.getKeyframeStyle(keyframe, rowCalculated.model, this._options, 'height', 'auto');\n    let width: number | string = TimelineStyleUtils.getKeyframeStyle(keyframe, rowCalculated.model, this._options, 'width', 'auto');\n\n    if (height == 'auto') {\n      height = rowSize.height / 3;\n    }\n    if (width == 'auto') {\n      width = height;\n    }\n    if (height > 0) {\n      if (!isNaN(val)) {\n        return {\n          x: Math.floor(this._toScreenPx(val)), // local\n          y: Math.floor(y),\n          height: height,\n          width: width,\n        } as DOMRect;\n      }\n    }\n\n    return null;\n  }\n\n  _renderKeyframes(): void {\n    this._forEachKeyframe((calcKeyframe): boolean => {\n      const row = calcKeyframe.parentRow.model;\n      const pos = calcKeyframe.size;\n      const keyframe = calcKeyframe.model;\n      if (pos) {\n        let x = this._getSharp(pos.x);\n        let y = pos.y;\n        const bounds = this._cutBounds({\n          x: x - pos.width / 2,\n          y: y - pos.height / 2,\n          width: pos.width,\n          height: pos.height,\n        } as DOMRect);\n        if (!bounds) {\n          return;\n        }\n\n        this._ctx.save();\n\n        // Performance FIX: use clip only  when we are in the collision! Clip is slow!\n        // Other keyframes should be hidden by bounds check.\n        if (bounds && bounds.overlapY) {\n          this._ctx.beginPath();\n          this._ctx.rect(0, TimelineStyleUtils.headerHeight(this._options), this._width(), this._width());\n          this._ctx.clip();\n        }\n\n        const shape = TimelineStyleUtils.keyframeShape(keyframe, row, this._options);\n        if (shape === TimelineKeyframeShape.None) {\n          return;\n        }\n\n        const keyframeColor = keyframe.selected ? TimelineStyleUtils.keyframeSelectedFillColor(keyframe, row, this._options) : TimelineStyleUtils.keyframeFillColor(keyframe, row, this._options);\n        const border = TimelineStyleUtils.keyframeStrokeThickness(keyframe, row, this._options);\n        let strokeColor = '';\n        if (border > 0) {\n          if (keyframe.selected) {\n            strokeColor = TimelineStyleUtils.keyframeSelectedStrokeColor(keyframe, row, this._options);\n          } else {\n            strokeColor = TimelineStyleUtils.keyframeStrokeColor(keyframe, row, this._options);\n          }\n        }\n\n        if (shape == TimelineKeyframeShape.Rhomb) {\n          this._ctx.beginPath();\n          this._ctx.translate(x, y);\n          this._ctx.rotate((45 * Math.PI) / 180);\n          if (border > 0 && strokeColor) {\n            this._ctx.fillStyle = strokeColor;\n            this._ctx.rect(-pos.width / 2, -pos.height / 2, pos.width, pos.height);\n            this._ctx.fill();\n          }\n\n          this._ctx.fillStyle = keyframeColor;\n          // draw main keyframe data with offset.\n          this._ctx.translate(border, border);\n          this._ctx.rect(-pos.width / 2, -pos.height / 2, pos.width - border * 2, pos.height - border * 2);\n          this._ctx.fill();\n        } else if (shape == TimelineKeyframeShape.Circle) {\n          this._ctx.beginPath();\n          if (border > 0 && strokeColor) {\n            this._ctx.fillStyle = strokeColor;\n            this._ctx.arc(x, y, pos.height, 0, 2 * Math.PI);\n          }\n          this._ctx.fillStyle = keyframeColor;\n          this._ctx.arc(x, y, pos.height - border, 0, 2 * Math.PI);\n          this._ctx.fill();\n        } else if (shape == TimelineKeyframeShape.Rect) {\n          this._ctx.beginPath();\n          y = y - pos.height / 2;\n          x = x - pos.width / 2;\n          if (border > 0 && strokeColor) {\n            this._ctx.fillStyle = strokeColor;\n            this._ctx.rect(x, y, pos.width, pos.height);\n            this._ctx.fill();\n          }\n\n          this._ctx.fillStyle = keyframeColor;\n          this._ctx.rect(x + border, y + border, pos.width - border, pos.height - border);\n          this._ctx.fill();\n        }\n\n        this._ctx.restore();\n      }\n    });\n  }\n\n  _renderSelectionRect(): void {\n    if (this._drag) {\n      return;\n    }\n\n    this._ctx.save();\n    const thickness = 1;\n    if (this._selectionRect && this._selectionRectEnabled) {\n      this._ctx.setLineDash([4]);\n      this._ctx.lineWidth = this._pixelRatio;\n      this._ctx.strokeStyle = this._options.selectionColor;\n      this._ctx.strokeRect(\n        this._getSharp(this._selectionRect.x, thickness),\n        this._getSharp(this._selectionRect.y, thickness),\n        Math.floor(this._selectionRect.width),\n        Math.floor(this._selectionRect.height),\n      );\n    }\n    this._ctx.restore();\n  }\n\n  _renderBackground(): void {\n    if (this._options.fillColor) {\n      this._ctx.save();\n      this._ctx.beginPath();\n      this._ctx.rect(0, 0, this._width(), this._height());\n      this._ctx.fillStyle = this._options.fillColor;\n      this._ctx.fill();\n      this._ctx.restore();\n    } else {\n      // Clear if bg not set.\n      this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n  }\n\n  _renderTimeline(): void {\n    if (!this._ctx || !this._options || !this._options.timelineStyle) {\n      return;\n    }\n    const style = this._options.timelineStyle;\n    this._ctx.save();\n    const thickness = style.width || 1;\n    this._ctx.lineWidth = thickness * this._pixelRatio;\n    const timeLinePos = this._getSharp(this._toScreenPx(this._val), thickness);\n    this._ctx.strokeStyle = style.strokeColor;\n    this._ctx.fillStyle = style.fillColor;\n    const y = style.marginTop;\n    this._ctx.beginPath();\n    TimelineUtils.drawLine(this._ctx, timeLinePos, y, timeLinePos, this._height());\n    this._ctx.stroke();\n\n    if (style.capHeight && style.capWidth) {\n      const rectSize = style.capWidth;\n      const capHeight = style.capHeight;\n      if (style.capType === TimelineCapShape.Triangle) {\n        this._ctx.beginPath();\n        this._ctx.moveTo(timeLinePos - rectSize / 2, y);\n        this._ctx.lineTo(timeLinePos + rectSize / 2, y);\n        this._ctx.lineTo(timeLinePos, capHeight);\n        this._ctx.closePath();\n        this._ctx.stroke();\n      } else if (style.capType === TimelineCapShape.Rect) {\n        this._ctx.fillRect(timeLinePos - rectSize / 2, y, rectSize, capHeight);\n        this._ctx.fill();\n      }\n    }\n\n    this._ctx.restore();\n  }\n\n  _renderHeaderBackground(): void {\n    if (!this._ctx || !this._options) {\n      return;\n    }\n    if (TimelineStyleUtils.headerHeight(this._options)) {\n      this._ctx.save();\n      // draw ticks background\n      this._ctx.lineWidth = this._pixelRatio;\n      if (this._options.headerFillColor) {\n        // draw ticks background\n        this._ctx.lineWidth = this._pixelRatio;\n        // draw header background\n        this._ctx.fillStyle = this._options.headerFillColor;\n        this._ctx.fillRect(0, 0, this._width(), TimelineStyleUtils.headerHeight(this._options));\n      } else {\n        this._ctx.clearRect(0, 0, this._width(), TimelineStyleUtils.headerHeight(this._options));\n      }\n      this._ctx.restore();\n    }\n  }\n\n  redraw(): void {\n    if (window.requestAnimationFrame) {\n      window.requestAnimationFrame(this._redrawInternal);\n    } else {\n      this._redrawInternal();\n    }\n  }\n\n  /**\n   * perform scroll to max left.\n   */\n  public scrollLeft(): void {\n    if (this._scrollContainer.scrollLeft != this._scrollContainer.scrollWidth) {\n      this._scrollContainer.scrollLeft = this._scrollContainer.scrollWidth;\n    }\n  }\n\n  /**\n   * Redraw parts of the component in the specific order.\n   */\n  _redrawInternal = (): void => {\n    if (!this._ctx) {\n      return;\n    }\n    // Rescale when animation is played out of the bounds.\n    if (this.valToPx(this._val) > this._scrollContainer.scrollWidth) {\n      this.rescale();\n      if (!this._isPanStarted && this._drag && this._drag.type !== TimelineElementType.Timeline) {\n        this.scrollLeft();\n      }\n    }\n\n    this._renderBackground();\n    this._renderRows();\n    // Render after rows\n    this._renderHeaderBackground();\n    this._renderTicks();\n    this._renderKeyframes();\n    this._renderSelectionRect();\n    this._renderTimeline();\n  };\n\n  /**\n   * Get row by y coordinate.\n   * @param posY y screen coordinate.\n   */\n  public getRowByY(posY: number): TimelineRow {\n    const model = this._calculateModel();\n    if (model && model.rows) {\n      for (let i = 0; i < model.rows.length; i++) {\n        const row = model.rows[i].size;\n        if (row && row.y >= posY && posY <= row.y + row.height) {\n          return row;\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Find sharp pixel position\n   */\n  _getSharp(pos: number, thickness = 1): number {\n    pos = Math.round(pos);\n    if (thickness % 2 == 0) {\n      return pos;\n    }\n\n    return pos + this._pixelRatio / 2;\n  }\n\n  /**\n   * Get current time:\n   */\n  public getTime(): number {\n    return this._val;\n  }\n\n  /**\n   * Set current time internal\n   * @param val value.\n   * @param source event source.\n   */\n  _setTimeInternal(val: number, source: TimelineEventSource = TimelineEventSource.Programmatically): boolean {\n    val = Math.round(val);\n    if (val < this._options.min) {\n      val = this._options.min;\n    }\n\n    if (this._val != val) {\n      const prevVal = this._val;\n      const timelineEvent = new TimelineTimeChangedEvent();\n      timelineEvent.val = val;\n      timelineEvent.prevVal = prevVal;\n      timelineEvent.source = source;\n      this._val = val;\n      this.emit(TimelineEvents.TimeChanged, timelineEvent);\n      if (timelineEvent.isPrevented()) {\n        this._val = prevVal;\n        return false;\n      }\n      return true;\n    }\n\n    return false;\n  }\n\n  public setTime(val: number): boolean {\n    // don't allow to change time during drag:\n    if (this._drag && this._drag.type === TimelineElementType.Timeline) {\n      return false;\n    }\n\n    const isChanged = this._setTimeInternal(val, TimelineEventSource.SetTimeMethod);\n    if (isChanged) {\n      this.rescale();\n      this.redraw();\n    }\n\n    return isChanged;\n  }\n\n  public getOptions(): TimelineOptions {\n    return this._options;\n  }\n\n  public setScrollLeft(value: number): void {\n    if (this._scrollContainer) {\n      this._scrollContainer.scrollLeft = value;\n    }\n  }\n\n  public setScrollTop(value: number): void {\n    if (this._scrollContainer) {\n      this._scrollContainer.scrollTop = value;\n    }\n  }\n\n  public getScrollLeft(): number {\n    return this._scrollContainer ? this._scrollContainer.scrollLeft : 0;\n  }\n\n  public getScrollTop(): number {\n    return this._scrollContainer ? this._scrollContainer.scrollTop : 0;\n  }\n\n  /**\n   * Set options and render the component.\n   * Options will be merged with the defaults and control invalidated\n   */\n  public setOptions(toSet: TimelineOptions): TimelineOptions {\n    this._options = this._setOptions(toSet);\n    this.rescale();\n    this.redraw();\n    // Merged options:\n    return this._options;\n  }\n\n  _setOptions(toSet: TimelineOptions): TimelineOptions {\n    this._options = this._mergeOptions(toSet);\n    // Normalize and validate spans per value.\n    this._options.snapStep = TimelineUtils.keepInBounds(this._options.snapStep, 0, this._options.stepVal);\n    this._currentZoom = this._setZoom(this._options.zoom, this._options.zoomMin, this._options.zoomMax);\n    this._options.min = TimelineUtils.isNumber(this._options.min) ? this._options.min : 0;\n    this._options.max = TimelineUtils.isNumber(this._options.max) ? this._options.max : Number.MAX_VALUE;\n    if (this._scrollContainer) {\n      const classList = this._scrollContainer.classList;\n      if (this._options.scrollContainerClass && classList.contains(this._options.scrollContainerClass)) {\n        classList.add(this._options.scrollContainerClass);\n      }\n      if (this._options.fillColor) {\n        this._scrollContainer.style.background = this._options.fillColor;\n      }\n    }\n    return this._options;\n  }\n\n  public getModel(): TimelineModel {\n    return this._model;\n  }\n\n  /**\n   * Set model and redraw application.\n   * @param data\n   */\n  public setModel(data: TimelineModel): void {\n    this._model = data;\n    this.rescale();\n    this.redraw();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  _getMousePos(canvas: HTMLCanvasElement, e: TouchEvent | MouseEvent | any): TimelineMouseData {\n    let radius = 1;\n    let clientX = 0;\n    let clientY = 0;\n    if (e.changedTouches && e.changedTouches.length > 0) {\n      // TODO: implement better touch support\n      const touch = e.changedTouches[0];\n      clientX = touch.clientX;\n      clientY = touch.clientY;\n      radius = Math.max(radius, touch.radiusX, touch.radiusY);\n    } else {\n      clientX = e.clientX;\n      clientY = e.clientY;\n    }\n\n    const rect = canvas.getBoundingClientRect(), // abs. size of element\n      scaleX = canvas.width / this._pixelRatio / rect.width, // relationship bitmap vs. element for X\n      scaleY = canvas.height / this._pixelRatio / rect.height; // relationship bitmap vs. element for Y\n\n    const x = (clientX - rect.left) * scaleX;\n    const y = (clientY - rect.top) * scaleY;\n    // scale mouse coordinates after they have been adjusted to be relative to element\n    return {\n      x: x,\n      y: y,\n      radius,\n      args: e,\n    } as TimelineMouseData;\n  }\n\n  /**\n   * Apply container div size to the container on changes detected.\n   */\n  _updateCanvasScale(): boolean {\n    if (!this._scrollContainer || !this._ctx) {\n      console.log('control should be initialized first');\n      return;\n    }\n    let changed = false;\n    const width = this._scrollContainer.clientWidth * this._pixelRatio;\n    const height = this._scrollContainer.clientHeight * this._pixelRatio;\n    if (Math.floor(width) != Math.floor(this._ctx.canvas.width)) {\n      this._ctx.canvas.width = width;\n      changed = true;\n    }\n\n    if (Math.floor(height) != Math.floor(this._ctx.canvas.height)) {\n      this._ctx.canvas.height = height;\n      changed = true;\n    }\n\n    if (changed) {\n      this._ctx.setTransform(this._pixelRatio, 0, 0, this._pixelRatio, 0, 0);\n    }\n    return changed;\n  }\n\n  /**\n   * Rescale and update size of the container.\n   */\n  public rescale(): void {\n    this._rescaleInternal();\n  }\n\n  _rescaleInternal(newWidth: number | null = null, newHeight: number | null = null, scrollMode = 'default'): void {\n    this._updateCanvasScale();\n    const data = this._calculateModel();\n    if (data && data.size) {\n      const additionalOffset = this._options.stepPx;\n      newWidth = newWidth || 0;\n      // not less than current timeline position\n      const timelineGlobalPos = this.valToPx(this._val);\n      let timelinePos = 0;\n      if (timelineGlobalPos > this._width()) {\n        if (scrollMode == 'scrollBySelection') {\n          timelinePos = Math.floor(timelineGlobalPos + this._width() + (this._options.stepPx || 0));\n        } else {\n          timelinePos = Math.floor(timelineGlobalPos + this._width() / 1.5);\n        }\n      }\n      const keyframeW = data.size.width + this._leftMargin() + additionalOffset;\n\n      newWidth = Math.max(\n        newWidth,\n        // keyframes size\n        keyframeW,\n        // not less than current scroll position\n        this.getScrollLeft() + this._width(),\n        timelinePos,\n      );\n\n      const minWidthPx = Math.floor(newWidth) + 'px';\n      if (minWidthPx != this._scrollContent.style.minWidth) {\n        this._scrollContent.style.minWidth = minWidthPx;\n      }\n\n      newHeight = Math.max(Math.floor(data.size.height + this._height() * 0.2), this._scrollContainer.scrollTop + this._height() - 1, Math.round(newHeight || 0));\n\n      const h = newHeight + 'px';\n      if (this._scrollContent.style.minHeight != h) {\n        this._scrollContent.style.minHeight = h;\n      }\n    }\n  }\n\n  /**\n   * get draggable element.\n   * Filter elements and get first element by a priority.\n   * @param Array\n   * @param val current mouse value\n   */\n  _findDraggable(elements: Array<TimelineElement>, val: number | null = null): TimelineElement {\n    // filter and sort: Timeline, individual keyframes, groups (distance).\n    const getPriority = (type: TimelineElementType): number => {\n      if (type === TimelineElementType.Timeline) {\n        return 1;\n      } else if (type === TimelineElementType.Keyframe) {\n        return 2;\n      } else if (type === TimelineElementType.Group) {\n        return 3;\n      }\n      return -1;\n    };\n    const filteredElements = elements.filter((element) => {\n      if (!element) {\n        return false;\n      }\n      if (element.type === TimelineElementType.Keyframe) {\n        if (!TimelineStyleUtils.keyframeDraggable(element.keyframe, element.row, this._options)) {\n          return false;\n        }\n      } else if (element.type === TimelineElementType.Group) {\n        if (!TimelineStyleUtils.groupDraggable(element.row, this._options)) {\n          return false;\n        }\n      } else if (element.type === TimelineElementType.Row) {\n        return false;\n      }\n      return true;\n    });\n    const sortDraggable = (a: TimelineElement, b: TimelineElement): number => {\n      let prioA = getPriority(a.type);\n      let prioB = getPriority(b.type);\n      if (prioA === prioB) {\n        if (val === null) {\n          return 0;\n        }\n\n        // Sort by distance\n        prioA = TimelineUtils.getDistance(a.val, val);\n        prioB = TimelineUtils.getDistance(b.val, val);\n        if (prioA === prioB) {\n          return 0;\n        }\n        return prioA < prioB ? 1 : -1;\n      }\n\n      return prioA < prioB ? 1 : -1;\n    };\n    const sorted = filteredElements.sort(sortDraggable);\n    if (sorted.length > 0) {\n      return sorted[sorted.length - 1];\n    }\n\n    return null;\n  }\n\n  /**\n   * get all clickable elements by a screen point.\n   */\n  public elementFromPoint(pos: DOMPoint, clickRadius = 2): Array<TimelineElement> {\n    clickRadius = Math.max(clickRadius, 1);\n    const toReturn: Array<TimelineElement> = [];\n\n    if (!pos) {\n      return toReturn;\n    }\n\n    const headerHeight = TimelineStyleUtils.headerHeight(this._options);\n    // Check whether we can drag timeline.\n    const timeLinePos = this._toScreenPx(this._val);\n    let width = 0;\n    if (this._options && this._options.timelineStyle) {\n      const timelineStyle = this._options.timelineStyle;\n      width = Math.max((timelineStyle.width || 1) * this._pixelRatio, (timelineStyle.capWidth || 0) * this._pixelRatio || 1) + clickRadius;\n    }\n    // Allow to select timeline only by half of a header to allow select by a selector top most keyframes row.\n    if (pos.y <= headerHeight * 0.5 || (pos.x >= timeLinePos - width / 2 && pos.x <= timeLinePos + width / 2)) {\n      toReturn.push({\n        val: this._val,\n        type: TimelineElementType.Timeline,\n      } as TimelineElement);\n    }\n    const snap = this._options.snapEnabled;\n    if (pos.y >= headerHeight && this._options.keyframesDraggable) {\n      this._forEachKeyframe((calcKeyframe, index, isNextRow): void => {\n        // Check keyframes group overlap\n        if (isNextRow) {\n          const rowOverlapped = TimelineUtils.isOverlap(pos.x, pos.y, calcKeyframe.parentRow.size);\n          if (rowOverlapped) {\n            const row = {\n              val: this._mousePosToVal(pos.x, snap),\n              keyframes: calcKeyframe.parentRow.model.keyframes,\n              type: TimelineElementType.Row,\n              row: calcKeyframe.parentRow.model,\n            } as TimelineElement;\n            toReturn.push(row);\n          }\n          if (calcKeyframe.parentRow.groups) {\n            calcKeyframe.parentRow.groups.forEach((group) => {\n              const keyframesGroupOverlapped = TimelineUtils.isOverlap(pos.x, pos.y, group.size);\n              if (keyframesGroupOverlapped) {\n                const keyframesModels = this._mapKeyframes(group.keyframes);\n                const groupElement = {\n                  val: this._mousePosToVal(pos.x, snap),\n                  type: TimelineElementType.Group,\n                  group: group,\n                  row: calcKeyframe.parentRow.model,\n                  keyframes: keyframesModels,\n                } as TimelineElement;\n\n                const snapped = this.snapVal(group.min);\n                // get snapped mouse pos based on a min value.\n                groupElement.val += group.min - snapped;\n                toReturn.push(groupElement);\n              }\n            });\n          }\n        }\n\n        const keyframePos = calcKeyframe.size;\n        if (keyframePos) {\n          const dist = TimelineUtils.getDistance(keyframePos.x, keyframePos.y, pos.x, pos.y);\n          if (dist <= keyframePos.height + clickRadius) {\n            toReturn.push({\n              keyframe: calcKeyframe.model,\n              keyframes: [calcKeyframe.model],\n              val: calcKeyframe.model.val,\n              row: calcKeyframe.parentRow.model,\n              type: TimelineElementType.Keyframe,\n            } as TimelineElement);\n          }\n        }\n      });\n    }\n    return toReturn;\n  }\n\n  /**\n   * Merge options with the defaults.\n   */\n  _mergeOptions(fromArg: TimelineOptions): TimelineOptions {\n    fromArg = fromArg || ({} as TimelineOptions);\n    // Apply incoming options to default. (override default)\n    // Deep clone default options:\n    const toArg = JSON.parse(JSON.stringify(defaultTimelineOptions));\n    // Merge options with the default.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const mergeOptionsDeep = (to: any, from: any): void => {\n      if (!to || !from) {\n        return;\n      }\n      // eslint-disable-next-line prefer-const\n      for (let key in from) {\n        if (Object.prototype.hasOwnProperty.call(from, key)) {\n          if (from[key] !== undefined) {\n            if (typeof from[key] === 'object') {\n              if (!to[key]) {\n                to[key] = from[key];\n              } else {\n                mergeOptionsDeep(to[key], from[key]);\n              }\n            } else {\n              to[key] = from[key];\n            }\n          }\n        }\n      }\n    };\n\n    mergeOptionsDeep(toArg, fromArg);\n    return toArg;\n  }\n\n  /**\n   * Subscribe on time changed.\n   */\n  public onTimeChanged(callback: (eventArgs: TimelineTimeChangedEvent) => void): void {\n    this.on(TimelineEvents.TimeChanged, callback);\n  }\n\n  /**\n   * Subscribe on drag started event.\n   */\n  public onDragStarted(callback: (eventArgs: TimelineDragEvent) => void): void {\n    this.on(TimelineEvents.DragStarted, callback);\n  }\n\n  /**\n   * Subscribe on drag event.\n   */\n  public onDrag(callback: (eventArgs: TimelineDragEvent) => void): void {\n    this.on(TimelineEvents.Drag, callback);\n  }\n\n  /**\n   * Subscribe on drag finished event.\n   */\n  public onDragFinished(callback: (eventArgs: TimelineDragEvent) => void): void {\n    this.on(TimelineEvents.DragFinished, callback);\n  }\n\n  /**\n   * Subscribe on double click.\n   */\n  public onDoubleClick(callback: (eventArgs: TimelineClickEvent) => void): void {\n    this.on(TimelineEvents.DoubleClick, callback);\n  }\n\n  /**\n   * Subscribe on keyframe changed event.\n   */\n  public onKeyframeChanged(callback: (eventArgs: TimelineKeyframeChangedEvent) => void): void {\n    this.on(TimelineEvents.KeyframeChanged, callback);\n  }\n\n  /**\n   * Subscribe on drag finished event.\n   */\n  public onMouseDown(callback: (eventArgs: TimelineClickEvent) => void): void {\n    this.on(TimelineEvents.MouseDown, callback);\n  }\n\n  public onSelected(callback: (eventArgs: TimelineSelectedEvent) => void): void {\n    this.on(TimelineEvents.Selected, callback);\n  }\n\n  /**\n   * Subscribe on scroll event\n   */\n  public onScroll(callback: (eventArgs: TimelineScrollEvent) => void): void {\n    this.on(TimelineEvents.Scroll, callback);\n  }\n\n  _emitScrollEvent(args: MouseEvent | null): TimelineScrollEvent {\n    const scrollEvent = {\n      args: args,\n      scrollLeft: this.getScrollLeft(),\n      scrollTop: this.getScrollTop(),\n      scrollHeight: this._scrollContainer.scrollHeight,\n      scrollWidth: this._scrollContainer.scrollWidth,\n    } as TimelineScrollEvent;\n    super.emit(TimelineEvents.Scroll, scrollEvent);\n    return scrollEvent;\n  }\n\n  _emitKeyframeChanged(element: TimelineElementDragState, source: TimelineEventSource = TimelineEventSource.Programmatically): TimelineKeyframeChangedEvent {\n    const args = new TimelineKeyframeChangedEvent();\n    args.val = element.val;\n    args.prevVal = element.prevVal;\n    args.target = element;\n    args.source = source;\n    this.emit(TimelineEvents.KeyframeChanged, args);\n    return args;\n  }\n\n  _emitDragStartedEvent(): TimelineDragEvent {\n    const args = this._getDragEventArgs();\n    this.emit(TimelineEvents.DragStarted, args);\n    if (args.isPrevented()) {\n      this._preventDrag(args, this._drag, true);\n    }\n    return args;\n  }\n\n  _emitDragFinishedEvent(): TimelineDragEvent {\n    if (this._drag && this._drag.changed) {\n      const args = this._getDragEventArgs();\n      this.emit(TimelineEvents.DragFinished, args);\n      if (args.isPrevented()) {\n        this._preventDrag(args, this._drag, true);\n      }\n      return args;\n    }\n\n    return null;\n  }\n\n  _preventDrag(dragArgs: TimelineDragEvent, data: TimelineDraggableData, toStart = false): void {\n    if (dragArgs.elements) {\n      dragArgs.elements.forEach((element) => {\n        const toSet = toStart ? element.startedVal : element.prevVal;\n        this._setKeyframePos(element, toSet);\n      });\n    }\n    data.val = data.prevVal;\n    dragArgs.val = dragArgs.prevVal;\n  }\n\n  _emitDragEvent(): TimelineDragEvent {\n    if (!this._drag) {\n      return null;\n    }\n    const args = this._getDragEventArgs();\n    this.emit(TimelineEvents.Drag, args);\n    if (args.isPrevented()) {\n      this._preventDrag(args, this._drag, false);\n    }\n    return args;\n  }\n\n  _emitKeyframesSelected(state: TimelineSelectionResults): TimelineSelectedEvent {\n    const args = new TimelineSelectedEvent();\n    args.selected = state.selected;\n    args.changed = state.changed;\n    this.emit(TimelineEvents.Selected, args);\n    return args;\n  }\n\n  _getDragEventArgs(): TimelineDragEvent {\n    const draggableArguments = new TimelineDragEvent();\n    if (!this._drag) {\n      return draggableArguments;\n    }\n    draggableArguments.val = this._currentPos.val;\n    draggableArguments.originalVal = this._currentPos.originalVal;\n    draggableArguments.snapVal = this._currentPos.snapVal;\n    draggableArguments.pos = this._currentPos;\n    draggableArguments.elements = this._drag.elements;\n    draggableArguments.target = this._drag.target;\n    return draggableArguments;\n  }\n}\n"],"names":["TimelineEventsEmitter","topic","callback","_subscriptions","push","filter","event","length","args","forEach","TimelineKeyframeShape","TimelineStyleUtils","keyframeStyle","rowStyle","options","propertyName","defaultValue","reverseOrder","styles","style","undefined","value","keyframesStyle","globalRowStyle","rowsStyle","results","keyframe","shape","getKeyframeStyle","Rhomb","color","getRowStyle","headerHeight","denominators","TimelineUtils","ctx","x1","y1","x2","y2","moveTo","lineTo","val","isNaN","Number","isFinite","array","element","index","indexOf","splice","x","y","rectangle","width","height","originalStep","divisionCheck","step","lastDistance","pow","getPowArgument","i","denominator","calculatedStep","Math","distance","getDistance","min","max","isNumber","to","from","shrink","fromMin","getMin","toMin","isFromMinNumber","isToMinNumber","fromMax","getMax","toMax","isFromMaxNumber","isToMaxNumber","rect","rect2","console","log","sqrt","abs","p","window","getSelection","removeAllRanges","doc","document","selection","empty","toCheck","category","s","sign","floor","zerosCount","TimelineBaseEvent","_prevented","TimelineKeyframeChangedEvent","TimelineEventSource","TimelineTimeChangedEvent","User","TimelineSelectedEvent","TimelineClickEvent","TimelineDragEvent","TimelineInteractionMode","TimelineElementType","TimelineCursorType","TimelineCapShape","TimelineSelectionMode","TimelineEvents","defaultTimelineStyle","marginTop","capWidth","capHeight","capType","Rect","strokeColor","fillColor","defaultTimelineKeyframeStyle","selectedFillColor","selectedStrokeColor","strokeThickness","draggable","defaultTimelineRowStyle","marginBottom","groupFillColor","groupHeight","defaultTimelineOptions","snapAllKeyframesOnMove","snapEnabled","timelineStyle","stepPx","stepVal","stepSmallPx","snapStep","leftMargin","headerFillColor","labelsColor","tickColor","selectionColor","font","zoom","zoomSpeed","zoomMin","zoomMax","controlKeyIsMetaKey","scrollContainerClass","groupsDraggable","keyframesDraggable","MAX_VALUE","defaultTimelineConsts","autoPanSpeed","scrollByDragSpeed","clickDetectionMs","doubleClickTimeoutMs","scrollFinishedTimeoutMs","autoPanByScrollPadding","clickThreshold","Timeline","model","Selection","_interactionMode","Zoom","_setZoomCursor","_cleanUpSelection","rescale","redraw","_clearScrollFinishedTimer","_scrollFinishedTimerRef","setTimeout","_isPanStarted","clearTimeout","_consts","_emitScrollEvent","_controlKeyPressed","preventDefault","mousePos","_getMousePos","_canvas","_zoom","deltaY","_options","_scrollContainer","scrollTop","isDoubleClick","Date","now","_lastClickTime","clearBrowserSelection","_startPos","_trackMousePos","_lastClickPoint","_scrollStartPos","scrollLeft","_clickAllowed","elements","elementFromPoint","radius","target","_findDraggable","pos","originalVal","snapVal","DoubleClick","MouseDown","_clickTimeout","isPrevented","_currentPos","_drag","changed","_setElementDragState","type","Keyframe","_startedDragWithCtrl","_startedDragWithShiftKey","shiftKey","selected","_selectInternal","getSelectedElements","map","Group","keyframes","Array","isArray","_convertToElement","row","_lastUsedArgs","isTouch","changedTouches","_selectionRect","_clickTimeoutIsOver","_selectionRectEnabled","isLeftClicked","isLeftButtonClicked","convertedVal","_setTimeInternal","offset","movedOffset","_moveElements","prevVal","eventArgs","_emitDragStartedEvent","_emitDragEvent","Pan","_setCursor","Grabbing","_scrollByPan","_scrollBySelectionOutOfBounds","Grab","Default","cursor","EWResize","Pointer","direction","_performClick","_getKeyframesByRectangle","selectionMode","Append","Normal","select","_ctx","valToPx","_val","scrollWidth","_renderBackground","_renderRows","_renderHeaderBackground","_renderTicks","_renderKeyframes","_renderSelectionRect","_renderTimeline","initialize","_model","id","Error","_generateContainers","_setOptions","_subscribeOnEvents","HTMLElement","_container","getElementById","createElement","_scrollContent","getContext","position","cssText","appendChild","scrollBarWidth","offsetWidth","clientWidth","addEventListener","_handleWheelEvent","_handleScrollEvent","_handleKeyUp","_handleKeyDown","_handleBlurEvent","_handleWindowResizeEvent","_handleMouseDownEvent","_handleMouseMoveEvent","_handleMouseUpEvent","offAll","removeEventListener","_stopAutoPan","e","ZoomOut","ZoomIn","metaKey","ctrlKey","speed","deltaSpeed","_width","diff","_fromScreen","_currentZoom","_setZoom","zoomCenter","newScrollLeft","round","_rescaleInternal","keepInBounds","prevZoom","getZoom","zoomSet","state","startedVal","buttons","source","Programmatically","isChanged","bounds","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","setMinMax","currentBounds","expectedKeyframeValue","newPosition","toSet","newValue","_setKeyframePos","clientHeight","screenRect","keyframesModels","_forEachKeyframe","calcKeyframe","isOverlap","size","drag","mode","Revert","selectionChanged","_emitKeyframeChanged","data","_mapKeyframes","parentRow","getAllKeyframes","node","selectable","nodes","getSelectedKeyframes","nodesArray","_changeNodeState","deleteElement","selectedItems","exists","_emitKeyframesSelected","calculatedModel","_calculateModel","rows","calcRow","nextRow","keyframeIndex","canvas","mouseArgs","_mousePosToVal","getScrollLeft","getScrollTop","_emitDragFinishedEvent","_intervalRef","setInterval","clearInterval","_autoPanLastActionDate","start","scrollStartPos","offsetX","newLeft","speedX","speedY","isLeft","isRight","isTop","isBottom","_height","newWidth","newHeight","_startAutoPan","_checkUpdateSpeedTooFast","scrollSpeedMultiplier","px","steps","_leftMargin","pxToVal","stops","stepsFit","minSteps","minOffset","ms","isSeconds","seconds","year","days","hours","minutes","str","rulerActive","screenWidth","wasToVal","valDistance","findGoodStep","smallStep","fromVal","toVal","ceil","lastTextStart","save","tickHeight","smallTickHeight","sharpPos","_getSharp","_toScreenPx","beginPath","setLineDash","lineWidth","strokeStyle","drawLine","stroke","fillStyle","text","_formatUnitsText","textSize","measureText","textX","fillText","restore","nextSharpPos","_pixelRatio","toReturn","rowAbsoluteHeight","hidden","rowHeight","getRowHeight","getRowMarginBottom","currentRowY","groups","currentGroup","existingGroup","group","keyframeSize","_getKeyframePosition","parentGroup","groupRect","_getKeyframesGroupSize","rowCalc","getRowFillColor","_cutBounds","fillRect","keyframeLaneColor","rectBounds","minX","maxX","minY","maxY","isRectOverlap","offsetW","offsetH","overlapY","overlapX","rowY","minValue","maxValue","rowGroupHeight","margin","xMin","xMax","rowCalculated","rowSize","clip","keyframeShape","None","keyframeColor","keyframeSelectedFillColor","keyframeFillColor","border","keyframeStrokeThickness","keyframeSelectedStrokeColor","keyframeStrokeColor","translate","rotate","PI","fill","Circle","arc","thickness","strokeRect","clearRect","timeLinePos","rectSize","Triangle","closePath","requestAnimationFrame","_redrawInternal","posY","timelineEvent","emit","TimeChanged","SetTimeMethod","_mergeOptions","classList","contains","add","background","clientX","clientY","touch","radiusX","radiusY","getBoundingClientRect","scaleX","scaleY","left","top","setTransform","scrollMode","_updateCanvasScale","additionalOffset","timelineGlobalPos","timelinePos","keyframeW","minWidthPx","minWidth","h","minHeight","getPriority","filteredElements","keyframeDraggable","groupDraggable","Row","sortDraggable","a","b","prioA","prioB","sorted","sort","clickRadius","snap","isNextRow","rowOverlapped","keyframesGroupOverlapped","groupElement","snapped","keyframePos","dist","fromArg","toArg","JSON","parse","stringify","mergeOptionsDeep","key","Object","prototype","hasOwnProperty","call","on","DragStarted","Drag","DragFinished","KeyframeChanged","Selected","Scroll","scrollEvent","scrollHeight","_getDragEventArgs","_preventDrag","dragArgs","toStart","draggableArguments"],"sourceRoot":""}